name: Get variables for environment

on:
  workflow_call:
    inputs:
      environment:
        description:  >-
          A string to hardcode an environment and disable autodetection.
        required: false
        type: string
      baseRef:
        description:  >-
          Pull request base reference. This is available in the context of a job triggered
          with a pull_request event.
        required: false
        type: string
    secrets:
      token:
        description: >-
          Token used to authenicate to the github container registry.  This is used
          to download the image that the job runs in.
        required: true
    outputs:
      environment:
        description: "The environment to configure"
        value: ${{ jobs.set-variables.outputs.environment }}
      kayobeImageTag:
        description: "The version of the kayobe docker image to use"
        value: ${{ jobs.set-variables.outputs.kayobeImageTag }}
      runs_on:
        description: "List of tags to use to select the runner"
        value: ${{ jobs.set-variables.outputs.runs_on }}
      branch:
        description: "Branch of kayobe-config to checkout when forcing the environment"
        value: ${{ jobs.set-variables.outputs.branch }}
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  set-variables:
    # We don't really care where this job runs.
    runs-on: [self-hosted, linux]
    permissions:
      contents: read
      packages: read
    container: ubuntu:focal
    outputs:
      environment: ${{ steps.setvars.outputs.environment }}
      kayobeImageTag: ${{ steps.setvars.outputs.kayobeImageTag }}
      runs_on: ${{ steps.setvars.outputs.runs_on }}
      branch: ${{ steps.setvars.outputs.branch }}
    steps:
      - uses: actions/github-script@v6
        id: setvars
        env:
          ENVIRONMENT: ${{ inputs.environment }}
          BASE_REF: ${{ inputs.baseRef }}
        with:
          script: |
            const envToDetails = {
              "habrok": {
                  "runs_on": ["self-hosted"],
                  "kayobeImageTag": "v0.0.1",
                  "branch": "rug/wallaby"
              },
              "merlin": {
                  "runs_on": ["self-hosted"],
                  "kayobeImageTag": "v0.0.1",
                  "branch": "rug/wallaby"
              }
            }
            if (process.env.ENVIRONMENT && process.env.ENVIRONMENT != 'autodetect') {
              // Manual override has highest precedence, else fall back to autodetection
              var environment = process.env.ENVIRONMENT
            }  else {
              throw 'Could not determine environment from branch name'
            }
            core.setOutput("environment", environment)
            core.setOutput("kayobeImageTag", envToDetails[environment].kayobeImageTag)
            core.setOutput("runs_on", envToDetails[environment].runs_on)
            core.setOutput("branch", envToDetails[environment].branch)
