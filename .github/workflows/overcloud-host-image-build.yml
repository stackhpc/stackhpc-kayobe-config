---
name: Build overcloud host images
on:
  workflow_dispatch:
    inputs:
      centos:
        description: Build CentOS Stream 8
        type: boolean
        default: true
      rocky8:
        description: Build Rocky Linux 8
        type: boolean
        default: true
      rocky9:
        description: Build Rocky Linux 9
        type: boolean
        default: true
      ubuntu-focal:
        description: Build Ubuntu 20.04 Focal
        type: boolean
        default: true
      ubuntu-jammy:
        description: Build Ubuntu 22.04 Jammy
        type: boolean
        default: true

env:
  ANSIBLE_FORCE_COLOR: True
jobs:
  generate-tag:
    name: Generate overcloud host image tag
    if: github.repository == 'stackhpc/stackhpc-kayobe-config'
    runs-on: [self-hosted, stackhpc-kayobe-config-kolla-builder]
    permissions: {}
    outputs:
      host_image_tag: ${{ steps.host_image_tag.outputs.host_image_tag }}
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      openstack_release: ${{ steps.openstack_release.outputs.openstack_release }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Determine OpenStack release
        id: openstack_release
        run: |
          BRANCH=$(awk -F'=' '/defaultbranch/ {print $2}' .gitreview)
          echo "openstack_release=${BRANCH}" | sed "s|stable/||" >> $GITHUB_OUTPUT

      # Generate a tag to apply to all built overcloud host images.
      - name: Generate overcloud host image tag
        id: host_image_tag
        run: |
          echo "host_image_tag=$(date +${{ steps.openstack_release.outputs.openstack_release }}-%Y%m%dT%H%M%S)" >> $GITHUB_OUTPUT

      # Dynamically define job matrix.
      # We need a separate matrix entry for each distribution, when the relevant input is true.
      # https://stackoverflow.com/questions/65384420/how-do-i-make-a-github-action-matrix-element-conditional
      # The resultant matrix will have the following structure, filtered by inputs:
      # matrix:
      #   distro: [centos, rocky8, rocky9, ubuntu-focal, ubuntu-jammy]
      #   include:
      #     - distro: centos
      #       os_distribution: centos
      #       os_release: 8-stream
      #     - distro: rocky8
      #       os_distribution: rocky
      #       os_release: 8
      #     - distro: rocky9
      #       os_distribution: rocky
      #       os_release: 9
      #     - distro: ubuntu-focal
      #       os_distribution: ubuntu
      #       os_release: focal
      #     - distro: ubuntu-jammy
      #       os_distribution: ubuntu
      #       os_release: jammy
      - name: Generate build matrix
        id: set-matrix
        run: |
          comma=""
          echo -n "matrix={\"distro\": [" >> $GITHUB_OUTPUT
          if [[ ${{ inputs.centos }} == 'true' ]]; then
            echo -n "$comma\"centos\"" >> $GITHUB_OUTPUT
            comma=", "
          fi
          if [[ ${{ inputs.rocky8 }} == 'true' ]]; then
            echo -n "$comma\"rocky8\"" >> $GITHUB_OUTPUT
            comma=", "
          fi
          if [[ ${{ inputs.rocky9 }} == 'true' ]]; then
            echo -n "$comma\"rocky9\"" >> $GITHUB_OUTPUT
            comma=", "
          fi
          if [[ ${{ inputs.ubuntu-focal }} == 'true' ]]; then
            echo -n "$comma\"ubuntu-focal\"" >> $GITHUB_OUTPUT
            comma=", "
          fi
          if [[ ${{ inputs.ubuntu-jammy }} == 'true' ]]; then
            echo -n "$comma\"ubuntu-jammy\"" >> $GITHUB_OUTPUT
          fi
          echo -n "]" >> $GITHUB_OUTPUT
          echo -n ", \"include\": [" >> $GITHUB_OUTPUT
          comma=""
          if [[ ${{ inputs.centos }} == 'true' ]]; then
            echo -n "$comma{\"distro\": \"centos\", \"os_distribution\": \"centos\", \"os_release\": \"8-stream\"}" >> $GITHUB_OUTPUT
            comma=", "
          fi
          if [[ ${{ inputs.rocky8 }} == 'true' ]]; then
            echo -n "$comma{\"distro\": \"rocky8\", \"os_distribution\": \"rocky\", \"os_release\": \"8\"}" >> $GITHUB_OUTPUT
            comma=", "
          fi
          if [[ ${{ inputs.rocky9 }} == 'true' ]]; then
            echo -n "$comma{\"distro\": \"rocky9\", \"os_distribution\": \"rocky\", \"os_release\": \"9\"}" >> $GITHUB_OUTPUT
            comma=", "
          fi
          if [[ ${{ inputs.ubuntu-focal }} == 'true' ]]; then
            echo -n "$comma{\"distro\": \"ubuntu-focal\", \"os_distribution\": \"ubuntu\", \"os_release\": \"focal\"}" >> $GITHUB_OUTPUT
            comma=", "
          fi
          if [[ ${{ inputs.ubuntu-jammy }} == 'true' ]]; then
            echo -n "$comma{\"distro\": \"ubuntu-jammy\", \"os_distribution\": \"ubuntu\", \"os_release\": \"jammy\"}" >> $GITHUB_OUTPUT
          fi
          echo "]}" >> $GITHUB_OUTPUT

      - name: Display container image tag
        run: |
          echo "${{ steps.host_image_tag.outputs.host_image_tag }}"

  overcloud-host-image-build:
    name: Build overcloud host images
    if: github.repository == 'stackhpc/stackhpc-kayobe-config'
    runs-on: [self-hosted, stackhpc-kayobe-config-kolla-builder]
    strategy:
      matrix: ${{ fromJson(needs.generate-tag.outputs.matrix) }}
      fail-fast: false
    needs:
      - generate-tag
    steps:
      - uses: actions/checkout@v3
        with:
          path: src/kayobe-config

      - name: Clone StackHPC Kayobe repository
        uses: actions/checkout@v3
        with:
          repository: stackhpc/kayobe
          ref: refs/heads/stackhpc/${{ needs.generate-tag.outputs.openstack_release }}
          path: src/kayobe

      # FIXME: Failed in kolla-ansible : Ensure the latest version of pip is installed
      - name: Install dependencies
        run: |
          sudo dnf -y install python3-virtualenv

      - name: Setup networking
        run: |
          if ! ip l show breth1 >/dev/null 2>&1; then
              sudo ip l add breth1 type bridge
          fi
          sudo ip l set breth1 up
          if ! ip a show breth1 | grep 192.168.33.3/24; then
              sudo ip a add 192.168.33.3/24 dev breth1
          fi
          if ! ip l show dummy1 >/dev/null 2>&1; then
              sudo ip l add dummy1 type dummy
          fi
          sudo ip l set dummy1 up
          sudo ip l set dummy1 master breth1

      # FIXME: Without this workaround we see the following issue after the runner is power cycled:
      # TASK [MichaelRigart.interfaces : RedHat | ensure network service is started and enabled] ***
      #   Unable to start service network: Job for network.service failed because the control process exited with error code.
      #   See \"systemctl status network.service\" and \"journalctl -xe\" for details.
      - name: Kill dhclient (workaround)
        run: |
          (sudo killall dhclient || true) && sudo systemctl restart network

      - name: Install Kayobe
        run: |
          mkdir -p venvs &&
          pushd venvs &&
          python3 -m venv kayobe &&
          source kayobe/bin/activate &&
          pip install -U pip &&
          pip install ../src/kayobe

      - name: Bootstrap the control host
        run: |
          source venvs/kayobe/bin/activate &&
          source src/kayobe-config/kayobe-env --environment ci-builder &&
          kayobe control host bootstrap

      - name: Configure the seed host
        run: |
          source venvs/kayobe/bin/activate &&
          source src/kayobe-config/kayobe-env --environment ci-builder &&
          kayobe seed host configure
        env:
          KAYOBE_VAULT_PASSWORD: ${{ secrets.KAYOBE_VAULT_PASSWORD }}

      - name: Create bifrost_httpboot Docker volume
        run: |
          if [[ $(sudo docker volume ls -f Name=bifrost_httpboot -q | wc -l) = 0 ]]; then
            sudo docker volume create bifrost_httpboot
          fi

      - name: Build an overcloud host image
        run: |
          source venvs/kayobe/bin/activate &&
          source src/kayobe-config/kayobe-env --environment ci-builder &&
          kayobe overcloud host image build --force-rebuild \
          -e os_distribution=${{ matrix.os_distribution }} \
          -e os_release="${{ matrix.os_release }}" \
          -e stackhpc_overcloud_dib_name=overcloud-${{ matrix.os_distribution }}-"${{ matrix.os_release }}"
        env:
          KAYOBE_VAULT_PASSWORD: ${{ secrets.KAYOBE_VAULT_PASSWORD }}

      - name: Upload overcloud host image artifact
        run: |
          source venvs/kayobe/bin/activate &&
          source src/kayobe-config/kayobe-env --environment ci-builder &&
          kayobe playbook run \
          src/kayobe-config/etc/kayobe/ansible/pulp-host-image-upload.yml \
          -e image_path=/opt/kayobe/images/overcloud-${{ matrix.os_distribution }}-"${{ matrix.os_release }}" \
          -e host_image_tag=${{ needs.generate-tag.outputs.host_image_tag }} \
          -e os_distribution=${{ matrix.os_distribution }} \
          -e os_release="${{ matrix.os_release }}"
        env:
          KAYOBE_VAULT_PASSWORD: ${{ secrets.KAYOBE_VAULT_PASSWORD }}
