stages:
  - build
  - run

include: ../.gitlab.environment.yml

variables:
 GIT_DEPTH: 0
 # Also needs: privileged: true, volumes = ["/certs/client", "/cache"] in /etc/gitlab-runner/config.toml
 DOCKER_TLS_CERTDIR: "/certs"
 GIT_SUBMODULE_STRATEGY: recursive
 # Fixes: Ansible is being run in a world writable directory, see:
 # https://github.com/stackhpc/kayobe-automation/issues/2
 FF_DISABLE_UMASK_FOR_DOCKER_EXECUTOR: "true"

 # Common configuration for pull requests
 # Disabled until service account is created...
 #KAYOBE_AUTOMATION_PR_TYPE: gitlab
 KAYOBE_AUTOMATION_PR_TITLE: "[kayobe-automation] Updates to kayobe config (job: $CI_JOB_NAME)"
 KAYOBE_AUTOMATION_PR_GITLAB_PROJECT_ID: "$CI_PROJECT_ID"
 # NOTE: username is arbitrary and doesn't affect auth
 KAYOBE_AUTOMATION_PR_REMOTE: "https://service-account:$KAYOBE_AUTOMATION_PR_AUTH_TOKEN@gitlab.com/$CI_PROJECT_PATH"

 # Name of the docker image that contains rally
 RALLY_DOCKER_IMAGE: "$CI_REGISTRY/$CI_PROJECT_PATH/rally-docker"

before_script:
  - |
    # Workaround for lack of default variables: https://gitlab.com/gitlab-org/gitlab-runner/-/issues/1867
    # CI_COMMIT_BRANCH is not set for merge requests
    if [ ! -z "$CI_COMMIT_BRANCH" ]; then
      echo "Setting target branch to: $CI_COMMIT_BRANCH"
      export KAYOBE_AUTOMATION_PR_TARGET_BRANCH="$CI_COMMIT_BRANCH"
    elif [ ! -z "$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME" ]; then
      echo "Setting target branch to: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME"
      export KAYOBE_AUTOMATION_PR_TARGET_BRANCH="$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME"
    fi

