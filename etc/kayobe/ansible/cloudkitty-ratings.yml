---
- name: Register Cloudkitty ratings
  hosts: controllers[0]
  gather_facts: no
  environment: "{{ openstack_auth_env }}"
  vars:
    venv: "{{ virtualenv_path }}/cloudkitty"
    openstack: "{{ venv }}/bin/openstack"
    # Mappings associated with a field.
    # Each item is a dict with the following fields:
    # * service
    # * name
    # * mappings
    # The mappings field is a list, where each item is a dict with the following fields:
    # * value
    # * cost
    # * group (optional)
    # * type
    # For example, for per-instance rating:
    # - service: instance
    #   name: flavor_id
    #   mappings:
    #     - value: small
    #       cost: 1.0
    #       group: instance_uptime_flavor_id
    #       type: flat
    #     - value: large
    #       cost: 2.0
    #       group: instance_uptime_flavor_id
    #       type: flat
    cloudkitty_hashmap_field_mappings:
      # NOTE(priteau): The service value needs to match the name or alt_name of
      # metric declared in metrics.yml.
      - service: instance
        name: flavor_id
        mappings:
          - value: "9cabb0ec-d284-481b-a162-753ae8438050" # general.v1.tiny
            cost: 0.25
            type: flat
          - value: "8f163d83-d362-4b5e-94bb-69d2f241b3c0" # general.v1.small
            cost: 0.5
            type: flat
          - value: "b4f7e554-c3c7-4acb-93be-ca37320d1454" # general.v1.medium
            cost: 1.0
            type: flat
          - value: "bfaa6f5e-4e93-4a9f-98f3-047374028cf2" # general.v1.large
            cost: 2.0
            type: flat
          - value: "3edcdd3a-236d-4960-a7fb-9dfa2254da4c" # general.v1.xlarge
            cost: 4.0
            type: flat
          - value: "db217e48-eab1-4c6b-b9f9-b1b86a959798" # general.v1.xxlarge
            cost: 8.0
            type: flat
          - value: "d6f67f14-73e3-4a42-81c0-e891db5e0545" # general.v1.xxxlarge
            cost: 16.0
            type: flat
          - value: "2dc22e08-cca0-4cf6-b510-7feef4b8308a" # baremetal
            cost: 20.0
            type: flat
          - value: "01e6cf5a-4ab0-4258-bbb1-0cf3de0b89fb" # baremetal_omnipath
            cost: 40.0
            type: flat
          - value: "b0d3c96d-d3f8-43b8-8a4c-5b3199be9bf2" # baremetal_gpu
            cost: 80.0
            type: flat
          - value: "e51a8cfc-075a-4b49-827d-f6d2dcc2139d" # baremetal_memory
            cost: 160.0
            type: flat
          - value: "b9bcbbe1-540e-4613-ad5a-82f3e22d28a6" # hypervisor
            cost: 20.0
            type: flat
    # Mappings not associated with a field.
    # Each item is a dict with the following fields:
    # * service
    # * cost
    # * group (optional)
    # * type
    # For example, for image image storage (MB)
    # - service: image.size
    #   cost: 0.1
    #   group: volume_ceph
    #   type: flat
    cloudkitty_hashmap_service_mappings: []
    cloudkitty_hashmap_field_mapping_services: "{{ cloudkitty_hashmap_field_mappings | map(attribute='service') | list }}"
    cloudkitty_hashmap_service_mapping_services: "{{ cloudkitty_hashmap_service_mappings | map(attribute='service') | list }}"
  tasks:
    - name: Set up openstack cli virtualenv
      pip:
        virtualenv: "{{ venv }}"
        name:
          - python-cloudkittyclient
          - python-openstackclient
        state: latest
        extra_args: "{% if pip_upper_constraints_file %}-c {{ pip_upper_constraints_file }}{% endif %}"
      run_once: true

    - name: List modules
      command: >
        {{ openstack }} rating module list -f json
      register: modules
      changed_when: false

    - name: Enable hashmap module
      command: >
        {{ openstack }} rating module enable hashmap
      when: not (modules.stdout | from_json | selectattr('Module', 'equalto', 'hashmap') | first)['Enabled'] | bool
      changed_when: true

    - name: List hashmap services
      command: >
        {{ openstack }} rating hashmap service list -f json
      register: hashmap_services
      changed_when: false

    - name: Create hashmap services
      vars:
        existing_services: "{{ hashmap_services.stdout | from_json | map(attribute='Name') | list }}"
      command: >
        {{ openstack }} rating hashmap service create {{ item }}
      loop: "{{ (cloudkitty_hashmap_field_mapping_services + cloudkitty_hashmap_service_mapping_services) | unique | list }}"
      when: item not in existing_services
      changed_when: true

    - name: List hashmap groups
      command: >
        {{ openstack }} rating hashmap group list -f json
      register: hashmap_groups
      changed_when: false

    - name: Create hashmap groups
      vars:
        existing_groups: "{{ hashmap_groups.stdout | from_json | map(attribute='Name') | list }}"
        field_mapping_groups: "{{ query('subelements', cloudkitty_hashmap_field_mappings, 'mappings') | map(attribute='1.group') | select('defined') | list }}"
        service_mapping_groups: "{{ cloudkitty_hashmap_service_mappings | map(attribute='group') | select('defined') | list }}"
      command: >
        {{ openstack }} rating hashmap group create {{ item }}
      loop: "{{ (field_mapping_groups + service_mapping_groups) | unique | list }}"
      when:
        - item is not none and item | length > 0
        - item not in existing_groups
      changed_when: true

    # List again to get IDs of created services.
    - name: List hashmap services
      command: >
        {{ openstack }} rating hashmap service list -f json
      register: hashmap_services
      changed_when: false

    # List again to get IDs of created groups.
    - name: List hashmap groups
      command: >
        {{ openstack }} rating hashmap group list -f json
      register: hashmap_groups
      changed_when: false

    - name: List hashmap fields
      vars:
        service_id: "{{ (hashmap_services.stdout | from_json | selectattr('Name', 'equalto', item) | first)['Service ID'] }}"
      command: >
        {{ openstack }} rating hashmap field list {{ service_id }} -f json
      loop: "{{ cloudkitty_hashmap_field_mapping_services }}"
      register: hashmap_fields
      changed_when: false

    # Field mappings

    - name: Include field mappings
      include_tasks: cloudkitty-ratings-field-mappings.yml
      vars:
        fields_result: "{{ hashmap_fields.results | selectattr('item', 'equalto', field.service) | first }}"
        fields: "{{ fields_result.stdout | from_json }}"
        service_id: "{{ (hashmap_services.stdout | from_json | selectattr('Name', 'equalto', field.service) | first)['Service ID'] }}"
      loop: "{{ cloudkitty_hashmap_field_mappings }}"
      loop_control:
        loop_var: field

    # Service mappings

    - name: List hashmap service mappings
      vars:
        service_id: "{{ (hashmap_services.stdout | from_json | selectattr('Name', 'equalto', item) | first)['Service ID'] }}"
      command: >
        {{ openstack }} rating hashmap mapping list -f json --service-id {{ service_id }}
      loop: "{{ cloudkitty_hashmap_service_mapping_services }}"
      register: hashmap_mappings
      changed_when: false

    - name: Create hashmap service mappings
      vars:
        mappings_result: "{{ hashmap_mappings.results | selectattr('item', 'equalto', item.service) | first }}"
        mappings: "{{ mappings_result.stdout | from_json }}"
        service_id: "{{ (hashmap_services.stdout | from_json | selectattr('Name', 'equalto', item.service) | first)['Service ID'] }}"
        group_id: "{{ (hashmap_groups.stdout | from_json | selectattr('Name', 'equalto', item.group) | first)['Group ID'] | default('') }}"
      command: >
        {{ openstack }} rating hashmap mapping create
        {{ item.cost }}
        --service-id {{ service_id }}
        {% if group_id | length > 0 %}--group-id {{ group_id }}{% endif %}
        --type {{ item.type }}
      loop: "{{ cloudkitty_hashmap_service_mappings }}"
      # Condition could be better, but should work with current values.
      when: mappings | length == 0
      changed_when: true
