---
- name: Deploy RADOS gateway usage exporter
  hosts: monitoring
  gather_facts: false
  vars:
    venv: "{{ virtualenv_path }}/openstack"
  tasks:
    - name: Set up openstack cli virtualenv
      pip:
        virtualenv: "{{ venv }}"
        virtualenv_command: "/usr/bin/python3 -m venv"
        name:
          - python-openstackclient
        state: latest
        extra_args: "{% if pip_upper_constraints_file %}-c {{ pip_upper_constraints_file }}{% endif %}"
      run_once: true
      delegate_to: "{{ groups['controllers'][0] }}"
      vars:
        ansible_host: "{{ hostvars[groups['controllers'][0]].ansible_host }}"
      when: stackhpc_enable_radosgw_usage_exporter

    - name: Check ec2 credential for admin
      command: >
        {{ venv }}/bin/openstack
        ec2 credentials list --user admin
        --format json
      environment: "{{ openstack_auth_env }}"
      register: credential_check
      delegate_to: "{{ groups['controllers'][0] }}"
      vars:
        ansible_host: "{{ hostvars[groups['controllers'][0]].ansible_host }}"
      run_once: true
      when: stackhpc_enable_radosgw_usage_exporter

    - name: Create ec2 credential if there's none
      command: >
        {{ venv }}/bin/openstack
        ec2 credentials create --user admin
        --format json
      environment: "{{ openstack_auth_env }}"
      delegate_to: "{{ groups['controllers'][0] }}"
      vars:
        ansible_host: "{{ hostvars[groups['controllers'][0]].ansible_host }}"
      run_once: true
      when:
        - stackhpc_enable_radosgw_usage_exporter
        - "{{ credential_check.stdout == [] }}"

    - name: Query ec2 credential for admin
      command: >
        {{ venv }}/bin/openstack
        ec2 credentials list --user admin
        --format json
      environment: "{{ openstack_auth_env }}"
      delegate_to: "{{ groups['controllers'][0] }}"
      vars:
        ansible_host: "{{ hostvars[groups['controllers'][0]].ansible_host }}"
      register: credential
      run_once: true
      when: stackhpc_enable_radosgw_usage_exporter

    - name: Get object storage endpoint
      command: >
        {{ venv }}/bin/openstack
        endpoint list --service object-store --interface internal
        --format json
      environment: "{{ openstack_auth_env }}"
      delegate_to: "{{ groups['controllers'][0] }}"
      vars:
        ansible_host: "{{ hostvars[groups['controllers'][0]].ansible_host }}"
      register: endpoint
      run_once: true
      when: stackhpc_enable_radosgw_usage_exporter

    - name: Ensure radosgw_usage_exporter container is running
      community.docker.docker_container:
        name: radosgw_usage_exporter
        image: ghcr.io/stackhpc/radosgw_usage_exporter:0.1.0
        network_mode: host
        env:
          RADOSGW_SERVER: "{{ radosgw_server }}"
          ADMIN_ENTRY: admin
          ACCESS_KEY: "{{ ec2.Access }}"
          SECRET_KEY: "{{ ec2.Secret }}"
      vars:
        ec2: "{{ credential.stdout | from_json | first }}"
        host: "{{ endpoint.stdout | from_json | first }}"
        radosgw_server: "{{ host.URL | regex_replace('(https?://)([^:/]+):([0-9]+)/.*', '\\1\\2:\\3') }}" # Drop Swift api address
      become: true
      when: stackhpc_enable_radosgw_usage_exporter
