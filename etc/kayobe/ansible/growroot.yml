---
# Custom playbook to grow the partition and LVM PV of the root VG. This allows
# for expansion of LVs in that VG. This may be used as a pre-overcloud host
# configure hook.
#
# Variables:
# * growroot_group: Host pattern against which to target the playbook. Default
#                   is 'overcloud'.
# * growroot_vg: Name of the VG containing the PV to grow. Default is 'rootvg'.

- name: Grow root PV
  hosts: "{{ growroot_group | default('overcloud') }}"
  # Avoid using facts because this may be used as a pre overcloud host
  # configure hook, and we don't want to populate the fact cache (if one is in
  # use) with the bootstrap user's context.
  gather_facts: false
  tags:
    - growroot
  vars:
    ansible_user: "{{ bootstrap_user }}"
    # We can't assume that a virtualenv exists at this point, so use the system
    # python interpreter.
    ansible_python_interpreter: /usr/bin/python3
    # Work around no known_hosts entry on first boot.
    ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
    # Name of the LVM VG containing the root PV.
    growroot_vg: "rootvg"
    # Don't assume facts are present.
    os_family: "{{ ansible_facts.os_family | default('Debian' if os_distribution == 'ubuntu' else 'RedHat') }}"

  tasks:
    - name: Check if growpart is installed
      shell:
        cmd: type growpart
      changed_when: false
      failed_when: false
      check_mode: false
      register: growpart_check
      become: true

    - name: Ensure growpart is installed
      package:
        name: "{% if os_family == 'RedHat' %}cloud-utils-growpart{% else %}cloud-guest-utils{% endif %}"
        state: present
        cache_valid_time: "{{ apt_cache_valid_time if os_family == 'Debian' else omit }}"
        update_cache: "{{ True if os_family == 'Debian' else omit }}"
      become: True
      when: growpart_check.rc != 0

    - name: Get root PV device
      command: "pvs --select vg_name={{ growroot_vg }} --reportformat json"
      register: pvs
      become: True
      changed_when: False
      check_mode: false

    - name: Fail if root PV device not found
      fail:
        msg: >
          Expected LVM physical volume devices not found in volume group {{ growroot_vg }}
      when: (pvs.stdout | from_json).report[0].pv | length == 0

    - name: Grow partition
      command: "growpart {{ disk }} {{ part_num }}"
      vars:
        pv: "{{ pvs.stdout | from_json }}"
        disk_tmp: "{{ pv.report[0].pv[0].pv_name[:-1] }}"
        disk: "{{ disk_tmp[:-1] if disk_tmp[-1] == 'p' else disk_tmp }}"
        part_num: "{{ pv.report[0].pv[0].pv_name[-1] }}"
      become: True
      failed_when: "growpart.rc != 0 and 'NOCHANGE' not in growpart.stdout"
      changed_when: "'NOCHANGE' not in growpart.stdout"
      register: growpart

    - name: Grow LVM PV
      command: "pvresize {{ disk }}"
      vars:
        pv: "{{ pvs.stdout | from_json }}"
        disk: "{{ pv.report[0].pv[0].pv_name }}"
      become: True
#      when: "'NOCHANGE' not in growpart.stdout"
# Commenting out the conditional because growpart is already triggered by cloud-init - hence it emits NOCHANGE
# Cloud-Inits growpart implementation has a bug https://bugzilla.redhat.com/show_bug.cgi?id=2122575
# PVresize is not being triggered
