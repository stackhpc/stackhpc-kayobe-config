---
- name: Reset RabbitMQ
  hosts: controllers
  become: True
  vars:
    - container_name: rabbitmq
  tasks:
    - name: Inspect the {{ container_name }} container
      shell:
        cmd: "docker container inspect --format '{{ '{{' }} .State.Running {{ '}}' }}' {{ container_name }}"
      register: inspection

    - name: Ensure the {{ container_name }} container is running
      command: "docker start {{ container_name }}"
      when: inspection.stdout == 'false'

    - name: Wait for the {{ container_name }} container to reach state 'Running'
      shell:
        cmd: "docker container inspect --format '{{ '{{' }} .State.Running {{ '}}' }}' {{ container_name }}"
      register: result
      until: result.stdout == 'true'
      retries: 10
      delay: 6

    - name: Wait for the rabbitmq node to automatically start on container start
      command: "docker exec -it {{ container_name }} /bin/bash -c 'rabbitmqctl wait --pid 1 --timeout 60'"
      when: inspection.stdout == 'false'

    - name: Stop app
      command: "docker exec -it {{ container_name }} /bin/bash -c 'rabbitmqctl stop_app'"

    - name: Force reset app
      command: "docker exec -it {{ container_name }} /bin/bash -c 'rabbitmqctl force_reset'"

    - name: Start app
      command: "docker exec -it {{ container_name }} /bin/bash -c 'rabbitmqctl start_app'"
