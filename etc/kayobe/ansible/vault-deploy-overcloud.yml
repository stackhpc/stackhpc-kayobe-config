---
# Required for uri module to work with self-signed certificates and for systems to trust
# the self-signed CA
- name: Install CA on controllers
  hosts: controllers
  tasks:
    - name: Copy the intermediate CA
      copy:
        src: "{{ kayobe_env_config_path }}/vault/OS-TLS-ROOT.pem"
        dest: "{{ '/etc/pki/ca-trust/source/anchors/OS-TLS-ROOT.crt' if ansible_facts.os_family == 'RedHat' else '/usr/local/share/ca-certificates/OS-TLS-ROOT.crt' }}"
        mode: 0644
      become: true

    - name: update system CA
      become: true
      shell: "{{ 'update-ca-trust' if ansible_facts.os_family == 'RedHat' else 'update-ca-certificates' }}"

- name: Deploy HashiCorp Vault on the overcloud
  any_errors_fatal: true
  gather_facts: true
  hosts: controllers
  vars:
    consul_bind_interface: "{{ internal_net_name | net_interface }}"
    vault_bind_address: "{{ internal_net_name | net_ip }}"
  tasks:
    - name: Set a fact about the virtualenv on the remote system
      set_fact:
        virtualenv: "{{ ansible_python_interpreter | dirname | dirname }}"
      when:
        - ansible_python_interpreter is defined
        - not ansible_python_interpreter.startswith('/bin/')
        - not ansible_python_interpreter.startswith('/usr/bin/')

    - name: Ensure Python hvac module is installed
      pip:
        name: hvac
        state: latest
        extra_args: "{% if pip_upper_constraints_file %}-c {{ pip_upper_constraints_file }}{% endif %}"
        virtualenv: "{{ virtualenv is defined | ternary(virtualenv, omit) }}"
      become: "{{ virtualenv is not defined }}"

    - name: Ensure /opt/kayobe/vault exists
      file:
        path: /opt/kayobe/vault
        state: directory

    - name: Template out TLS key and cert
      copy:
        # Within the Hashicorp Vault container these uids & gids map to the vault user
        src: "{{ kayobe_env_config_path }}/vault/{{ item }}"
        dest: "/opt/kayobe/vault/{{ item }}"
        owner: 100
        group: 1000
        mode: 0600
      loop:
        - "{% if kolla_internal_fqdn != kolla_internal_vip_address %}{{ kolla_internal_fqdn }}{% else %}overcloud{% endif %}.crt"
        - "{% if kolla_internal_fqdn != kolla_internal_vip_address %}{{ kolla_internal_fqdn }}{% else %}overcloud{% endif %}.key"
      become: True

    - import_role:
        name: stackhpc.hashicorp.vault
      vars:
        consul_docker_tag: "{{ overcloud_consul_docker_tag }}"
        vault_config_dir: "/opt/kayobe/vault"
        vault_cluster_name: "overcloud"
        vault_ca_cert: "{{ '/etc/pki/tls/certs/ca-bundle.crt' if ansible_facts.os_family == 'RedHat' else '/usr/local/share/ca-certificates/OS-TLS-ROOT.crt' }}"
        vault_docker_tag: "{{ overcloud_vault_docker_tag }}"
        vault_tls_cert: "{% if kolla_internal_fqdn != kolla_internal_vip_address %}{{ kolla_internal_fqdn }}{% else %}overcloud{% endif %}.crt"
        vault_tls_key: "{% if kolla_internal_fqdn != kolla_internal_vip_address %}{{ kolla_internal_fqdn }}{% else %}overcloud{% endif %}.key"
        copy_self_signed_ca: true
        vault_api_addr: "https://{{ internal_net_name | net_ip }}:8200"
        vault_write_keys_file: true
        vault_write_keys_file_path: "{{ kayobe_env_config_path }}/vault/overcloud-vault-keys.json"

    - name: Include Vault keys
      include_vars:
        file: "{{ kayobe_env_config_path }}/vault/overcloud-vault-keys.json"
        name: vault_keys

    - import_role:
        name: stackhpc.hashicorp.vault_unseal
      vars:
        # NOTE: Need to unseal each backend, so don't use the VIP
        vault_api_addr: "http://localhost:8200"
        vault_unseal_keys: "{{ vault_keys.keys_base64 }}"

- name: Configure PKI
  any_errors_fatal: true
  gather_facts: true
  hosts: controllers[0]
  tasks:
    - import_role:
        name: stackhpc.hashicorp.vault_pki
      vars:
        vault_token: "{{ vault_keys.root_token }}"
        vault_api_addr: "https://{{ internal_net_name | net_ip }}:8200"
        vault_ca_cert: "{{ '/etc/pki/tls/certs/ca-bundle.crt' if ansible_facts.os_family == 'RedHat' else '/usr/local/share/ca-certificates/OS-TLS-ROOT.crt' }}"
        vault_pki_root_create: false
        vault_pki_intermediate_import: true
        vault_pki_intermediate_ca_name: "OS-TLS-INT"
        vault_pki_intermediate_ca_bundle: "{{ lookup('file', kayobe_env_config_path + '/vault/OS-TLS-INT.pem') }}"
        vault_pki_intermediate_ca_cert: "{{ lookup('file', kayobe_env_config_path + '/vault/OS-TLS-INT.crt') }}"
        vault_pki_intermediate_roles: "{{ overcloud_vault_pki_roles }}"
        vault_pki_write_certificate_files: true
        vault_pki_certificates_directory: "{{ kayobe_env_config_path }}/vault"
