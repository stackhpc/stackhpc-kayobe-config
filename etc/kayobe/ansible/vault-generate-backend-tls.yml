---
# Required for uri module to work with self-signed certificates and for systems to trust
# the self-signed CA
- name: Install CA
  hosts: controllers:network
  tasks:
    - name: Copy the intermediate CA
      copy:
        src: "{{ kayobe_env_config_path }}/vault/OS-TLS-ROOT.pem"
        dest: "{{ '/etc/pki/ca-trust/source/anchors/OS-TLS-ROOT.crt' if ansible_facts.os_family == 'RedHat' else '/usr/local/share/ca-certificates/OS-TLS-ROOT.crt' }}"
        mode: 0644
      become: true

    - name: update system CA
      become: true
      shell: "{{ 'update-ca-trust' if ansible_facts.os_family == 'RedHat' else 'update-ca-certificates' }}"

- name: Generate backend API certificates
  hosts: controllers:network
  vars:
    vault_api_addr: "https://{{ internal_net_name | net_ip(groups['controllers'][0]) }}:8200"
    vault_intermediate_ca_name: "OS-TLS-INT"
  tasks:
    - name: Set a fact about the virtualenv on the remote system
      set_fact:
        virtualenv: "{{ ansible_python_interpreter | dirname | dirname }}"
      when:
        - ansible_python_interpreter is defined
        - not ansible_python_interpreter.startswith('/bin/')
        - not ansible_python_interpreter.startswith('/usr/bin/')

    - name: Ensure Python hvac module is installed
      pip:
        name: hvac
        state: latest
        extra_args: "{% if pip_upper_constraints_file %}-c {{ pip_upper_constraints_file }}{% endif %}"
        virtualenv: "{{ virtualenv is defined | ternary(virtualenv, omit) }}"
      become: "{{ virtualenv is not defined }}"

    - name: Include Vault keys
      include_vars:
        file: "{{ kayobe_env_config_path }}/vault/overcloud-vault-keys.json"
        name: vault_keys

    - name: Issue a certificate for backend TLS
      hashivault_pki_cert_issue:
        url: "{{ vault_api_addr }}"
        ca_cert: "{{ '/etc/pki/tls/certs/ca-bundle.crt' if ansible_facts.os_family == 'RedHat' else '/usr/local/share/ca-certificates/OS-TLS-ROOT.crt' }}"
        token: "{{ vault_keys.root_token }}"
        mount_point: "{{ vault_intermediate_ca_name }}"
        role: "{{ overcloud_vault_pki_backend_tls_role_name }}"
        common_name: ""
        extra_params:
          ip_sans: "{{ internal_net_name | net_ip }}"
      register: backend_cert
      environment:
        https_proxy: ''

    - name: Ensure certificates directory exists
      file:
        path: "{{ kayobe_env_config_path }}/kolla/certificates"
        state: directory
      delegate_to: localhost

    - name: Copy backend cert
      no_log: true
      copy:
        dest: "{{ kayobe_env_config_path }}/kolla/certificates/{{ inventory_hostname }}-cert.pem"
        content: |
          {{ backend_cert.data.certificate }}
          {{ backend_cert.data.issuing_ca }}
        mode: 0600
      delegate_to: localhost

    - name: Copy backend key
      no_log: true
      copy:
        dest: "{{ kayobe_env_config_path }}/kolla/certificates/{{ inventory_hostname }}-key.pem"
        content: |
          {{ backend_cert.data.private_key }}
        mode: 0600
      delegate_to: localhost
