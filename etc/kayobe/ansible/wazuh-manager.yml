---
# Certificates generation
- hosts: localhost
  roles:
    - role: "{{ playbook_dir }}/roles/wazuh-ansible/wazuh-ansible/roles/wazuh/wazuh-indexer"
      perform_installation: false
  become: no
  tags:
    - generate-certs
# Single node
- hosts: wazuh-manager
  become: yes
  become_user: root
  roles:
    - role: "{{ playbook_dir }}/roles/wazuh-ansible/wazuh-ansible/roles/wazuh/wazuh-indexer"
    - role: "{{ playbook_dir }}/roles/wazuh-ansible/wazuh-ansible/roles/wazuh/ansible-wazuh-manager"
    - role: "{{ playbook_dir }}/roles/wazuh-ansible/wazuh-ansible/roles/wazuh/ansible-filebeat-oss"
    - role: "{{ playbook_dir }}/roles/wazuh-ansible/wazuh-ansible/roles/wazuh/wazuh-dashboard"
  post_tasks:
    - block:
        - name: Check if custom SCA policies directory exists
          stat:
            path: "{{ local_custom_sca_policies_path }}"
          register: custom_sca_policies_folder
          delegate_to: localhost
          become: no

        - name: Gather list of custom SCA policies
          find:
            paths: "{{ local_custom_sca_policies_path }}"
            patterns: '*.yml'
          delegate_to: localhost
          register: custom_sca_policies
          when: custom_sca_policies_folder.stat.exists

        - name: Allow Wazuh agents to execute commands in SCA policies sent from the Wazuh manager
          blockinfile:
            path: "/var/ossec/etc/local_internal_options.conf"
            state: present
            owner: wazuh
            group: wazuh
            block: |
              sca.remote_commands=1
          when: custom_sca_policies.files | length > 0

        - name: Copy custom SCA policy files to Wazuh manager
          copy:
            # Note the trailing slash to copy directory contents
            src: "{{ local_custom_sca_policies_path }}/"
            dest: "/var/ossec/etc/shared/default/"
            owner: wazuh
            group: wazuh
          when: custom_sca_policies.files | length > 0

        - name: Add custom policy definition(s) to the shared Agent config
          blockinfile:
            path: "/var/ossec/etc/shared/default/agent.conf"
            state: present
            owner: wazuh
            group: wazuh
            marker: "{mark} ANSIBLE MANAGED BLOCK Custom SCA Policies"
            insertafter: "<!-- Shared agent configuration here -->"
            block: |
              {% filter indent(width=2, first=true) %}
              <sca>
                <policies>
              {% for item in custom_sca_policies.files %}
                  <policy>etc/shared/{{ item.path | basename }}</policy>
              {% endfor %}
                </policies>
              </sca>
              {% endfilter %}
          when: custom_sca_policies.files | length > 0
      notify:
        - Restart wazuh

    - name: Set http/s_proxy vars in ossec-init.conf for vulnerability detector
      blockinfile:
        path: "/var/ossec/etc/ossec.conf"
        state: present
        owner: root
        group: ossec
        block: |
          HTTPS_PROXY={{ http_proxy_url }}
          HTTP_PROXY={{ http_proxy_url }}
        backup: yes
      when: http_proxy_url is defined
      notify:
        - Restart wazuh

    - name: Check if custom certificates exists
      stat:
        path: "{{ local_custom_certs_path }}"
      register: custom_certificates_folder
      delegate_to: localhost
      become: no

    - name: Copy the node & admin certificates to Wazuh dashboard
      copy:
        src: "{{ local_custom_certs_path }}/{{ item }}"
        dest: /etc/wazuh-dashboard/certs/
        owner: wazuh-dashboard
        group: wazuh-dashboard
        mode: 0400
      with_items:
        - "{{ indexer_node_name }}-key.pem"
        - "{{ indexer_node_name }}.pem"
      when: custom_certificates_folder.stat.exists
      notify:
        - Restart wazuh-dashboard

    - name: Perform health check against filebeat
      command: filebeat test output
      changed_when: false
      become: true
      retries: 2

  handlers:
    - name: Restart wazuh
      service:
        name: wazuh-manager
        state: restarted

    - name: Restart wazuh-dashboard
      service:
        name: wazuh-dashboard
        state: restarted
