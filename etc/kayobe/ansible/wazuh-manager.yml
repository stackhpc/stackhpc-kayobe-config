---
- name: Deploy Wazuh master
  hosts: wazuh-master
  become: yes
  tasks:
    - name: Load http_proxy vars if present
      include_vars:
        dir: "{{ playbook_dir }}/vars"
        files_matching: "https_proxy.yml"
      ignore_errors: true

    - name: Locally install packages required for opendistro cert generation
      package:
        name: "{{ packages | select | list }}"
        state: present
      delegate_to: localhost
      vars:
        packages:
          - curl
          - unzip
          - wget
          - "{% if ansible_facts.os_family == 'RedHat' %}libcap{% endif %}"
          - "{% if ansible_facts.os_family == 'RedHat' %}java-11-openjdk-devel{% else %}openjdk-11-jre-headless{% endif %}"

    - name: Ensure acl is installed
      ansible.builtin.apt:
        name: acl
        state: present
      become: true

    - name: Ensure correct ownership of elasticsearch data directory
      file:
        path: "/var/lib/elasticsearch"
        mode: "0777"
        state: directory
      become: true
      when: ansible_facts.mounts | selectattr('mount', 'equalto', '/var/lib/elasticsearch') | length > 0

    - name: Ensure hostname is in /etc/hosts
      lineinfile:
        path: /etc/hosts
        line: "{{ provision_oc_net_name | net_ip }} {{ wazuh_manager_ip }}"
      become: true

    - block:
        - import_role:
            name: "wazuh-ansible/wazuh-ansible/roles/opendistro/opendistro-elasticsearch"
        - import_role:
            name: "wazuh-ansible/wazuh-ansible/roles/wazuh/ansible-wazuh-manager"
        - import_role:
            name: "wazuh-ansible/wazuh-ansible/roles/wazuh/ansible-filebeat-oss"
        - import_role:
            name: "wazuh-ansible/wazuh-ansible/roles/opendistro/opendistro-kibana"
      vars:
        # Avoid using the Kayobe virtualenv due to use of become_user: kibana,
        # which does not have r+x access.
        ansible_python_interpreter: /usr/bin/python3

    - name: Change /var/lib/elasticsearch owner
      file:
          path: /var/lib/elasticsearch
          state: directory
          owner: "elasticsearch"
          group: "elasticsearch"
          mode: "0700"
      become: true
      when: ansible_facts.mounts | selectattr('mount', 'equalto', '/var/lib/elasticsearch') | length > 0

    - name: Check for elasticsearch performance analyser
      command:
        cmd: /usr/share/elasticsearch/bin/elasticsearch-plugin list
      changed_when: no
      register: elasticsearch_plugins

    - name: Remove elasticsearch performance analyser
      command:
        cmd: /usr/share/elasticsearch/bin/elasticsearch-plugin remove opendistro_performance_analyzer
      when: "'opendistro_performance_analyzer' in elasticsearch_plugins.stdout"
      notify:
        - Restart elasticsearch

    - name: Add custom elasticsearch users
      blockinfile:
        path: "{{ opendistro_sec_plugin_conf_path }}/internal_users.yml"
        state: present
        owner: root
        group: elasticsearch
        block: "{{ elasticsearch_custom_internal_users }}"
        backup: yes
      when: elasticsearch_custom_internal_users is defined
      notify:
        - Apply elasticsearch custom vars
        - Restart elasticsearch

    - name: Add wazuh elasticsearch roles
      blockinfile:
        path: "{{ opendistro_sec_plugin_conf_path }}/roles.yml"
        state: present
        owner: root
        group: elasticsearch
        block: "{{ elasticsearch_custom_roles }}"
        backup: yes
      when: elasticsearch_custom_roles is defined
      notify:
        - Apply elasticsearch custom vars
        - Restart elasticsearch

    - name: Add wazuh elasticsearch roles mapping
      blockinfile:
        path: "{{ opendistro_sec_plugin_conf_path }}/roles_mapping.yml"
        state: present
        owner: root
        group: elasticsearch
        block: "{{ elasticsearch_custom_roles_mapping }}"
        backup: yes
      when: elasticsearch_custom_roles_mapping is defined
      notify:
        - Apply elasticsearch custom vars
        - Restart elasticsearch

    - name: Fix Kibana multitenancy config
      lineinfile:
        path: "{{ kibana_conf_path }}/kibana.yml"
        regexp: '^opendistro_security\.multitenancy\.enabled:'
        line: 'opendistro_security.multitenancy.enabled: true'
      notify:
        - Restart kibana

  handlers:
    - name: Apply elasticsearch custom vars
      command: >-
        {{ opendistro_sec_plugin_tools_path }}/securityadmin.sh
        -cacert {{ opendistro_conf_path }}/root-ca.pem
        -cert {{ opendistro_conf_path }}/admin.pem
        -key {{ opendistro_conf_path }}/admin.key
        -cd {{ opendistro_sec_plugin_conf_path }}/
        -nhnv -icl
        -h {{ elasticsearch_network_host }}
      run_once: true
      when: wazuh_tls | bool

    - name: Restart elasticsearch
      service:
        name: elasticsearch
        state: restarted

    - name: Restart kibana
      service:
        name: kibana
        state: restarted

    - name: Restart wazuh
      service:
        name: wazuh-manager
        state: restarted

