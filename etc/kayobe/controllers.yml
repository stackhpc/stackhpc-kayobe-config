---
###############################################################################
# Controller node configuration.

# User with which to access the controllers via SSH during bootstrap, in order
# to setup the Kayobe user account. Default is {{ os_distribution }}.
#controller_bootstrap_user:

###############################################################################
# Controller network interface configuration.

# List of networks to which controller nodes are attached.
#controller_network_interfaces:

# List of default networks to which controller nodes are attached.
#controller_default_network_interfaces:

# List of extra networks to which controller nodes are attached.
#controller_extra_network_interfaces:

# List of network interfaces to which network nodes are attached.
#controller_network_host_network_interfaces:

# List of default network interfaces to which network nodes are attached.
#controller_network_host_default_network_interfaces:

# List of extra networks to which network nodes are attached.
#controller_network_host_extra_network_interfaces:

###############################################################################
# Controller node BIOS configuration.

# Dict of controller BIOS options. Format is same as that used by stackhpc.drac
# role.
#controller_bios_config:

# Dict of default controller BIOS options. Format is same as that used by
# stackhpc.drac role.
#controller_bios_config_default:

# Dict of additional controller BIOS options. Format is same as that used by
# stackhpc.drac role.
#controller_bios_config_extra:

###############################################################################
# Controller node RAID configuration.

# List of controller RAID volumes. Format is same as that used by stackhpc.drac
# role.
#controller_raid_config:

# List of default controller RAID volumes. Format is same as that used by
# stackhpc.drac role.
#controller_raid_config_default:

# List of additional controller RAID volumes. Format is same as that used by
# stackhpc.drac role.
#controller_raid_config_extra:

###############################################################################
# Controller node software RAID configuration.

# List of software RAID arrays. See mrlesmithjr.mdadm role for format.
#controller_mdadm_arrays:

###############################################################################
# Controller node encryption configuration.

# List of block devices to encrypt. See stackhpc.luks role for format.
#controller_luks_devices:

###############################################################################
# Controller node LVM configuration.

# List of controller volume groups. See mrlesmithjr.manage_lvm role for
# format.
#controller_lvm_groups:

# Default list of controller volume groups. See mrlesmithjr.manage_lvm role for
# format.
#controller_lvm_groups_default:

# Additional list of controller volume groups. See mrlesmithjr.manage_lvm role
# for format.
#controller_lvm_groups_extra:

# Whether a 'data' LVM volume group should exist on controller hosts. By
# default this contains a 'docker-volumes' logical volume for Docker volume
# storage. It will also be used for Docker container and image storage if
# 'docker_storage_driver' is set to 'devicemapper'. Default is true if
# 'docker_storage_driver' is set to 'devicemapper', or false otherwise.
#controller_lvm_group_data_enabled:

# Controller LVM volume group for data. See mrlesmithjr.manage_lvm role for
# format.
#controller_lvm_group_data:

# List of disks for use by controller LVM data volume group. Default to an
# invalid value to require configuration.
#controller_lvm_group_data_disks:

# List of LVM logical volumes for the data volume group.
#controller_lvm_group_data_lvs:

# Docker volumes LVM backing volume.
#controller_lvm_group_data_lv_docker_volumes:

# Size of docker volumes LVM backing volume.
#controller_lvm_group_data_lv_docker_volumes_size:

# Filesystem for docker volumes LVM backing volume. ext4 allows for shrinking.
#controller_lvm_group_data_lv_docker_volumes_fs:

###############################################################################
# Controller node sysctl configuration.

# Dict of sysctl parameters to set.
#controller_sysctl_parameters:

###############################################################################
# Controller node tuned configuration.

# Builtin tuned profile to use. Format is same as that used by giovtorres.tuned
# role. Default is throughput-performance.
#controller_tuned_active_builtin_profile:

###############################################################################
# Controller node user configuration.

# List of users to create. This should be in a format accepted by the
# singleplatform-eng.users role.
#controller_users:

###############################################################################
# Controller node firewalld configuration.

# FIXME: Replace concrete names (provision_oc) with abstract net names ({{
# provision_oc_net_name }}).

# Whether to install and enable firewalld.
# FIXME: Disable by default?
controller_firewalld_enabled: true

# A list of zones to create. Each item is a dict containing a 'zone' item.
# FIXME: Filter out duplicates and unset networks?
controller_firewalld_zones:
  - zone: external
  - zone: mgmt_wl
  - zone: provision_oc
  - zone: provision_wl
  - zone: public
  - zone: storage
  - zone: tunnel

# A firewalld zone to set as the default. Default is unset, in which case the
# default zone will not be changed.
# FIXME: Try setting to drop
controller_firewalld_default_zone: trusted

# A list of firewall rules to apply. Each item is a dict containing arguments
# to pass to the firewalld module. Arguments are omitted if not provided, with
# the following exceptions:
# - offline: true
# - permanent: true
# - state: enabled
# FIXME: Add all services, add conditionals, filter out unused
controller_firewalld_rules:
  - service: ssh
    zone: provision_oc
  - service: dhcp
    zone: provision_wl
  - service: ntp
    zone: provision_wl
  - service: tftp
    zone: provision_wl
  - port: 8089/tcp
    zone: provision_wl
  - service: dhcpv6-client
    state: disabled
    zone: public
  - service: ssh
    state: disabled
    zone: public
  # Designate
  - port: 53/tcp
    zone: public
  - port: 53/udp
    zone: public
  # Designate AXFR
  - port: 5354/tcp
    zone: public
  - port: 5354/udp
    zone: public
  # GENEVE
  - port: 6081/udp
    zone: tunnel

###############################################################################
# Controller node swap configuration.

# List of swap devices. Each item is a dict containing a 'device' item. Default
# is an empty list.
# controller_swap:

###############################################################################
# Dummy variable to allow Ansible to accept this file.
workaround_ansible_issue_8743: yes
