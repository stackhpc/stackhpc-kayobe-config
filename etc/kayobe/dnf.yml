---
# DNF configuration.

###############################################################################
# DNF repository configuration.

# Yum configuration. Dict mapping Yum config option names to their values.
# dnf_config:
#   proxy: http://proxy.example.com
#dnf_config:

# Whether or not to use a local Yum mirror. Default value is 'false'.
#dnf_use_local_mirror:

# Mirror FQDN for Yum CentOS repos. Default value is 'mirror.centos.org'.
#dnf_centos_mirror_host:

# Mirror directory for Yum CentOS repos. Default value is 'centos'.
#dnf_centos_mirror_directory:

# Mirror FQDN for Yum Rocky repos. Default value is 'dl.rockylinux.org'.
#dnf_rocky_mirror_host:

# Mirror directory for Yum Rocky repos. Default value is 'pub/rocky'.
#dnf_rocky_mirror_directory:

# Mirror FQDN for Yum EPEL repos. Default value is
# 'download.fedoraproject.org'.
#dnf_epel_mirror_host:

# Mirror directory for Yum EPEL repos. Default value is 'pub/epel'.
#dnf_epel_mirror_directory:

# A dict of custom repositories.
# You can see params on
# http://docs.ansible.com/ansible/latest/modules/yum_repository_module.html.
# For example:
# dnf_custom_repos:
#   reponame:
#     baseurl: http://repo
#     file: myrepo
#     gpgkey: http://gpgkey
#     gpgcheck: yes
#dnf_custom_repos:

# A dict of custom repositories that point to the local Pulp server.
# To use these repos, set dnf_custom_repos to the value of stackhpc_dnf_repos.
# This is done by default for hosts in the overcloud group via a group_vars
# file.
stackhpc_dnf_repos_8: "{{ dnf_custom_repos_el8 | combine(lookup('vars', 'dnf_custom_repos_' ~ ansible_facts.distribution | lower )) }}"
stackhpc_dnf_repos_9: "{{ dnf_custom_repos_el9 | combine(dnf_custom_repos_rocky_9) }}"

stackhpc_dnf_repos: "{{ stackhpc_dnf_repos_9 if os_release == '9' else stackhpc_dnf_repos_8 }}"

# Custom repositories shared between all RHEL 8 derivatives.
dnf_custom_repos_el8:
  epel:
    baseurl: "{{ stackhpc_repo_epel_url }}"
    description: "Extra Packages for Enterprise Linux $releasever - $basearch"
    enabled: "{{ dnf_enable_epel | bool }}"
    file: epel
    gpgkey: "{{ dnf_epel_8_gpg_key_url }}"
    gpgcheck: yes
  epel-modular:
    baseurl: "{{ stackhpc_repo_epel_modular_url }}"
    description: "Extra Packages for Enterprise Linux Modular $releasever - $basearch"
    enabled: "{{ dnf_enable_epel | bool }}"
    file: epel-modular
    gpgkey: "{{ dnf_epel_8_gpg_key_url }}"
    gpgcheck: yes
  docker:
    baseurl: "{{ stackhpc_repo_docker_url }}"
    description: "Package repository for installing docker"
    enabled: "{{ dnf_enable_docker | bool }}"
    file: docker
    gpgkey: "{{ dnf_docker_gpg_key_url }}"
    gpgcheck: yes

# CentOS Stream 8 specific repositories
dnf_custom_repos_centos:
  appstream:
    baseurl: "{{ stackhpc_repo_centos_stream_appstream_url }}"
    description: "CentOS Stream $releasever - AppStream"
    file: CentOS-Stream-AppStream
    gpgkey: file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial
    gpgcheck: yes
  baseos:
    baseurl: "{{ stackhpc_repo_centos_stream_baseos_url }}"
    description: "CentOS Stream $releasever - BaseOS"
    file: CentOS-Stream-BaseOS
    gpgkey: file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial
    gpgcheck: yes
  extras:
    baseurl: "{{ stackhpc_repo_centos_stream_extras_url }}"
    description: "CentOS Stream $releasever - Extras"
    file: CentOS-Stream-Extras
    gpgkey: file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial
    gpgcheck: yes

# Rocky 8 specific repositories
dnf_custom_repos_rocky:
  appstream:
    baseurl: "{{ stackhpc_repo_rocky_appstream_url }}"
    description: "Rocky Linux $releasever - AppStream"
    file: Rocky-AppStream
    gpgkey: file:///etc/pki/rpm-gpg/RPM-GPG-KEY-rockyofficial
    gpgcheck: yes
  baseos:
    baseurl: "{{ stackhpc_repo_rocky_baseos_url }}"
    description: "Rocky Linux $releasever - BaseOS"
    file: Rocky-BaseOS
    gpgkey: file:///etc/pki/rpm-gpg/RPM-GPG-KEY-rockyofficial
    gpgcheck: yes
  extras:
    baseurl: "{{ stackhpc_repo_rocky_extras_url }}"
    description: "Rocky Linux $releasever - Extras"
    file: Rocky-Extras
    gpgkey: file:///etc/pki/rpm-gpg/RPM-GPG-KEY-rockyofficial
    gpgcheck: yes

# Custom repositories shared between all RHEL 9 derivatives.
dnf_custom_repos_el9:
  epel:
    baseurl: "{{ stackhpc_repo_epel_9_url }}"
    description: "Extra Packages for Enterprise Linux $releasever - $basearch"
    enabled: "{{ dnf_enable_epel | bool }}"
    file: epel
    gpgkey: "{{ dnf_epel_9_gpg_key_url }}"
    gpgcheck: yes
  docker:
    baseurl: "{{ stackhpc_repo_centos_stream_9_docker_url }}"
    description: "Package repository for installing docker"
    enabled: "{{ dnf_enable_docker | bool }}"
    file: docker
    gpgkey: "{{ dnf_docker_gpg_key_url }}"
    gpgcheck: yes

# Rocky 9 specific repositories
dnf_custom_repos_rocky_9:
  appstream:
    baseurl: "{{ stackhpc_repo_rocky_9_appstream_url }}"
    description: "Rocky Linux $releasever - AppStream"
    file: rocky
    gpgkey: "{{ rocky_9_gpg_key }}"
    gpgcheck: yes
  baseos:
    baseurl: "{{ stackhpc_repo_rocky_9_baseos_url }}"
    description: "Rocky Linux $releasever - BaseOS"
    file: rocky
    gpgkey: "{{ rocky_9_gpg_key }}"
    gpgcheck: yes
  extras:
    baseurl: "{{ stackhpc_repo_rocky_9_extras_url }}"
    description: "Rocky Linux $releasever - Extras"
    file: rocky-extras
    gpgkey: "{{ rocky_9_gpg_key }}"
    gpgcheck: yes

# Whether to enable EPEL repositories. This affects RedHat-based systems only.
dnf_enable_epel: "{{ dnf_install_epel | bool }}"

# URL of EPEL GPG keys.
dnf_epel_8_gpg_key_url: "https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-8"
dnf_epel_9_gpg_key_url: "https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-9"

rocky_9_gpg_key: "https://dl.rockylinux.org/pub/rocky/RPM-GPG-KEY-Rocky-9"

# Whether to install the epel-release package. This affects RedHat-based
# systems only. Default value is 'false'.
#dnf_install_epel:

# Whether to enable docker dnf repo in stackhpc_dnf_repos
dnf_enable_docker: true

#URL of docker repo GPG key
dnf_docker_gpg_key_url: "https://download.docker.com/linux/centos/gpg"


###############################################################################
# DNF Automatic configuration.

# Whether DNF Automatic is enabled. This can be used to regularly apply
# security updates. Default value is 'false'.
#dnf_automatic_enabled:

# DNF Automatic upgrade type. Default value is 'security'.
#dnf_automatic_upgrade_type:

###############################################################################
# Dummy variable to allow Ansible to accept this file.
workaround_ansible_issue_8743: yes
