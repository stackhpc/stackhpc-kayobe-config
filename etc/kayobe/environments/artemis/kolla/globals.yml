---
#Set backends for CloudKitty
cloudkitty_collector_backend: prometheus
cloudkitty_fetcher_backend: prometheus
cloudkitty_storage_backend: elasticsearch
{% raw %}
cloudkitty_prometheus_cafile: "{{ openstack_cacert }}"
cloudkitty_elasticsearch_cafile: "{{ openstack_cacert }}"
{% endraw %}

#Open up Kolla Ansible ports in firewalld for services on the public API network.
enable_external_api_firewalld: true
external_api_firewalld_zone: "{{ public_net_name | net_zone }}"

octavia_amp_network:
  name: lb-mgmt-net
  provider_network_type: vlan
  provider_segmentation_id: 3008
  provider_physical_network: physnet1
  external: false
  shared: false
  subnet:
    name: lb-mgmt-subnet
    cidr: "10.178.0.0/16"
    allocation_pool_start: "10.178.0.50"
    allocation_pool_end: "10.178.0.200"
    no_gateway_ip: yes
    enable_dhcp: yes

###############################################################################

# Internal TLS configuration
# Copy the self-signed CA into the kolla containers
kolla_copy_ca_into_containers: "yes"
# Use the following trust store within the container
openstack_cacert: "{{ '/etc/pki/tls/certs/ca-bundle.crt' if os_distribution == 'rocky' else '/etc/ssl/certs/ca-certificates.crt' }}"

# Backend TLS config
# Enable backend TLS
kolla_enable_tls_backend: "yes"

# If using RabbitMQ TLS:
rabbitmq_enable_tls: "yes"
