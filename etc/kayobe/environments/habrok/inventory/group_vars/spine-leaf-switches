---
###############################################################################
# Helper variables.

# Offset between VXLAN VNI and VLAN ID.
switch_vxlan_offset: 10000

# List of hosts that are BGP neighbours.
switch_bgp_neighbours: "{{ (groups['spine-switches' if switch_layer == 'leaf' else 'leaf-switches']) | sort }}"

###############################################################################
# Global configuration.

# Default MTU
switch_config_mtu:
  - default mtu 1532

# Hardware overlay routing profile
switch_config_overlay_routing_profile:
  - hardware overlay-routing-profile balanced-overlay-routing

# loopback0 VXLAN VTEP interface
switch_config_loopback0:
  - "interface loopback0"
  - " description VXLAN-VTEP"
  - " no shutdown"
  - " ip address {{ switch_tunnel_ip }}/32"
  - " exit"

# loopback1 BGP router ID interface
switch_config_loopback1:
  - "interface loopback1"
  - " description BGP-Router-ID"
  - " no shutdown"
  - " ip address {{ switch_bgp_ip }}/32"
  - " exit"

switch_config_vrf:
  # TODO: Router between internal and baremetal provisioning networks
  - "{% if inventory_hostname == 'hb-sw-spine01-h03' %}ip vrf baremetal-provisioning{% endif %}"
  - "{% if inventory_hostname == 'hb-sw-spine01-h03' %} exit{% endif %}"
  # TESTING
  - "ip vrf test-vrf"
  - " exit"

# Network Virtualisation Edge (NVE) for VXLANs
switch_config_nve:
  - "nve"
  - " source-interface loopback0"

switch_config_vxlan_networks:
  - "{{ provision_oc_net_name }}"
  - "{{ provision_wl_net_name }}"
  - "{{ oob_wl_net_name }}"
  - "{{ internal_net_name }}"
  - "{{ public_net_name }}"
  - "{{ tunnel_net_name }}"
  - "{{ storage_net_name }}"
  - "{{ storage_mgmt_net_name }}"
  - "switch_mgmt"

# VXLAN virtual networks
switch_config_vxlans_template: |
  {{ switch_config_vxlan_template.format(vni=321 + switch_vxlan_offset) }}

# FIXME
__switch_config_vxlans_template: |
  {% for network in switch_config_vxlan_networks %}
  {{ switch_config_vxlan_template.format(vni=network | net_vlan + switch_vxlan_offset) }}
  {% endfor %}

# VXLAN network
switch_config_vxlan_template: |
  - "virtual-network {vni}"
  - " vxlan-vni {vni}"

# List of VXLAN VNIs to enable for EVPN
switch_config_evpn_evis:
  - 10321

# EVPN
switch_config_evpn_template: |
  - "evpn"
  - " no auto-evi"
  {% for evi in switch_config_evpn_evis %}
  {{ switch_config_evpn_evi_template.format(vni=321 + switch_vxlan_offset) }}
  {% endfor %}
  - " exit"

# EVPN EVI
switch_config_evpn_evi_template: |
  - " evi {vni}"
  - "  vni {vni}"
  - "  rd {{ switch_tunnel_ip }}:{vni}"
  {% for switch in groups['spine-leaf-switches'] %}
  {% if switch_bgp_asn != hostvars[switch].switch_bgp_asn and (hostvars[switch].switch_layer == 'spine' or hostvars[switch].switch_is_rack_primary | bool) %}
  - "  route-target {{ hostvars[switch].switch_bgp_asn }}:{vni} import"
  {% endif %}
  {% endfor %}
  - "  route-target {{ switch_bgp_asn }}:{vni} both"
  - "  exit"

# Disable BGP router & EVPN.
# Add this to config & disable other things to clean BGP EVPN from the system.
switch_config_disable_bgp_evpn_vxlan:
  - "no router bgp"
  - "interface vlan 321"
  - "  no virtual-network"
  - "  exit"
  - "no virtual-network 10321"
  - "no interface virtual-network 10321"
  - "no interface vlan 321"
  - "no nve"
  - "{% if 'leaf-switches' in group_names %}no interface loopback0{% endif %}"
  - "no interface loopback1"

# BGP router
switch_config_bgp_router_template: |
  - "router bgp {{ switch_bgp_asn }}"
  # ROUTER-BGP mode
  - " router-id {{ switch_bgp_ip }}"
  - " address-family ipv4 unicast"
  # ROUTER-BGP-ADDRESS-FAMILY mode
  - "  redistribute connected"
  - "  exit"
  {{ switch_config_underlay_bgp_neighbours_template }}
  {{ switch_config_underlay_bgp_neighbour_vlt_peer_template }}
  {{ switch_config_overlay_bgp_neighbours_template }}
  # ROUTER-BGP mode
  - " exit"

# Underlay BGP for L3 fabric
switch_config_underlay_bgp_neighbours_template: |
  {% for host in switch_bgp_neighbours %}
  {% set remote_ip = hostvars[host].switch_fabric_ips[inventory_hostname] %}
  {% set remote_asn = hostvars[host].switch_bgp_asn %}
  {{ switch_config_underlay_bgp_neighbour_template.format(remote_ip=remote_ip, remote_asn=remote_asn) }}
  {% endfor %}

# Underlay eBGP neigbour
switch_config_underlay_bgp_neighbour_template: |
  # ROUTER-BGP mode
  - " neighbor {remote_ip}"
  # ROUTER-BGP-NEIGHBOR mode
  - "  remote-as {remote_asn}"
  - "  address-family ipv4 unicast"
  # ROUTER-BGP-ADDRESS-FAMILY mode
  {% if 'leaf-switches' in group_names %}
  - "   allowas-in 1"
  {% endif %}
  {% if 'spine-switches' in group_names %}
  - "   no sender-side-loop-detection"
  {% endif %}
  - "   exit"
  # ROUTER-BGP-NEIGHBOR mode
  - "  no shutdown"
  - "  exit"
  # ROUTER-BGP mode

# Underlay iBGP neighbour for the VLT peer
switch_config_underlay_bgp_neighbour_vlt_peer_template: |
  # ROUTER-BGP mode
  {% if 'leaf-switches' in group_names %}
  - " neighbor {{ hostvars[switch_peer].switch_fabric_peer_ip }}"
  # ROUTER-BGP-NEIGHBOR mode
  - "  remote-as {{ switch_bgp_asn }}"
  - "  no shutdown"
  - "  exit"
  {% endif %}
  # ROUTER-BGP mode

# Overlay BGP for VXLANs
switch_config_overlay_bgp_neighbours_template: |
  {% for host in switch_bgp_neighbours %}
  {% set remote_ip=hostvars[host].switch_bgp_ip %}
  {% set remote_asn=hostvars[host].switch_bgp_asn %}
  {{ switch_config_overlay_bgp_neighbour_template.format(remote_ip=remote_ip, remote_asn=remote_asn) }}
  {% endfor %}

# Overlay iBGP neighbour
switch_config_overlay_bgp_neighbour_template: |
  # ROUTER-BGP mode
  - " neighbor {remote_ip}"
  # ROUTER-BGP-NEIGHBOR mode
  - "  remote-as {remote_asn}"
  - "  update-source loopback1"
  - "  send-community extended"
  - "  no shutdown"
  # Optional on VLT deployment:
  - "  ebgp-multihop 4"
  - "  address-family ipv4 unicast"
  # ROUTER-BGP-ADDRESS-FAMILY mode
  - "   no activate"
  - "   exit"
  # ROUTER-BGP-NEIGHBOR mode
  - "  address-family l2vpn evpn"
  # ROUTER-BGP-ADDRESS-FAMILY mode
  {% if 'spine-switches' in group_names %}
  - "   no sender-side-loop-detection"
  {% endif %}
  - "   activate"
  {% if 'leaf-switches' in group_names %}
  - "   allowas-in 1"
  {% endif %}
  - "   exit"
  # ROUTER-BGP-NEIGHBOR mode
  - "  exit"
  # ROUTER-BGP mode

# Virtual router
switch_config_virtual_router:
  - "ip virtual-router mac-address 00:11:22:33:44:55"

###############################################################################
# Interface configuration.

# Toggle this to clear the VLANs, before re-adding them.
switch_clear_vlans: false

# Define these VLANs on all switches
# NOTE: This is a string so we can use jinja templating for the dictionary keys
switch_interface_config_vlans_template: |-
  {% if 'spine-switches' in group_names %}
  vlan {{ oob_oc_net_name | net_vlan }}:
    description: overcloud-iDRAC
    config:
      - no shutdown
  vlan {{ 'mgmt_lustre' | net_vlan }}:
    description: lustre-iDRAC
    config:
      - no shutdown
  {% endif %}
  vlan {{ 'switch_mgmt' | net_vlan }}:
    description: switch-management
    config:
      - no shutdown
  vlan {{ provision_oc_untagged_vlan }}:
    description: overcloud-provisioning
    config:
      - no shutdown
  vlan {{ provision_wl_net_name | net_vlan }}:
    description: workload-provisioning
    config:
      - no shutdown
      # FIXME
  {% if 'spine-switches' in group_names %}
  {% if inventory_hostname == 'hb-sw-spine01-h03' %}
  {% raw %}
      - ip vrf forwarding baremetal-provisioning
      - ip address 172.23.3.250/22
      #- ip address {{ lookup('vars', 'switch_vlan_provision_ip', default='invalid') }}/25
      #- vrrp-group 5
      #- priority {{ lookup('vars', 'switch_priority', default='invalid') }}
      #- authentication simple-text {{ secrets_switch_vrrp_auth }}
      #- virtual-address 10.96.160.253
  {% endraw %}
  {% endif %}
  {% endif %}
  vlan {{ oob_wl_net_name | net_vlan }}:
    description: workload-iDRAC
    config:
      - no shutdown
  vlan {{ internal_net_name | net_vlan }}:
    description: internal-API
    config:
      - no shutdown
  # FIXME
  {% if 'spine-switches' in group_names %}
  {% if inventory_hostname == 'hb-sw-spine01-h03' %}
  {% raw %}
      - ip vrf forwarding baremetal-provisioning
      - ip address 172.23.23.250/22
      #- ip address {{ lookup('vars', 'switch_vlan_provision_ip', default='invalid') }}/25
      #- vrrp-group 6
      #- priority {{ lookup('vars', 'switch_priority', default='invalid') }}
      #- authentication simple-text {{ secrets_switch_vrrp_auth }}
      #- virtual-address 10.96.167.1
  {% endraw %}
  {% endif %}
  {% endif %}
  vlan {{ public_net_name | net_vlan }}:
    description: public
    config:
      - no shutdown
  vlan {{ tunnel_net_name | net_vlan }}:
    description: GENEVE-tunnel
    config:
      - no shutdown
      - mtu {{ tunnel_net_name | net_mtu }}
  vlan {{ storage_net_name | net_vlan }}:
    description: Ceph-storage
    config:
      - no shutdown
      - mtu {{ storage_net_name | net_mtu }}
  vlan {{ storage_mgmt_net_name | net_vlan }}:
    description: Ceph-replication
    config:
      - no shutdown
      - mtu {{ storage_mgmt_net_name | net_mtu }}
  vlan {{ lustre_storage_vlan }}:
    description: Lustre-storage
    config:
      - no shutdown
      - mtu {{ lustre_storage_mtu }}
  {% for vlan in range(provider_vlans_physnet1.start, provider_vlans_physnet1.end + 1) %}
  vlan {{ vlan }}:
    description: Fake-tenant-network
    config:
      - no shutdown
  {% endfor %}
  {% if 'leaf-switches' in group_names %}
  vlan 4000:
    description: BGP-peer
    config:
      - no shutdown
      - ip address {{ switch_fabric_peer_ip }}/31
  {% endif %}
  vlan 321:
    config:
      - no shutdown
      - virtual-network 10321
  virtual-network 10321:
    config:
      - ip vrf forwarding test-vrf
      - ip address {{ '172.23.254.0/26' | ipaddr(switch_bgp_index | string) }}
      - no shutdown

###############################################################################
# Interface variables and templates.

# L3 fabric link
switch_interface_config_fabric_template: |
  - no switchport
  - no shutdown
  - mtu 9216
  - ip address {ip}/31

##############################################################################
