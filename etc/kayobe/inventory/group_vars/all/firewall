---
#########################################
# Stackhpc default firewall configuration
#########################################

stackhpc_firewalld_zones: |
  {% set network_zones = [] %}
  {% for network in network_interfaces %}
  {% if network | net_zone %}
  {% set _ = network_zones.append({'zone': network | net_zone }) %}
  {% endif %}
  {% endfor %}
  {{ network_zones }}

# Rules are filtered to ensure that none are conflicting
stackhpc_firewalld_rules: |
  {% set stackhpc_firewalld_rules_filtered = [] %}
  {% for rule in stackhpc_firewalld_rules_unfiltered %}
  {% if rule | ansible.utils.remove_keys('state') not in stackhpc_firewalld_rules_filtered | map('ansible.utils.remove_keys', 'state') %}
  {% set _ = stackhpc_firewalld_rules_filtered.append(rule) %}
  {% endif %}
  {% endfor %}
  {{ stackhpc_firewalld_rules_filtered }}

stackhpc_firewalld_rules_unfiltered: |
  {{  (stackhpc_controller_firewalld_rules if 'controllers' in group_names else []) +
      (stackhpc_compute_firewalld_rules if 'compute' in group_names else []) +
      (stackhpc_storage_firewalld_rules if 'storage' in group_names else []) +
      (stackhpc_monitoring_firewalld_rules if 'monitoring' in group_names else []) +
      (stackhpc_seed_firewalld_rules if 'seed' in group_names else []) +
      (stackhpc_seed_hypervisor_firewalld_rules if 'seed-hypervisor' in group_names else []) +
      (stackhpc_wazuh_manager_infra_vm_firewalld_rules if 'wazuh-manager' in group_names else []) +
      (stackhpc_ansible_control_infra_vm_firewalld_rules if 'ansible-control' in group_names else []) }}

###############################################################################
# Controller firewalld rules

stackhpc_controller_firewalld_rules: >-
  {{ stackhpc_controller_firewalld_rules_default |
    selectattr('enabled', 'true') |
    map(attribute='rules') |
    flatten |
    selectattr('network', 'in', network_interfaces) |
    selectattr('zone') |
    union(stackhpc_controller_firewalld_rules_extra) |
    unique |
    select }}

stackhpc_controller_firewalld_rules_default:
  # Common
  - rules:
      - service: ssh
        zone: "{{ admin_oc_net_name | net_zone }}"
        network: "{{ admin_oc_net_name }}"
        state: enabled
      - service: dhcp
        zone: "{{ provision_wl_net_name | net_zone }}"
        network: "{{ provision_wl_net_name }}"
        state: enabled
      - service: ntp
        zone: "{{ provision_wl_net_name | net_zone }}"
        network: "{{ provision_wl_net_name }}"
        state: enabled
      - service: tftp
        zone: "{{ provision_wl_net_name | net_zone }}"
        network: "{{ provision_wl_net_name }}"
        state: enabled
      - service: cockpit
        zone: "{{ public_net_name | net_zone }}"
        network: "{{ public_net_name }}"
        state: disabled
      - service: dhcpv6-client
        zone: "{{ public_net_name | net_zone }}"
        network: "{{ public_net_name }}"
        state: disabled
    enabled: true
  - rules:
      - service: ssh
        zone: "{{ public_net_name | net_zone }}"
        network: "{{ public_net_name }}"
        state: disabled
    enabled: "{{ public_net_name | net_zone != provision_oc_net_name | net_zone }}"
  # Designate
  - rules:
      - port: 53/tcp
        zone: "{{ public_net_name | net_zone }}"
        network: "{{ public_net_name }}"
        state: enabled
      - port: 53/udp
        zone: "{{ public_net_name | net_zone }}"
        network: "{{ public_net_name }}"
        state: enabled
      - port: 5354/tcp
        zone: "{{ public_net_name | net_zone }}"
        network: "{{ public_net_name }}"
        state: enabled
      - port: 5354/udp
        zone: "{{ public_net_name | net_zone }}"
        network: "{{ public_net_name }}"
        state: enabled
    enabled: "{{ kolla_enable_designate | bool }}"
  # GENEVE
  - rules:
      - port: 6081/udp
        zone: "{{ tunnel_net_name | net_zone }}"
        network: "{{ tunnel_net_name }}"
        state: enabled
    enabled: "{{ 'geneve' in (kolla_neutron_ml2_type_drivers + kolla_neutron_ml2_tenant_network_types) and 'network' in group_names }}"
  # VXLAN
  - rules:
      - port: 4789/udp
        zone: "{{ tunnel_net_name | net_zone }}"
        network: "{{ tunnel_net_name }}"
        state: enabled
    enabled: "{{ 'vxlan' in (kolla_neutron_ml2_type_drivers + kolla_neutron_ml2_tenant_network_types) and 'network' in group_names }}"
  # Octavia
  - rules:
      - port: 5555/udp
        zone: "{{ octavia_net_name | net_zone }}"
        network: "{{ octavia_net_name }}"
        state: enabled
    enabled: "{{ kolla_enable_octavia | bool }}"
  # Overcloud Ironic
  - rules:
      - port: 8089/tcp
        zone: "{{ provision_wl_net_name | net_zone }}"
        network: "{{ provision_wl_net_name }}"
        state: enabled
    enabled: "{{ kolla_enable_octavia | bool }}"

stackhpc_controller_firewalld_rules_extra: []

###############################################################################
# Compute firewalld rules

stackhpc_compute_firewalld_rules: >-
  {{ stackhpc_compute_firewalld_rules_default |
    selectattr('enabled', 'true') |
    map(attribute='rules') |
    flatten |
    selectattr('network', 'in', network_interfaces) |
    selectattr('zone') |
    union(stackhpc_compute_firewalld_rules_extra) |
    unique |
    select }}

stackhpc_compute_firewalld_rules_default:
  # Common
  - rules:
      - service: ssh
        zone: "{{ admin_oc_net_name | net_zone }}"
        network: "{{ admin_oc_net_name }}"
        state: enabled
      - service: dhcpv6-client
        zone: "{{ public_net_name | net_zone }}"
        network: "{{ public_net_name }}"
        state: disabled
    enabled: true
  - rules:
      - service: ssh
        state: disabled
        zone: "{{ public_net_name | net_zone }}"
        network: "{{ public_net_name }}"
    enabled: "{{ public_net_name | net_zone != provision_oc_net_name | net_zone }}"
  # GENEVE
  - rules:
      - port: 6081/udp
        state: enabled
        zone: "{{ tunnel_net_name | net_zone }}"
        network: "{{ tunnel_net_name }}"
    enabled: "{{ ('geneve' in (kolla_neutron_ml2_type_drivers + kolla_neutron_ml2_tenant_network_types)) | bool }}"
  # VXLAN
  - rules:
      - port: 4789/udp
        state: enabled
        zone: "{{ tunnel_net_name | net_zone }}"
        network: "{{ tunnel_net_name }}"
    enabled: "{{ ('vxlan' in (kolla_neutron_ml2_type_drivers + kolla_neutron_ml2_tenant_network_types)) | bool }}"

stackhpc_compute_firewalld_rules_extra: []

###############################################################################
# Storage firewalld rules

stackhpc_storage_firewalld_rules: >-
  {{ stackhpc_storage_firewalld_rules_default |
    selectattr('enabled', 'true') |
    map(attribute='rules') |
    flatten |
    selectattr('network', 'in', network_interfaces) |
    selectattr('zone') |
    union(stackhpc_storage_firewalld_rules_extra) |
    unique |
    select }}

stackhpc_storage_firewalld_rules_default:
  # Common
  - rules:
      - service: ssh
        zone: "{{ admin_oc_net_name | net_zone }}"
        network: "{{ admin_oc_net_name }}"
        state: enabled
      - port: 9283/tcp
        zone: "{{ provision_oc_net_name | net_zone }}"
        network: "{{ provision_oc_net_name }}"
        state: enabled
    enabled: true
  - rules:
      - service: ssh
        zone: "{{ storage_net_name | net_zone }}"
        network: "{{ storage_net_name }}"
        state: disabled
    enabled: "{{ storage_net_name | net_zone != provision_oc_net_name | net_zone }}"
  # Ceph
  - rules:
      - service: ceph
        zone: "{{ storage_net_name | net_zone }}"
        network: "{{ storage_net_name }}"
        state: enabled
      - service: ceph-mon
        zone: "{{ storage_net_name | net_zone }}"
        network: "{{ storage_net_name }}"
        state: "{{ 'enabled' if 'mons' in group_names else 'disabled' }}"
    enabled: "{{ stackhpc_enable_ceph | default(false) | bool }}"

stackhpc_storage_firewalld_rules_extra: []

###############################################################################
# Monitoring firewalld rules

stackhpc_monitoring_firewalld_rules: >-
  {{ stackhpc_monitoring_firewalld_rules_default |
    selectattr('enabled', 'true') |
    map(attribute='rules') |
    flatten |
    selectattr('network', 'in', network_interfaces) |
    selectattr('zone') |
    union(stackhpc_monitoring_firewalld_rules_extra) |
    unique |
    select }}

stackhpc_monitoring_firewalld_rules_default:
  - rules:
      - service: ssh
        zone: "{{ admin_oc_net_name | net_zone }}"
        network: "{{ admin_oc_net_name }}"
        state: enabled
    enabled: true

stackhpc_monitoring_firewalld_rules_extra: []

###############################################################################
# Infra VM firewalld rules (Wazuh Manager)

stackhpc_wazuh_manager_infra_vm_firewalld_rules: >-
  {{ stackhpc_wazuh_manager_infra_vm_firewalld_rules_default |
    selectattr('enabled', 'true') |
    map(attribute='rules') |
    flatten |
    selectattr('network', 'in', network_interfaces) |
    selectattr('zone') |
    union(stackhpc_wazuh_manager_infra_vm_firewalld_rules_extra) |
    unique |
    select }}

stackhpc_wazuh_manager_infra_vm_firewalld_rules_default:
  - rules:
      - service: ssh
        zone: "{{ admin_oc_net_name | net_zone }}"
        network: "{{ admin_oc_net_name }}"
        state: enabled
      - port: 1514/tcp
        zone: "{{ provision_oc_net_name | net_zone }}"
        network: "{{ provision_oc_net_name }}"
        state: enabled
      - port: 1514/udp
        zone: "{{ provision_oc_net_name | net_zone }}"
        network: "{{ provision_oc_net_name }}"
        state: enabled
      - port: 1515/tcp
        zone: "{{ provision_oc_net_name | net_zone }}"
        network: "{{ provision_oc_net_name }}"
        state: enabled
      - port: 443/tcp
        zone: "{{ public_net_name | net_zone }}"
        network: "{{ public_net_name }}"
        state: enabled
      - port: 9200/tcp
        zone: "{{ provision_oc_net_name | net_zone }}"
        network: "{{ provision_oc_net_name }}"
        state: enabled
      - port: 9300-9400/tcp
        zone: "{{ provision_oc_net_name | net_zone }}"
        network: "{{ provision_oc_net_name }}"
        state: enabled
      - port: 55000/tcp
        zone: "{{ provision_oc_net_name | net_zone }}"
        network: "{{ provision_oc_net_name }}"
        state: enabled
    enabled: true

stackhpc_wazuh_manager_infra_vm_firewalld_rules_extra: []

###############################################################################
# Infra VM firewalld rules (Ansible Control)

stackhpc_ansible_control_infra_vm_firewalld_rules: >-
  {{ stackhpc_ansible_control_infra_vm_firewalld_rules_default |
    selectattr('enabled', 'true') |
    map(attribute='rules') |
    flatten |
    selectattr('network', 'in', network_interfaces) |
    selectattr('zone') |
    union(stackhpc_ansible_control_infra_vm_firewalld_rules_extra) |
    unique |
    select }}

stackhpc_ansible_control_infra_vm_firewalld_rules_default:
  - rules:
    - service: ssh
      zone: "{{ provision_oc_net_name | net_zone }}"
      network: "{{ provision_oc_net_name }}"
      state: enabled
    enabled: true

stackhpc_ansible_control_infra_vm_firewalld_rules_extra: []

###############################################################################
# Seed firewalld rules

stackhpc_seed_firewalld_rules: >-
  {{ stackhpc_seed_firewalld_rules_default |
    selectattr('enabled', 'true') |
    map(attribute='rules') |
    flatten |
    selectattr('network', 'in', network_interfaces) |
    selectattr('zone') |
    union(stackhpc_seed_firewalld_rules_extra) |
    unique |
    select }}

stackhpc_seed_firewalld_rules_default:
  # Common
  - rules:
      - service: ssh
        zone: "{{ admin_oc_net_name | net_zone }}"
        network: "{{ admin_oc_net_name }}"
        state: enabled
      - service: dhcp
        zone: "{{ provision_oc_net_name | net_zone }}"
        network: "{{ provision_oc_net_name }}"
        state: enabled
      - service: tftp
        zone: "{{ provision_oc_net_name | net_zone }}"
        network: "{{ provision_oc_net_name }}"
        state: enabled
      - service: ntp
        zone: "{{ provision_oc_net_name | net_zone }}"
        network: "{{ provision_oc_net_name }}"
        state: enabled
      # Disable default services in public zone
      - service: dhcpv6-client
        state: disabled
        zone: "{{ public_net_name | net_zone }}"
        network: "{{ public_net_name }}"
    enabled: true
  - rules:
      - service: ssh
        state: disabled
        zone: "{{ public_net_name | net_zone }}"
        network: "{{ public_net_name }}"
    enabled: "{{ public_net_name | net_zone != provision_oc_net_name | net_zone }}"
  # Pulp server
  - rules:
      - service: http
        zone: "{{ provision_oc_net_name | net_zone }}"
        network: "{{ provision_oc_net_name }}"
        state: enabled
      # nginx
      - port: 8080/tcp
        zone: "{{ provision_oc_net_name | net_zone }}"
        network: "{{ provision_oc_net_name }}"
        state: enabled
    enabled: "{{ seed_pulp_container_enabled | bool }}"
  # Squid proxy
  - rules:
      - service: squid
        zone: "{{ provision_oc_net_name | net_zone }}"
        network: "{{ provision_oc_net_name }}"
        state: enabled
    enabled: "{{ seed_squid_container_enabled | bool }}"
  # Ironic
  - rules:
      # Ironic inspector API
      - port: 5050/tcp
        zone: "{{ provision_oc_net_name | net_zone }}"
        network: "{{ provision_oc_net_name }}"
        state: enabled
      # Ironic API
      - port: 6385/tcp
        zone: "{{ provision_oc_net_name | net_zone }}"
        network: "{{ provision_oc_net_name }}"
        state: enabled
    enabled: true  #FIXME: Make rules conditional on Bifrost deployment
  # Redfish exporter
  - rules:
      - port: 9610/tcp
        zone: "{{ provision_oc_net_name | net_zone }}"
        network: "{{ provision_oc_net_name }}"
        state: enabled
    enabled: true

stackhpc_seed_firewalld_rules_extra: []

###############################################################################
# Seed Hypervisor firewalld rules

stackhpc_seed_hypervisor_firewalld_rules: >-
  {{ stackhpc_seed_hypervisor_firewalld_rules_default |
    selectattr('enabled', 'true') |
    map(attribute='rules') |
    flatten |
    selectattr('network', 'in', network_interfaces) |
    selectattr('zone') |
    union(stackhpc_seed_hypervisor_firewalld_rules_extra) |
    unique |
    select }}

stackhpc_seed_hypervisor_firewalld_rules_default:
  - rules:
    - service: ssh
      zone: "{{ admin_oc_net_name | net_zone }}"
      network: "{{ admin_oc_net_name }}"
      state: enabled
    enabled: true

stackhpc_seed_hypervisor_firewalld_rules_extra: []
