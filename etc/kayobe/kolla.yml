---
# Kayobe Kolla configuration.

###############################################################################
# Kolla installation.

# Type of Kolla control installation. One of 'binary' or 'source'.
#kolla_ctl_install_type:

# Path to directory for kolla source code checkout.
#kolla_source_path:

# URL of Kolla source code repository if type is 'source'.
kolla_source_url: "{{ stackhpc_kolla_source_url }}"

# Version (branch, tag, etc.) of Kolla source code repository if type is
# 'source'. Default is {{ openstack_branch }}.
kolla_source_version: "{{ stackhpc_kolla_source_version }}"

# Path to virtualenv in which to install kolla.
#kolla_venv:

# Path in which to generate kolla configuration.
#kolla_build_config_path:

###############################################################################
# Kolla-ansible installation.

# Path to directory for kolla-ansible source code checkout.
# Default is $KOLLA_SOURCE_PATH, or $PWD/src/kolla-ansible if
# $KOLLA_SOURCE_PATH is not set.
#kolla_ansible_source_path:

# URL of Kolla Ansible source code repository if type is 'source'. Default is
# https://opendev.org/openstack/kolla-ansible.
kolla_ansible_source_url: "{{ stackhpc_kolla_ansible_source_url }}"

# Version (branch, tag, etc.) of Kolla Ansible source code repository if type
# is 'source'. Default is {{ openstack_branch }}.
kolla_ansible_source_version: "{{ stackhpc_kolla_ansible_source_version }}"

# Path to virtualenv in which to install kolla-ansible. Default is
# $KOLLA_VENV_PATH or $PWD/venvs/kolla-ansible if $KOLLA_VENV_PATH is not set.
#kolla_ansible_venv:

# Extra requirements to install inside the kolla-ansible virtualenv.
#kolla_ansible_venv_extra_requirements:

# Pip requirement specifier for the ansible package. NOTE: This limits the
# version of ansible used by kolla-ansible to avoid new releases from breaking
# tested code. Changes to this limit should be tested.
#kolla_ansible_venv_ansible:

# Path to Kolla-ansible configuration directory. Default is $KOLLA_CONFIG_PATH
# or /etc/kolla if $KOLLA_CONFIG_PATH is not set.
#kolla_config_path:

# Path to Kolla-ansible node custom configuration directory. Default is
# {{ kolla_config_path }}/config.
#kolla_node_custom_config_path:

###############################################################################
# Kolla configuration.

# Kolla base container image distribution. Options are "centos", "debian",
# "rocky", "ubuntu". Default is {{ os_distribution }}.
#kolla_base_distro:

# Kolla base container image distribution version default map.
# Defines default versions for each distribution.
#kolla_base_distro_version_default_map:

# Kolla base container image distribution version.
# Default is kolla_base_distro_version_default_map[kolla_base_distro].
#kolla_base_distro_version:

kolla_base_distro_and_version: "{{ kolla_base_distro }}-{{ kolla_base_distro_version }}"

# URL of docker registry to use for Kolla images. Default is not set, in which
# case Quay.io will be used.
#kolla_docker_registry:

# Docker namespace to use for Kolla images. Default is 'kolla'.
kolla_docker_namespace: stackhpc

# Username to use to access a docker registry. Default is not set, in which
# case the registry will be used without authentication.
kolla_docker_registry_username: "{{ stackhpc_docker_registry_username }}"

# Password to use to access a docker registry. Default is not set, in which
# case the registry will be used without authentication.
kolla_docker_registry_password: "{{ stackhpc_docker_registry_password }}"

# Kolla OpenStack release version. This should be a Docker image tag.
# Default is {{ openstack_release }}.
# kolla_openstack_release:

# Docker tag applied to built container images. Default is {{
# kolla_openstack_release }}-{{ kolla_base_distro }}-{{
# kolla_base_distro_version }}.
kolla_tag: "{{ openstack_release }}-{{ kolla_base_distro }}-{{ kolla_base_distro_version }}-{{ ansible_facts.date_time.iso8601_basic_short }}"

# Dict mapping names of sources to their definitions.
# See kolla.common.config for details.
# Example:
# kolla_sources:
#   ironic-base:
#     type: git
#     location: https://github.com/openstack/ironic
#     reference: master
# NOTE(upgrade): These sources should be checked with each release. StackHPC
# branches are only required when we have custom backports. For a new release,
# we may have caught up with upstream.
kolla_sources:
  bifrost-base-additions-stackhpc-inspector-plugins:
    # Install our custom inspector plugins.
    type: git
    location: https://github.com/stackhpc/stackhpc-inspector-plugins.git
    reference: 1.3.0
  cloudkitty-base:
    type: git
    location: https://github.com/stackhpc/cloudkitty.git
    reference: stackhpc/{{ openstack_release }}
  horizon-plugin-cloudkitty-dashboard:
    type: git
    location: https://github.com/stackhpc/cloudkitty-dashboard.git
    reference: stackhpc/{{ openstack_release }}
  ironic-inspector-additions-stackhpc-inspector-plugins:
    # Install our custom inspector plugins.
    type: git
    location: https://github.com/stackhpc/stackhpc-inspector-plugins.git
    reference: 1.3.0
  # Not yet merged: https://github.com/stackhpc/magnum/pull/139
  magnum-base:
    type: git
    location: https://github.com/stackhpc/magnum.git
    reference: stackhpc/{{ openstack_release }}
  neutron-base:
    type: git
    location: https://github.com/stackhpc/neutron.git
    reference: stackhpc/{{ openstack_release }}
  neutron-base-plugin-networking-generic-switch:
    type: git
    location: https://github.com/stackhpc/networking-generic-switch.git
    reference: stackhpc/{{ openstack_release }}

###############################################################################
# Kolla image build configuration.

# List of repositories for Rocky Linux 9
stackhpc_rocky_9_repos:
  - url: "{{ stackhpc_repo_rocky_9_baseos_url }}"
    file: "rocky.repo"
    tag: "baseos"
  - url: "{{ stackhpc_repo_rocky_9_appstream_url }}"
    file: "rocky.repo"
    tag: "appstream"
  - url: "{{ stackhpc_repo_rocky_9_extras_url }}"
    file: "rocky-extras.repo"
    tag: "extras"

# List of additional repositories for Rocky Linux 9
stackhpc_rocky_9_additional_repos:
  - url: "{{ stackhpc_repo_centos_stream_9_nfv_openvswitch_url }}"
    file: "CentOS-NFV-OpenvSwitch.repo"
    tag: "centos-nfv-openvswitch"
  - url: "{{ stackhpc_repo_centos_stream_9_openstack_antelope_url }}"
    file: "CentOS-OpenStack-antelope.repo"
    tag: "centos-openstack-antelope"
  - url: "{{ stackhpc_repo_centos_stream_9_opstools_url }}"
    file: "CentOS-OpsTools.repo"
    tag: "centos-opstools"
  - url: "{{ stackhpc_repo_rocky_9_crb_url }}"
    file: "rocky.repo"
    tag: "crb"
  - url: "{{ stackhpc_repo_rocky_9_highavailability_url }}"
    file: "rocky-addons.repo"
    tag: "highavailability"

# List of third-party repositories for Rocky Linux 9
stackhpc_rocky_9_third_party_repos:
  - url: "{{ stackhpc_repo_grafana_url }}"
    file: "grafana.repo"
    tag: "grafana"
  - url: "{{ stackhpc_repo_rhel_9_treasuredata_4_url }}"
    file: "td.repo"
    tag: "treasuredata"
  - url: "{{ stackhpc_repo_rhel_9_mariadb_10_6_url }}"
    file: "mariadb.repo"
    tag: "mariadb"
  - url: "{{ stackhpc_repo_rhel_9_influxdb_url }}"
    file: "influxdb.repo"
    tag: "influxdb"
  - url: "{{ stackhpc_repo_centos_stream_9_storage_ceph_quincy_url }}"
    file: "CentOS-Ceph-Quincy.repo"
    tag: "centos-ceph-quincy"
  - url: "{{ stackhpc_repo_rabbitmq_erlang_url }}"
    file: "rabbitmq_rabbitmq-erlang.repo"
    tag: "rabbitmq_rabbitmq-erlang"
  - url: "{{ stackhpc_repo_rabbitmq_server_url }}"
    file: "rabbitmq_rabbitmq-server.repo"
    tag: "rabbitmq_rabbitmq-server"
  - url: "{{ stackhpc_repo_opensearch_2_x_url }}"
    file: "opensearch.repo"
    tag: "opensearch-2.x"
  - url: "{{ stackhpc_repo_opensearch_dashboards_2_x_url }}"
    file: "opensearch.repo"
    tag: "opensearch-dashboards-2.x"

# List of EPEL 9
stackhpc_epel_9_repos:
  - url: "{{ stackhpc_repo_epel_9_url }}"
    file: "epel.repo"
    tag: "epel"

base_centos_repo_overrides_post_yum_list: "{{ stackhpc_rocky_9_repos + stackhpc_epel_9_repos + stackhpc_rocky_9_additional_repos + stackhpc_rocky_9_third_party_repos }}"
stackhpc_yum_repos: "{{ stackhpc_rocky_9_repos }}"

# Apt sources.list entry prefix.
# If using an authenticating Pulp proxy we need to trust the repository because
# the certificate provided by the upstream repo will not match the proxy's IP.
stackhpc_ubuntu_repo_prefix: "deb {% if stackhpc_repo_mirror_auth_proxy_enabled | bool %}[trusted=yes] {% endif %}"

# List of base repositories for Ubuntu Jammy.
stackhpc_ubuntu_jammy_base_repos:
  - "{{ stackhpc_ubuntu_repo_prefix }}{{ stackhpc_repo_ubuntu_jammy_url }} jammy main universe"
  - "{{ stackhpc_ubuntu_repo_prefix }}{{ stackhpc_repo_ubuntu_jammy_url }} jammy-updates main universe"
  - "{{ stackhpc_ubuntu_repo_prefix }}{{ stackhpc_repo_ubuntu_jammy_url }} jammy-backports main universe"
  - "{{ stackhpc_ubuntu_repo_prefix }}{{ stackhpc_repo_ubuntu_jammy_security_url }} jammy-security main universe"

# List of UCA repositories for Ubuntu Jammy.
stackhpc_ubuntu_jammy_uca_repos:
  - "{{ stackhpc_ubuntu_repo_prefix }}{{ stackhpc_repo_ubuntu_cloud_archive_url }} jammy-updates/{{ openstack_release_codename }} main"

# List of repositories for Ubuntu Jammy.
stackhpc_ubuntu_jammy_repos: "{{ stackhpc_ubuntu_jammy_base_repos + stackhpc_ubuntu_jammy_uca_repos }}"

# Whether to revert to the upstream mirrors in built Kolla container images.
stackhpc_kolla_clean_up_repo_mirrors: true

# Dict mapping Jinja2 block names in kolla's Docker images to their contents.
kolla_build_blocks:
  base_header: |
    {% if kolla_base_distro == 'rocky' %}
    RUN \
    {% if stackhpc_kolla_clean_up_repo_mirrors | bool %}
        mkdir -p /etc/yum.repos.d.backup && \
        tar -czf /etc/yum.repos.d.backup/repos.tar.gz -C /etc/yum.repos.d . && \
    {% endif %}
    {% for repo in stackhpc_yum_repos %}
        sed -i -e '/\[{{ repo.tag }}\]/,/^\[/ s/^\(mirrorlist *=.*\)/#\1/g' \
               -e '/\[{{ repo.tag }}\]/,/^\[/ s/^[# ]*\(baseurl *=.*\)/#\1/g' \
               -e '/\[{{ repo.tag }}\]/,/^\[/ s/^[# ]*\(metalink *=.*\)/#\1/g' \
               -e '/\[{{ repo.tag }}\]/,/^\[/ s|^\(name.*\)|\1\nbaseurl={{ repo.url }}|' /etc/yum.repos.d/{{ repo.file }}{% if not loop.last %} && \
    {% endif %}
    {% endfor %}
    {% else %}
    RUN \
        rm /etc/apt/sources.list && \
    {% if stackhpc_repo_mirror_auth_proxy_enabled | bool %}
    {# We lack the ca-certificates package at this stage, so don't verify the CA initially #}
        echo 'Acquire::https::Verify-Peer "false";' > /etc/apt/apt.conf.d/90no-verify-peer && \
    {% endif %}
    {% for repo in stackhpc_ubuntu_jammy_base_repos %}
        echo '{{ repo }}' >> /etc/apt/sources.list {% if not loop.last %} && \
    {% endif %}
    {% endfor %}
    {% endif %}
  base_centos_repo_overrides_post_yum: |
    {# fixme #}
    {% if kolla_base_distro == 'rocky' %}
        && \
    {% if stackhpc_kolla_clean_up_repo_mirrors | bool %}
        tar -xzf /etc/yum.repos.d.backup/repos.tar.gz -C /etc/yum.repos.d && \
        tar -czf /etc/yum.repos.d.backup/repos.tar.gz -C /etc/yum.repos.d . && \
    {% endif %}
    {% for repo in base_centos_repo_overrides_post_yum_list %}
        sed -i -e '/\[{{ repo.tag }}\]/,/^\[/ s/^\(mirrorlist *=.*\)/#\1/g' \
               -e '/\[{{ repo.tag }}\]/,/^\[/ s/^[# ]*\(baseurl *=.*\)/#\1/g' \
               -e '/\[{{ repo.tag }}\]/,/^\[/ s/^[# ]*\(metalink *=.*\)/#\1/g' \
               -e '/\[{{ repo.tag }}\]/,/^\[/ s|^\(name.*\)|\1\nbaseurl={{ repo.url }}|' /etc/yum.repos.d/{{ repo.file }}{% if not loop.last %} &&{% endif %} \
    {% endfor %}
    {% endif %}
  # With the UCA keyring installed we can now add all repos.
  base_ubuntu_package_sources_list: |
    {% if stackhpc_kolla_clean_up_repo_mirrors | bool %}
    COPY sources.list.ubuntu /etc/apt/sources.list.backup
    {% endif %}
    RUN \
        rm /etc/apt/sources.list && \
        rm -f /etc/apt/apt.conf.d/90no-verify-peer && \
    {% for repo in stackhpc_ubuntu_jammy_repos %}
        echo '{{ repo }}' >> /etc/apt/sources.list {% if not loop.last %} && \
    {% endif %}
    {% endfor %}
  footer: |
    {% if stackhpc_kolla_clean_up_repo_mirrors | bool %}
    {% if kolla_base_distro == 'rocky' %}
    RUN \
        if [ -f /etc/yum.repos.d.backup/repos.tar.gz ]; then \
          tar -xzf /etc/yum.repos.d.backup/repos.tar.gz -C /etc/yum.repos.d && \
          rm -rf /etc/yum.repos.d.backup/; \
        fi && \
        if grep -r '{{ stackhpc_repo_mirror_url }}' /etc/yum.repos.d; then \
          echo "Found repository mirror in Yum repositories"; \
          exit 1; \
        fi
    {% else %}
    RUN \
        if [ -f /etc/apt/sources.list.backup ]; then \
          mv /etc/apt/sources.list.backup /etc/apt/sources.list; \
        fi && \
        if grep -r '{{ stackhpc_repo_mirror_url }}' /etc/apt/sources.list; then \
          echo "Found repository mirror in APT repositories"; \
          exit 1; \
        fi
    {% endif %}
    {% endif %}
  bifrost_base_header: |
    ADD additions-archive /
  grafana_plugins_install: |
    RUN grafana-cli plugins install vonage-status-panel \
        && grafana-cli plugins install grafana-piechart-panel \
        && grafana-cli plugins install grafana-opensearch-datasource \
        && grafana-cli plugins install gnocchixyz-gnocchi-datasource
  ironic_inspector_header: |
    ADD additions-archive /
  magnum_base_footer: |
    RUN curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | head -n -1 | bash
    {% raw %}
    {% set magnum_capi_packages = ['git+https://github.com/stackhpc/magnum-capi-helm.git@v0.12.0'] %}
    RUN {{ macros.install_pip(magnum_capi_packages | customizable("pip_packages")) }}
    {% endraw %}
# Dict mapping image customization variable names to their values.
# Each variable takes the form:
# <image name>_<customization>_<operation>
# Hyphens in the image name must be replaced with underscores. The
# customization is most commonly packages. The operation should be one of
# override, append or remove. The value should be a list.
kolla_build_customizations_common:
  bifrost_base_pip_packages_append:
    - /additions/*
  ironic_inspector_pip_packages_append:
    - /additions/*

kolla_build_customizations_rocky:
  ovn_base_packages_override:
    - ovn23.03
  ovn_controller_packages_override:
    - ovn23.03-host
  ovn_nb_db_server_packages_override:
    - ovn23.03-central
  ovn_northd_packages_override:
    - ovn23.03-central
  ovn_sb_db_server_packages_override:
    - ovn23.03-central

kolla_build_customizations_ubuntu: {}

# Dict mapping image customization variable names to their values.
# Each variable takes the form:
# <image name>_<customization>_<operation>
# Hyphens in the image name must be replaced with underscores. The
# customization is most commonly packages. The operation should be one of
# override, append or remove. The value should be a list.
kolla_build_customizations: "{{ kolla_build_customizations_common | combine(kolla_build_customizations_rocky if kolla_base_distro == 'rocky' else kolla_build_customizations_ubuntu) }}"

# Dict mapping Kolla Dockerfile ARG names to their values.
kolla_build_args:
  node_exporter_version: "1.5.0"  # kolla has 1.4.0
  node_exporter_sha256sum: "af999fd31ab54ed3a34b9f0b10c28e9acee9ef5ac5a5d5edfdde85437db7acbb"

###############################################################################
# Kolla-ansible inventory configuration.

# Full custom seed inventory contents.
#kolla_seed_inventory_custom:

# List of names of default host variables to pass through from kayobe hosts to
# the kolla-ansible seed host, if set. See also
# kolla_seed_inventory_pass_through_host_vars_map.
#kolla_seed_inventory_pass_through_host_vars_default:

# List of names of additional host variables to pass through from kayobe hosts
# to the kolla-ansible seed host, if set. See also
# kolla_seed_inventory_pass_through_host_vars_map.
#kolla_seed_inventory_pass_through_host_vars_extra:

# List of names of host variables to pass through from kayobe hosts to
# the kolla-ansible seed host, if set. See also
# kolla_seed_inventory_pass_through_host_vars_map.
#kolla_seed_inventory_pass_through_host_vars:

# Dict mapping names of default variables in
# kolla_seed_inventory_pass_through_host_vars to the variable to use in
# kolla-ansible. If a variable name is not in this mapping the kayobe name is
# used.
#kolla_seed_inventory_pass_through_host_vars_map_default:

# Dict mapping names of extra variables in
# kolla_seed_inventory_pass_through_host_vars to the variable to use in
# kolla-ansible. If a variable name is not in this mapping the kayobe name is
# used.
#kolla_seed_inventory_pass_through_host_vars_map_extra:

# Dict mapping names of variables in
# kolla_seed_inventory_pass_through_host_vars to the variable to use in
# kolla-ansible. If a variable name is not in this mapping the kayobe name is
# used.
#kolla_seed_inventory_pass_through_host_vars_map:

# Custom overcloud inventory containing a mapping from top level groups to
# hosts.
#kolla_overcloud_inventory_custom_top_level:

# Custom overcloud inventory containing a mapping from components to top level
# groups.
#kolla_overcloud_inventory_custom_components:

# Custom overcloud inventory containing a mapping from services to components.
#kolla_overcloud_inventory_custom_services:

# Full custom overcloud inventory contents. By default this will be the
# concatenation of the top level, component, and service inventories.
#kolla_overcloud_inventory_custom:

# Dict mapping from kolla-ansible groups to kayobe groups and variables. Each
# item is a dict with the following items:
# * groups: A list of kayobe ansible groups to map to this kolla-ansible group.
# * vars: A dict mapping variable names to values for hosts in this
#         kolla-ansible group.
#kolla_overcloud_inventory_top_level_group_map:

# List of names of top level kolla-ansible groups. Any of these groups which
# have no hosts mapped to them will be provided with an empty group definition.
#kolla_overcloud_inventory_kolla_top_level_groups:

# List of names of default host variables to pass through from kayobe hosts to
# kolla-ansible hosts, if set. See also
# kolla_overcloud_inventory_pass_through_host_vars_map.
#kolla_overcloud_inventory_pass_through_host_vars_default:

# List of names of additional host variables to pass through from kayobe hosts
# to kolla-ansible hosts, if set. See also
# kolla_overcloud_inventory_pass_through_host_vars_map.
#kolla_overcloud_inventory_pass_through_host_vars_extra:

# List of names of host variables to pass through from kayobe hosts to
# kolla-ansible hosts, if set. See also
# kolla_overcloud_inventory_pass_through_host_vars_map.
#kolla_overcloud_inventory_pass_through_host_vars:

# Dict mapping names of default variables in
# kolla_overcloud_inventory_pass_through_host_vars to the variable to use in
# kolla-ansible. If a variable name is not in this mapping the kayobe name is
# used.
#kolla_overcloud_inventory_pass_through_host_vars_map_default:

# Dict mapping names of additional variables in
# kolla_overcloud_inventory_pass_through_host_vars to the variable to use in
# kolla-ansible. If a variable name is not in this mapping the kayobe name is
# used.
#kolla_overcloud_inventory_pass_through_host_vars_map_extra:

# Dict mapping names of variables in
# kolla_overcloud_inventory_pass_through_host_vars to the variable to use in
# kolla-ansible. If a variable name is not in this mapping the kayobe name is
# used.
#kolla_overcloud_inventory_pass_through_host_vars_map:

###############################################################################
# Kolla-ansible configuration.

# Virtualenv directory where Kolla-ansible's ansible modules will execute
# remotely on the target nodes. If None, no virtualenv will be used.
#kolla_ansible_target_venv:

# Password to use to encrypt the kolla-ansible passwords.yml file.
#kolla_ansible_vault_password:

# Hashi Vault
#kolla_ansible_vault_addr:
#kolla_ansible_vault_mount_point:
#kolla_ansible_vault_kv_path:
#kolla_ansible_vault_namespace:
#kolla_ansible_vault_role_id:
#kolla_ansible_vault_secret_id:
#kolla_ansible_vault_token:
#kolla_ansible_vault_cacert:

# Whether TLS is enabled for the external API endpoints. Default is 'no'.
#kolla_enable_tls_external:

# Whether TLS is enabled for the internal API endpoints. Default is 'no'.
#kolla_enable_tls_internal:

# Whether debug logging is enabled. Default is 'false'.
#kolla_openstack_logging_debug:

# Upper constraints file for installation of Kolla.
# Default value is {{ pip_upper_constraints_file }}.
#kolla_upper_constraints_file:

# User account to use for Kolla SSH access. Default is 'kolla'.
#kolla_ansible_user:

# Primary group of Kolla SSH user. Default is 'kolla'.
#kolla_ansible_group:

# Whether to use privilege escalation for all operations performed via Kolla
# Ansible. Default is 'false'.
#kolla_ansible_become:

# Whether to create a user account, configure passwordless sudo and authorise
# an SSH key for Kolla Ansible. Default is 'true'.
#kolla_ansible_create_user:

###############################################################################
# Kolla feature flag configuration.

#kolla_enable_aodh:
#kolla_enable_barbican:
#kolla_enable_blazar:
#kolla_enable_ceilometer:
#kolla_enable_ceilometer_horizon_policy_file:
#kolla_enable_ceilometer_ipmi:
#kolla_enable_ceilometer_prometheus_pushgateway:
#kolla_enable_cells:
kolla_enable_central_logging: true
#kolla_enable_ceph_rgw:
#kolla_enable_ceph_rgw_loadbalancer:
#kolla_enable_cinder:
#kolla_enable_cinder_backend_hnas_nfs:
#kolla_enable_cinder_backend_iscsi:
#kolla_enable_cinder_backend_lvm:
#kolla_enable_cinder_backend_nfs:
#kolla_enable_cinder_backend_pure_fc:
#kolla_enable_cinder_backend_pure_iscsi:
#kolla_enable_cinder_backend_pure_roce:
#kolla_enable_cinder_backend_quobyte:
#kolla_enable_cinder_backup:
#kolla_enable_cinder_horizon_policy_file:
#kolla_enable_cloudkitty:
#kolla_enable_collectd:
#kolla_enable_container_healthchecks:
#kolla_enable_cyborg:
#kolla_enable_designate:
#kolla_enable_destroy_images:
#kolla_enable_etcd:
#kolla_enable_external_api_firewalld:
#kolla_enable_external_mariadb_load_balancer:
#kolla_enable_fluentd:
#kolla_enable_freezer:
#kolla_enable_glance:
#kolla_enable_glance_horizon_policy_file:
#kolla_enable_glance_image_cache:
#kolla_enable_gnocchi:
#kolla_enable_gnocchi_statsd:
kolla_enable_grafana: true
#kolla_enable_grafana_external:
#kolla_enable_hacluster:
#kolla_enable_haproxy:
#kolla_enable_haproxy_memcached:
#kolla_enable_heat:
#kolla_enable_heat_horizon_policy_file:
#kolla_enable_horizon:
#kolla_enable_horizon_blazar:
#kolla_enable_horizon_cloudkitty:
#kolla_enable_horizon_designate:
#kolla_enable_horizon_freezer:
#kolla_enable_horizon_heat:
#kolla_enable_horizon_ironic:
#kolla_enable_horizon_magnum:
#kolla_enable_horizon_manila:
#kolla_enable_horizon_masakari:
#kolla_enable_horizon_mistral:
#kolla_enable_horizon_murano:
#kolla_enable_horizon_neutron_vpnaas:
#kolla_enable_horizon_octavia:
#kolla_enable_horizon_sahara:
#kolla_enable_horizon_senlin:
#kolla_enable_horizon_solum:
#kolla_enable_horizon_tacker:
#kolla_enable_horizon_trove:
#kolla_enable_horizon_vitrage:
#kolla_enable_horizon_watcher:
#kolla_enable_horizon_zun:
#kolla_enable_influxdb:
#kolla_enable_ironic:
#kolla_enable_ironic_neutron_agent:
#kolla_enable_ironic_pxe_uefi:
#kolla_enable_iscsid:
#kolla_enable_keepalived:
#kolla_enable_keystone:
#kolla_enable_keystone_federation:
#kolla_enable_keystone_horizon_policy_file:
#kolla_enable_kuryr:
#kolla_enable_loadbalancer:
#kolla_enable_magnum:
#kolla_enable_manila:
#kolla_enable_manila_backend_cephfs_native:
#kolla_enable_manila_backend_cephfs_nfs:
#kolla_enable_manila_backend_generic:
#kolla_enable_manila_backend_glusterfs_nfs:
#kolla_enable_manila_backend_hnas:
kolla_enable_mariabackup: True
#kolla_enable_mariadb:
#kolla_enable_masakari:
#kolla_enable_masakari_hostmonitor:
#kolla_enable_masakari_instancemonitor:
#kolla_enable_memcached:
#kolla_enable_mistral:
#kolla_enable_multipathd:
#kolla_enable_murano:
#kolla_enable_neutron:
#kolla_enable_neutron_agent_ha:
#kolla_enable_neutron_bgp_dragent:
#kolla_enable_neutron_dvr:
#kolla_enable_neutron_horizon_policy_file:
#kolla_enable_neutron_infoblox_ipam_agent:
#kolla_enable_neutron_metering:
#kolla_enable_neutron_mlnx:
#kolla_enable_neutron_packet_logging:
#kolla_enable_neutron_port_forwarding:
#kolla_enable_neutron_provider_networks:
#kolla_enable_neutron_qos:
#kolla_enable_neutron_segments:
#kolla_enable_neutron_sfc:
#kolla_enable_neutron_sriov:
#kolla_enable_neutron_trunk:
#kolla_enable_neutron_vpnaas:
#kolla_enable_nova:
#kolla_enable_nova_fake:
#kolla_enable_nova_horizon_policy_file:
#kolla_enable_nova_libvirt_container:
#kolla_enable_nova_serialconsole_proxy:
#kolla_enable_nova_ssh:
#kolla_enable_octavia:
#kolla_enable_octavia_driver_agent:
#kolla_enable_opensearch:
#kolla_enable_opensearch_dashboards:
#kolla_enable_opensearch_dashboards_external:
#kolla_enable_openstack_core:
#kolla_enable_openvswitch:
#kolla_enable_osprofiler:
#kolla_enable_outward_rabbitmq:
kolla_enable_ovn: true
#kolla_enable_ovs_dpdk:
#kolla_enable_placement:
kolla_enable_prometheus: true
#kolla_enable_prometheus_alertmanager:
#kolla_enable_prometheus_alertmanager_external:
#kolla_enable_prometheus_blackbox_exporter:
#kolla_enable_prometheus_cadvisor:
#kolla_enable_prometheus_ceph_mgr_exporter:
#kolla_enable_prometheus_etcd_integration:
#kolla_enable_prometheus_fluentd_integration:
#kolla_enable_prometheus_haproxy_exporter:
#kolla_enable_prometheus_libvirt_exporter:
#kolla_enable_prometheus_memcached_exporter:
#kolla_enable_prometheus_msteams:
#kolla_enable_prometheus_mysqld_exporter:
#kolla_enable_prometheus_node_exporter:
#kolla_enable_prometheus_openstack_exporter:
#kolla_enable_prometheus_openstack_exporter_external:
#kolla_enable_prometheus_rabbitmq_exporter:
#kolla_enable_prometheus_server:
#kolla_enable_proxysql:
#kolla_enable_rabbitmq:
#kolla_enable_redis:
#kolla_enable_sahara:
#kolla_enable_senlin:
#kolla_enable_solum:
#kolla_enable_swift:
#kolla_enable_swift_recon:
#kolla_enable_swift_s3api:
#kolla_enable_tacker:
#kolla_enable_telegraf:
#kolla_enable_trove:
#kolla_enable_trove_singletenant:
#kolla_enable_vitrage:
#kolla_enable_vitrage_prometheus_datasource:
#kolla_enable_watcher:
#kolla_enable_zun:

###############################################################################
# Kolla custom config generation.

# Feature flag to add $KAYOBE_CONFIG_PATH to the list of search paths used
# when searching for Kolla custom service configuration. Only has an effect in
# a multiple environments setup. This allows you to configure merging between
# your environment and the base layer. Defaults to true. Set to false to for
# backwards compatability.
#kolla_openstack_custom_config_environment_merging_enabled:

# Default value for kolla_openstack_custom_config_include_globs.
#kolla_openstack_custom_config_include_globs_default:

# Extra items to add to kolla_openstack_custom_config_include_globs_default
# to produce kolla_openstack_custom_config_include_globs.
#kolla_openstack_custom_config_include_globs_extra:

# List of dictionaries with the following keys:
#   glob: a glob pattern. Any files matching this pattern will be copied to the
#         the kolla custom config directory
#   enabled: boolean to disable the glob.
# This determines the list of files to copy to the generated kolla config
# directory.
#kolla_openstack_custom_config_include_globs:

# Kolla config generation rules. These operate on the list of files produced by
# applying kolla_openstack_custom_config_include_globs. Each of the paths in
# kolla_openstack_custom_config_paths is searched for files matching one of the
# globs. If a match is found, any files with the same relative path are grouped
# together. The rules determine what to do with these matching files e.g copy
# the most specific file without templating, merge the files with
# merge_configs, etc.
# List of dictionaries with the following keys:
#   glob: A glob matching files for this rule to match on (relative to the
#     search path)
#   priority: The rules are processed in increasing priority order with the
#     first rule matching taking effect.
#   strategy: How to process the matched file. One of copy, concat, template,
#      merge_configs, merge_yaml
#   params: List of params to pass to module enacting the strategy
# Strategies:
#   copy: Copy most specific file to kolla config without templating
#   template: Template most specific file to kolla config
#   concat: Concatenate files and copy the result to generated kolla config
#   merge_configs: Use the merge_configs module to merge an ini file, before
#     copying to the generated kolla-config.
#   merge_yaml: Use the merge_yaml module to merge a file, before copying to
#     the generated kolla-config.
#kolla_openstack_custom_config_rules:

# Whether to enable ini merging rules in
# kolla_openstack_custom_config_rules_default. Default is true.
#kolla_openstack_custom_config_merge_configs_enabled:

# Whether to enable yaml merging rules in
# kolla_openstack_custom_config_rules_default. Default is true.
#kolla_openstack_custom_config_merge_yaml_enabled:

# Default merge strategy for ini files in
# kolla_openstack_custom_config_rules_default. Default is concat.
#kolla_openstack_custom_config_ini_merge_strategy_default:

# Default value for kolla_openstack_custom_config_rules.
#kolla_openstack_custom_config_rules_default:

# List of globs to filter from kolla_openstack_custom_config_rules_default.
# Default is an empty list.
#kolla_openstack_custom_config_rules_default_remove:

# Extra items to add to kolla_openstack_custom_config_rules_default
# to produce kolla_openstack_custom_config_rules.
#kolla_openstack_custom_config_rules_extra:

###############################################################################
# Passwords and credentials.

# Dictionary containing default custom passwords to add or override in the
# Kolla passwords file.
#kolla_ansible_default_custom_passwords:

# Dictionary containing extra custom passwords to add or override in the Kolla
# passwords file.
#kolla_ansible_extra_custom_passwords:

# Dictionary containing custom passwords to add or override in the Kolla
# passwords file.
#kolla_ansible_custom_passwords:

###############################################################################
# OpenStack API addresses.

# Virtual IP address of OpenStack internal API. Default is the vip_address
# attribute of the internal network.
#kolla_internal_vip_address:

# Fully Qualified Domain Name (FQDN) of OpenStack internal API. Default is the
# fqdn attribute of the internal network if set, otherwise
# kolla_internal_vip_address.
#kolla_internal_fqdn:

# Virtual IP address of OpenStack external API. Default is the vip_address
# attribute of the external network.
#kolla_external_vip_address:

# Fully Qualified Domain Name (FQDN) of OpenStack external API. Default is the
# fqdn attribute of the external network if set, otherwise
# kolla_external_vip_address.
#kolla_external_fqdn:

###############################################################################
# TLS certificate bundle management

# External API certificate bundle.
#
# When kolla_enable_tls_external is true, this should contain an X.509
# certificate bundle for the external API.
#
# Note that this should be formatted as a literal style block scalar.
#kolla_external_tls_cert:

# Path to a CA certificate file to use for the OS_CACERT environment variable
# in public-openrc.sh file when TLS is enabled, instead of Kolla-Ansible's
# default.
#kolla_public_openrc_cacert:

# Internal API certificate bundle.
#
# When kolla_enable_tls_internal is true, this should contain an X.509
# certificate bundle for the internal API.
#
# Note that this should be formatted as a literal style block scalar.
#kolla_internal_tls_cert:

# Path to a CA certificate file to use for the OS_CACERT environment variable
# in admin-openrc.sh file when TLS is enabled, instead of Kolla-Ansible's
# default.
#kolla_admin_openrc_cacert:

###############################################################################
# Proxy configuration

# HTTP proxy URL (format: http(s)://[user:password@]proxy_name:port) used by
# Kolla. Default value is "{{ http_proxy }}".
#kolla_http_proxy:

# HTTPS proxy URL (format: http(s)://[user:password@]proxy_name:port) used by
# Kolla. Default value is "{{ https_proxy }}".
#kolla_https_proxy:

# List of domains, hostnames, IP addresses and networks for which no proxy is
# used. Default value is "{{ no_proxy }}".
#kolla_no_proxy:

###############################################################################
# Dummy variable to allow Ansible to accept this file.
workaround_ansible_issue_8743: yes
