---
# Kayobe Kolla configuration.

###############################################################################
# Kolla installation.

# Type of Kolla control installation. One of 'binary' or 'source'.
kolla_ctl_install_type: source

# Path to directory for kolla source code checkout.
#kolla_source_path:

# URL of Kolla source code repository if type is 'source'.
kolla_source_url: https://github.com/RSE-Cambridge/kolla

# Version (branch, tag, etc.) of Kolla source code repository if type is
# 'source'. Default is {{ openstack_branch }}.
kolla_source_version: cumulus/11.0.0.2

# Path to virtualenv in which to install kolla.
#kolla_venv:

# Path in which to generate kolla configuration.
#kolla_build_config_path:

###############################################################################
# Kolla-ansible installation.

# Type of Kolla-ansible control installation. One of 'binary' or 'source'.
# Default is 'source'.
kolla_ansible_ctl_install_type: source

# Path to directory for kolla-ansible source code checkout.
# Default is $KOLLA_SOURCE_PATH, or $PWD/src/kolla-ansible if
# $KOLLA_SOURCE_PATH is not set.
#kolla_ansible_source_path:

# URL of Kolla Ansible source code repository if type is 'source'. Default is
# https://opendev.org/openstack/kolla-ansible.
kolla_ansible_source_url: https://github.com/RSE-Cambridge/kolla-ansible

# Version (branch, tag, etc.) of Kolla Ansible source code repository if type
# is 'source'. Default is {{ openstack_branch }}.
kolla_ansible_source_version: cumulus/11.0.0.3

# Path to virtualenv in which to install kolla-ansible. Default is
# $KOLLA_VENV_PATH or $PWD/venvs/kolla-ansible if $KOLLA_VENV_PATH is not set.
#kolla_ansible_venv:

# Extra requirements to install inside the kolla-ansible virtualenv.
#kolla_ansible_venv_extra_requirements:

# Path to Kolla-ansible configuration directory. Default is $KOLLA_CONFIG_PATH
# or /etc/kolla if $KOLLA_CONFIG_PATH is not set.
#kolla_config_path:

# Path to Kolla-ansible node custom configuration directory. Default is
# {{ kolla_config_path }}/config.
#kolla_node_custom_config_path:

###############################################################################
# Kolla configuration.

# Kolla base container image distribution. Default is 'centos'.
#kolla_base_distro:

# Kolla container image type: binary or source. Default is 'binary'.
#kolla_install_type:

# URL of docker registry to use for Kolla images. Default is not set, in which
# case Dockerhub will be used.
kolla_docker_registry: "{{ docker_registry }}"

# Docker namespace to use for Kolla images. Default is 'kolla'.
kolla_docker_namespace: scientific-openstack/infrastructure/kayobe-config

# Username to use to access a docker registry. Default is not set, in which
# case the registry will be used without authentication.
#kolla_docker_registry_username:

# Password to use to access a docker registry. Default is not set, in which
# case the registry will be used without authentication.
#kolla_docker_registry_password:

# Kolla OpenStack release version. This should be a Docker image tag.
# Default is {{ openstack_release }}.
kolla_openstack_release: 11.0.0.2-2

# Docker tag applied to built container images. Default is
# {{ kolla_openstack_release }}.
#kolla_tag:

# Dict mapping names of sources to their definitions for
# kolla_install_type=source. See kolla.common.config for details.
# Example:
# kolla_sources:
#   ironic-base:
#     type: git
#     location: https://github.com/openstack/ironic
#     reference: master
#kolla_sources:

###############################################################################
# Kolla image build configuration.

# Dict mapping Jinja2 block names in kolla's Docker images to their contents.
#kolla_build_blocks:
kolla_build_blocks:
  neutron_server_footer: |
    # Adds experimental batching support
    RUN pip3 install --prefix /usr git+https://github.com/stackhpc/networking-generic-switch@stackhpc/victoria-batching -c https://releases.openstack.org/constraints/upper/victoria
  nova_base_footer: |
    # Fix up for ironic ha bugs
    RUN pip3 install -U --prefix /usr --no-deps git+https://github.com/stackhpc/nova.git@stackhpc/victora-ironic-rebalance  -c https://releases.openstack.org/constraints/upper/victoria
  prometheus_server_repository_version: |
    # Avoid the pain of porting 1.x rules and migrating data to 2.x
    ARG prometheus_version='2.26.0'
  prometheus_cadvisor_repository_version: |
    ENV prometheus_cadvisor_version=0.39.0
  ironic_inspector_footer: |
    # Install our custom inspector plugins.
    RUN pip3 install --prefix /usr git+https://github.com/stackhpc/stackhpc-inspector-plugins@1.2.0
  magnum_api_footer: |
    RUN pip3 install -U --no-deps --prefix /usr git+https://github.com/stackhpc/magnum@stackhpc/victoria -c https://releases.openstack.org/constraints/upper/victoria
  magnum_conductor_footer: |
    RUN pip3 install -U --no-deps --prefix /usr git+https://github.com/stackhpc/magnum@stackhpc/victoria -c https://releases.openstack.org/constraints/upper/victoria

# Dict mapping image customization variable names to their values.
# Each variable takes the form:
# <image name>_<customization>_<operation>
# Hyphens in the image name are replaced with underscores. The customization is
# most commonly packages. The operation should be one of override, append or
# remove. The value should be a list.
kolla_build_customizations:
  keystone_base_packages_append:
    # Allow custom packages to be installed via pip.
    # Allow manual install of openidc for federation
    - 'jansson-devel'
    - 'openssl-devel'
    - 'hiredis'
  neutron_server_packages_append:
    # Allow custom packages to be installed via pip.
    - 'gcc'
    - 'python3-devel'
    - 'python3-network-runner.noarch'
    - 'python3-networking-ansible'

###############################################################################
# Kolla-ansible inventory configuration.

# Full custom seed inventory contents.
#kolla_seed_inventory_custom:

# List of names of host variables to pass through from kayobe hosts to
# the kolla-ansible seed host, if set. See also
# kolla_seed_inventory_pass_through_host_vars_map.
#kolla_seed_inventory_pass_through_host_vars:

# Dict mapping names of variables in
# kolla_seed_inventory_pass_through_host_vars to the variable to use in
# kolla-ansible. If a variable name is not in this mapping the kayobe name is
# used.
#kolla_seed_inventory_pass_through_host_vars_map:

# Custom overcloud inventory containing a mapping from top level groups to
# hosts.
#kolla_overcloud_inventory_custom_top_level:

# Custom overcloud inventory containing a mapping from components to top level
# groups.
#kolla_overcloud_inventory_custom_components:
kolla_overcloud_inventory_custom_components: "{{ lookup('template', kayobe_config_path ~ '/kolla/inventory/overcloud-components.j2') }}"

# Custom overcloud inventory containing a mapping from services to components.
kolla_overcloud_inventory_custom_services: "{{ lookup('template', kayobe_config_path ~ '/kolla/inventory/overcloud-services.j2') }}"

# Full custom overcloud inventory contents. By default this will be the
# concatenation of the top level, component, and service inventories.
#kolla_overcloud_inventory_custom:

# Dict mapping from kolla-ansible groups to kayobe groups and variables. Each
# item is a dict with the following items:
# * groups: A list of kayobe ansible groups to map to this kolla-ansible group.
# * vars: A dict mapping variable names to values for hosts in this
#         kolla-ansible group.
#kolla_overcloud_inventory_top_level_group_map:

# List of names of top level kolla-ansible groups. Any of these groups which
# have no hosts mapped to them will be provided with an empty group definition.
#kolla_overcloud_inventory_kolla_top_level_groups:

# List of names of host variables to pass through from kayobe hosts to
# kolla-ansible hosts, if set. See also
# kolla_overcloud_inventory_pass_through_host_vars_map.
#kolla_overcloud_inventory_pass_through_host_vars:

# Dict mapping names of variables in
# kolla_overcloud_inventory_pass_through_host_vars to the variable to use in
# kolla-ansible. If a variable name is not in this mapping the kayobe name is
# used.
#kolla_overcloud_inventory_pass_through_host_vars_map:

###############################################################################
# Kolla-ansible configuration.

# Virtualenv directory where Kolla-ansible's ansible modules will execute
# remotely on the target nodes. If None, no virtualenv will be used.
#kolla_ansible_target_venv:

# Whether TLS is enabled for the external API endpoints. Default is 'no'.
#kolla_enable_tls_external:

# Whether TLS is enabled for the internal API endpoints. Default is 'no'.
#kolla_enable_tls_internal:

# Whether debug logging is enabled. Default is 'false'.
#kolla_openstack_logging_debug:

# Upper constraints file for installation of Kolla.
# Default value is {{ pip_upper_constraints_file }}.
#kolla_upper_constraints_file:

# User account to use for Kolla SSH access. Default is 'kolla'.
#kolla_ansible_user:

# Primary group of Kolla SSH user. Default is 'kolla'.
#kolla_ansible_group:

# Whether to use privilege escalation for all operations performed via Kolla
# Ansible. Default is 'false'.
#kolla_ansible_become:

# Whether to create a user account, configure passwordless sudo and authorise
# an SSH key for Kolla Ansible. Default is 'true'.
#kolla_ansible_create_user:

###############################################################################
# Kolla feature flag configuration.

#kolla_enable_aodh:
kolla_enable_barbican: True
#kolla_enable_blazar:
#kolla_enable_cadf_notifications:
kolla_enable_caso: True
#kolla_enable_ceilometer:
#kolla_enable_ceilometer_ipmi:
#kolla_enable_cells:
#kolla_enable_central_logging:
kolla_enable_central_logging: True
kolla_enable_chrony: False
kolla_enable_cinder: "{{ scientific_openstack_trait_ceph }}"
#kolla_enable_cinder_backend_hnas_nfs:
#kolla_enable_cinder_backend_iscsi:
#kolla_enable_cinder_backend_lvm:
#kolla_enable_cinder_backend_nfs:
#kolla_enable_cinder_backend_quobyte:
#kolla_enable_cinder_backend_zfssa_iscsi:
#kolla_enable_cinder_backup:
#kolla_enable_cloudkitty:
#kolla_enable_collectd:
#kolla_enable_cyborg:
kolla_enable_designate: True
#kolla_enable_destroy_images:
#kolla_enable_elasticsearch:
#kolla_enable_etcd:
#kolla_enable_fluentd:
#kolla_enable_freezer:
#kolla_enable_glance:
#kolla_enable_gnocchi:
kolla_enable_grafana: True
#kolla_enable_haproxy:
kolla_enable_heat: True
kolla_enable_horizon: True
#kolla_enable_horizon_blazar:
#kolla_enable_horizon_cloudkitty:
#kolla_enable_horizon_congress:
#kolla_enable_horizon_designate:
#kolla_enable_horizon_freezer:
#kolla_enable_horizon_heat:
#kolla_enable_horizon_ironic:
#kolla_enable_horizon_karbor:
#kolla_enable_horizon_magnum:
#kolla_enable_horizon_manila:
#kolla_enable_horizon_masakari:
#kolla_enable_horizon_mistral:
#kolla_enable_horizon_murano:
#kolla_enable_horizon_neutron_vpnaas:
#kolla_enable_horizon_octavia:
#kolla_enable_horizon_qinling:
#kolla_enable_horizon_sahara:
#kolla_enable_horizon_searchlight:
#kolla_enable_horizon_senlin:
#kolla_enable_horizon_solum:
#kolla_enable_horizon_tacker:
#kolla_enable_horizon_trove:
#kolla_enable_horizon_vitrage:
#kolla_enable_horizon_watcher:
#kolla_enable_horizon_zun:
#kolla_enable_hyperv:
#kolla_enable_influxdb:
kolla_enable_ironic: False
#kolla_enable_ironic_ipxe: True
#kolla_enable_ironic_neutron_agent:
#kolla_enable_ironic_pxe_uefi:
#kolla_enable_iscsid:
#kolla_enable_kafka:
#kolla_enable_karbor:
#kolla_enable_keepalived:
#kolla_enable_keystone:
#kolla_enable_kibana:
#kolla_enable_kuryr:
kolla_enable_magnum: True
kolla_enable_manila: "{{ scientific_openstack_trait_ceph }}"
kolla_enable_manila_backend_cephfs_native: "{{ scientific_openstack_trait_ceph }}"
#kolla_enable_manila_backend_cephfs_nfs:
#kolla_enable_manila_backend_generic:
#kolla_enable_manila_backend_hnas:
kolla_enable_mariabackup: True
#kolla_enable_mariadb:
#kolla_enable_masakari:
#kolla_enable_memcached:
#kolla_enable_mistral:
#kolla_enable_monasca:
#kolla_enable_multipathd:
#kolla_enable_murano:
#kolla_enable_neutron:
kolla_enable_neutron_agent_ha: True
#kolla_enable_neutron_bgp_dragent:
#kolla_enable_neutron_dvr:
#kolla_enable_neutron_infoblox_ipam_agent:
#kolla_enable_neutron_metering:
#kolla_enable_neutron_mlnx:
#kolla_enable_neutron_port_forwarding:
kolla_enable_neutron_provider_networks: True
#kolla_enable_neutron_qos:
#kolla_enable_neutron_segments:
#kolla_enable_neutron_sfc:
#kolla_enable_neutron_sriov:
#kolla_enable_neutron_vpnaas:
#kolla_enable_nova:
#kolla_enable_nova_serialconsole_proxy:
#kolla_enable_nova_ssh:
kolla_enable_octavia: True
#kolla_enable_onos:
#kolla_enable_openstack_core:
#kolla_enable_openvswitch:
#kolla_enable_osprofiler:
#kolla_enable_outward_rabbitmq:
#kolla_enable_ovs_dpdk:
#kolla_enable_panko:
#kolla_enable_placement:
kolla_enable_prometheus: True
#kolla_enable_qdrouterd:
#kolla_enable_qinling:
#kolla_enable_rabbitmq:
#kolla_enable_rally:
#kolla_enable_redis:
#kolla_enable_sahara:
#kolla_enable_searchlight:
#kolla_enable_senlin:
#kolla_enable_skydive:
#kolla_enable_solum:
#kolla_enable_storm:
#kolla_enable_swift:
#kolla_enable_swift_s3api:
#kolla_enable_tacker:
#kolla_enable_telegraf:
#kolla_enable_tempest:
#kolla_enable_trove:
#kolla_enable_trove_singletenant:
#kolla_enable_vitrage:
#kolla_enable_vmtp:
#kolla_enable_watcher:
#kolla_enable_zookeeper:
#kolla_enable_zun:
###############################################################################
# Kolla custom config options.

# Override the the list of paths that are searched when looking for kolla custom
# config. The default is to search the the environment specific path, if such a
# path exists, and then shared config path. Files in the environment specific
# directory override those found in the common configuration if the relative
# path of the file is identical. This behaviour can be adjusted using the
# configuration options below. For example, it is possible to merge yaml files
# with the kolla_openstack_custom_config_merge_yml_globs variable.
#kolla_extra_config_paths:

# Default value for kolla_openstack_custom_config_include_globs.
#kolla_openstack_custom_config_include_globs_default:

# Extra items to add to kolla_openstack_custom_config_include_globs_default
# to produce kolla_openstack_custom_config_include_globs.
#kolla_openstack_custom_config_include_globs_extra:

# List of dictionaries with the following keys:
#   glob: a glob pattern. Any files matching this pattern will be copied to the
#         the kolla custom config directory
#   enabled: boolean to disable the glob.
#kolla_openstack_custom_config_include_globs:

# Default value for kolla_openstack_custom_config_template_exclude_globs.
#kolla_openstack_custom_config_template_exclude_globs_default:

# Extra items to add to kolla_openstack_custom_config_template_exclude_globs_default
# to produce kolla_openstack_custom_config_template_exclude_globs.
#kolla_openstack_custom_config_template_exclude_globs_extra:

# List of globs. Any files matching these globs will not be templated.
#kolla_openstack_custom_config_template_exclude_globs:

# Default value for openstack_custom_config_merge_ini_globs.
#kolla_openstack_custom_config_merge_ini_globs_default:

# Extra items to add to kolla_openstack_custom_config_merge_ini_globs_default
# to produce openstack_custom_config_merge_ini_globs.
#kolla_openstack_custom_config_merge_ini_globs_extra:

# List of dictionaries with following keys:
#   glob: A glob pattern. Any files matching this pattern will be merged using
#         the merge_configs filter.
# E.g:
#   kolla_openstack_custom_config_merge_ini_globs:
#     - glob: "**/*.ini"
#kolla_openstack_custom_config_merge_ini_globs:

# Default value for openstack_custom_config_merge_yml_globs.
#kolla_openstack_custom_config_merge_yml_globs_default:

# Extra items to add to kolla_openstack_custom_config_merge_yml_globs_default
# to produce openstack_custom_config_merge_yml_globs.
#kolla_openstack_custom_config_merge_yml_globs_extra:

# List of dictionaries with following keys:
#   glob: A glob pattern. Any files matching this pattern will be merged using
#         the merge_yaml ansible filter.
# E.g:
# kolla_openstack_custom_config_merge_yml_globs:
#   - glob: "**/*.yml"
#     merge_lists: false
#kolla_openstack_custom_config_merge_yml_globs:

###############################################################################
# Passwords and credentials.

# Dictionary containing default custom passwords to add or override in the
# Kolla passwords file.
#kolla_ansible_default_custom_passwords:

# Dictionary containing custom passwords to add or override in the Kolla
# passwords file.
#kolla_ansible_custom_passwords:

###############################################################################
# TLS certificate bundle management

# External API certificate bundle.
#
# When kolla_enable_tls_external is true, this should contain an X.509
# certificate bundle for the external API.
#
# Note that this should be formatted as a literal style block scalar.
#
# NOTE: kolla_tls_cert has been renamed to kolla_external_tls_cert. Support for
# the deprecated name kolla_tls_cert will be removed in a future release.
#kolla_external_tls_cert:

# Path to a CA certificate file to use for the OS_CACERT environment variable
# in public-openrc.sh file when TLS is enabled, instead of Kolla-Ansible's
# default.
#kolla_external_fqdn_cacert:

# Internal API certificate bundle.
#
# When kolla_enable_tls_internal is true, this should contain an X.509
# certificate bundle for the internal API.
#
# Note that this should be formatted as a literal style block scalar.
#kolla_internal_tls_cert:

# Path to a CA certificate file to use for the OS_CACERT environment variable
# in admin-openrc.sh file when TLS is enabled, instead of Kolla-Ansible's
# default.
#kolla_internal_fqdn_cacert:

###############################################################################
# Dummy variable to allow Ansible to accept this file.
workaround_ansible_issue_8743: yes
