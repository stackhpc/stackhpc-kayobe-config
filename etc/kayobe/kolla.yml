---
# Kayobe Kolla configuration.

###############################################################################
# Kolla installation.

# Type of Kolla control installation. One of 'binary' or 'source'.
#kolla_ctl_install_type:

# Path to directory for kolla source code checkout.
#kolla_source_path:

# URL of Kolla source code repository if type is 'source'.
kolla_source_url: "{{ stackhpc_kolla_source_url }}"

# Version (branch, tag, etc.) of Kolla source code repository if type is
# 'source'. Default is {{ openstack_branch }}.
kolla_source_version: "{{ stackhpc_kolla_source_version }}"

# Path to virtualenv in which to install kolla.
#kolla_venv:

# Path in which to generate kolla configuration.
#kolla_build_config_path:

###############################################################################
# Kolla-ansible installation.

# Type of Kolla-ansible control installation. One of 'binary' or 'source'.
# Default is 'source'.
#kolla_ansible_ctl_install_type:

# Path to directory for kolla-ansible source code checkout.
# Default is $KOLLA_SOURCE_PATH, or $PWD/src/kolla-ansible if
# $KOLLA_SOURCE_PATH is not set.
#kolla_ansible_source_path:

# URL of Kolla Ansible source code repository if type is 'source'. Default is
# https://opendev.org/openstack/kolla-ansible.
kolla_ansible_source_url: "{{ stackhpc_kolla_ansible_source_url }}"

# Version (branch, tag, etc.) of Kolla Ansible source code repository if type
# is 'source'. Default is {{ openstack_branch }}.
kolla_ansible_source_version: "{{ stackhpc_kolla_ansible_source_version }}"

# Path to virtualenv in which to install kolla-ansible. Default is
# $KOLLA_VENV_PATH or $PWD/venvs/kolla-ansible if $KOLLA_VENV_PATH is not set.
#kolla_ansible_venv:

# Extra requirements to install inside the kolla-ansible virtualenv.
#kolla_ansible_venv_extra_requirements:

# Path to Kolla-ansible configuration directory. Default is $KOLLA_CONFIG_PATH
# or /etc/kolla if $KOLLA_CONFIG_PATH is not set.
#kolla_config_path:

# Path to Kolla-ansible node custom configuration directory. Default is
# {{ kolla_config_path }}/config.
#kolla_node_custom_config_path:

###############################################################################
# Kolla configuration.

# Kolla base container image distribution. Options are "centos", "debian",
# "ubuntu". Default is {{ os_distribution }}.
#kolla_base_distro:

# Kolla container image type: binary or source. Default is 'binary'.
kolla_install_type: source

# URL of docker registry to use for Kolla images. Default is not set, in which
# case Dockerhub will be used.
#kolla_docker_registry:

# Docker namespace to use for Kolla images. Default is 'kolla'.
kolla_docker_namespace: stackhpc

# Username to use to access a docker registry. Default is not set, in which
# case the registry will be used without authentication.
kolla_docker_registry_username: "{{ stackhpc_docker_registry_username }}"

# Password to use to access a docker registry. Default is not set, in which
# case the registry will be used without authentication.
kolla_docker_registry_password: "{{ stackhpc_docker_registry_password }}"

# Kolla OpenStack release version. This should be a Docker image tag.
# Default is {{ openstack_release }}.
kolla_openstack_release: wallaby-20211207T102718

# Docker tag applied to built container images. Default is
# {{ kolla_openstack_release }}.
#kolla_tag:

# Dict mapping names of sources to their definitions for
# kolla_install_type=source. See kolla.common.config for details.
# Example:
# kolla_sources:
#   ironic-base:
#     type: git
#     location: https://github.com/openstack/ironic
#     reference: master
kolla_sources:
  bifrost-base:
    type: git
    location: "{{ kolla_bifrost_source_url }}"
    reference: "{{ kolla_bifrost_source_version }}"
  cloudkitty-base:
    type: git
    location: https://github.com/stackhpc/cloudkitty.git
    reference: stackhpc/wallaby
  horizon-plugin-cloudkitty-dashboard:
    type: git
    location: https://github.com/stackhpc/cloudkitty-dashboard.git
    reference: stackhpc/wallaby    
  ironic-inspector-additions-stackhpc-inspector-plugins:
    # Install our custom inspector plugins.
    type: git
    location: https://github.com/stackhpc/stackhpc-inspector-plugins.git
    reference: 1.1.2
  magnum-base:
    type: git
    location: https://github.com/stackhpc/magnum.git
    reference: stackhpc/wallaby

###############################################################################
# Kolla image build configuration.

# List of repositories for CentOS Stream.
stackhpc_centos_stream_repos:
  - url: "{{ stackhpc_repo_centos_stream_baseos_url }}"
    file: "CentOS-Stream-BaseOS.repo"
  - url: "{{ stackhpc_repo_centos_stream_appstream_url }}"
    file: "CentOS-Stream-AppStream.repo"
  - url: "{{ stackhpc_repo_centos_stream_extras_url }}"
    file: "CentOS-Stream-Extras.repo"

# List of repositories for EPEL.
stackhpc_epel_repos:
  - url: "{{ stackhpc_repo_epel_url }}"
    file: "epel.repo"
  - url: "{{ stackhpc_repo_epel_modular_url }}"
    file: "epel-modular.repo"

# List of additional CentOS Stream repositories.
stackhpc_centos_additional_repos:
  - url: "{{ stackhpc_repo_centos_stream_advanced_virtualization_url }}"
    file: "CentOS-Advanced-Virtualization.repo"
  - url: "{{ stackhpc_repo_centos_stream_nfv_openvswitch_url }}"
    file: "CentOS-NFV-OpenvSwitch.repo"
  - url: "{{ stackhpc_repo_centos_stream_openstack_wallaby_url }}"
    file: "CentOS-OpenStack-wallaby.repo"
  - url: "{{ stackhpc_repo_centos_stream_powertools_url }}"
    file: "CentOS-Stream-PowerTools.repo"
  - url: "{{ stackhpc_repo_centos_opstools_url }}"
    file: "CentOS-OpsTools.repo"
  - url: "{{ stackhpc_repo_centos_stream_storage_ceph_pacific_url }}"
    file: "CentOS-Ceph-Pacific.repo"

# List of third-party repositories.
stackhpc_third_party_repos:
  - url: "{{ stackhpc_repo_elasticsearch_logstash_kibana_7_x_url }}"
    file: "elasticsearch.repo"
  - url: "{{ stackhpc_repo_grafana_url }}"
    file: "grafana.repo"
  - url: "{{ stackhpc_repo_rabbitmq_erlang_url }}"
    file: "rabbitmq_rabbitmq-erlang.repo"
  - url: "{{ stackhpc_repo_rabbitmq_server_url }}"
    file: "rabbitmq_rabbitmq-server.repo"
  - url: "{{ stackhpc_repo_treasuredata_4_url }}"
    file: "td.repo"

# Dict mapping Jinja2 block names in kolla's Docker images to their contents.
kolla_build_blocks:
  base_header: |
    RUN \
    {% for repo in stackhpc_centos_stream_repos %}
        sed -i -e 's/^\(mirrorlist *=.*\)/#\1/g' \
               -e 's/^[# ]*\(baseurl *=.*\)/#\1/g' \
               -e '/#baseurl.*/a baseurl={{ repo.url }}' /etc/yum.repos.d/{{ repo.file }}{% if not loop.last %} && \
    {% endif %}
    {% endfor %}

  base_centos_repo_overrides_post_yum: |
    {# fixme #}
        && \
    {% for repo in stackhpc_centos_stream_repos + stackhpc_epel_repos + stackhpc_centos_additional_repos + stackhpc_third_party_repos %}
        sed -i -e 's/^\(mirrorlist *=.*\)/#\1/g' \
               -e 's/^[# ]*\(baseurl *=.*\)/#\1/g' \
               -e '/#baseurl.*/a baseurl={{ repo.url }}' /etc/yum.repos.d/{{ repo.file }}{% if not loop.last %} &&{% endif %} \
    {% endfor %}

  grafana_plugins_install: |
    RUN grafana-cli plugins install vonage-status-panel
  ironic_inspector_header: |
    ADD additions-archive /
  prometheus_v2_server_repository_version: |
    ARG prometheus_version='2.32.1'
  prometheus_alertmanager_repository_version: |
    ARG prometheus_alertmanager_version='0.23.0'
  prometheus_cadvisor_repository_version: |
    ARG prometheus_cadvisor_version='0.40.0'
    ARG prometheus_cadvisor_sha256sum='8e3df91eee70c72ac3f3184b9fab1229b037c2e850ff1593103b2bd9028c57c0'
  node_exporter_repository_version: |
    ARG node_exporter_version='1.3.1'
  prometheus_memcached_exporter_repository_version: |
    ARG memcached_exporter_version='0.9.0'
  haproxy_exporter_repository_version: |
    ARG haproxy_exporter_version='0.13.0'
  mysqld_exporter_repository_version: |
    ARG mysqld_exporter_version='0.13.0'
  prometheus_blackbox_exporter_repository_version: |
    ARG blackbox_exporter_version='0.19.0'

# Dict mapping image customization variable names to their values.
# Each variable takes the form:
# <image name>_<customization>_<operation>
# Hyphens in the image name must be replaced with underscores. The
# customization is most commonly packages. The operation should be one of
# override, append or remove. The value should be a list.
kolla_build_customizations:
  ironic_inspector_pip_packages_append:
    - /additions/*
  ovn_base_packages_override:
    - ovn-2021-21.06.0
  ovn_controller_packages_override:
    - ovn-2021-host-21.06.0
  ovn_nb_db_server_packages_override:
    - ovn-2021-central-21.06.0
  ovn_northd_packages_override:
    - ovn-2021-central-21.06.0
  ovn_sb_db_server_packages_override:
    - ovn-2021-central-21.06.0
  openvswitch_base_packages_override:
    - libibverbs
    - openvswitch2.16
    - openvswitch-selinux-extra-policy
    - python3-netifaces
    - python3-openvswitch2.16
    - tcpdump

###############################################################################
# Kolla-ansible inventory configuration.

# Full custom seed inventory contents.
#kolla_seed_inventory_custom:

# List of names of default host variables to pass through from kayobe hosts to
# the kolla-ansible seed host, if set. See also
# kolla_seed_inventory_pass_through_host_vars_map.
#kolla_seed_inventory_pass_through_host_vars_default:

# List of names of additional host variables to pass through from kayobe hosts
# to the kolla-ansible seed host, if set. See also
# kolla_seed_inventory_pass_through_host_vars_map.
#kolla_seed_inventory_pass_through_host_vars_extra:

# List of names of host variables to pass through from kayobe hosts to
# the kolla-ansible seed host, if set. See also
# kolla_seed_inventory_pass_through_host_vars_map.
#kolla_seed_inventory_pass_through_host_vars:

# Dict mapping names of default variables in
# kolla_seed_inventory_pass_through_host_vars to the variable to use in
# kolla-ansible. If a variable name is not in this mapping the kayobe name is
# used.
#kolla_seed_inventory_pass_through_host_vars_map_default:

# Dict mapping names of extra variables in
# kolla_seed_inventory_pass_through_host_vars to the variable to use in
# kolla-ansible. If a variable name is not in this mapping the kayobe name is
# used.
#kolla_seed_inventory_pass_through_host_vars_map_extra:

# Dict mapping names of variables in
# kolla_seed_inventory_pass_through_host_vars to the variable to use in
# kolla-ansible. If a variable name is not in this mapping the kayobe name is
# used.
#kolla_seed_inventory_pass_through_host_vars_map:

# Custom overcloud inventory containing a mapping from top level groups to
# hosts.
#kolla_overcloud_inventory_custom_top_level:

# Custom overcloud inventory containing a mapping from components to top level
# groups.
#kolla_overcloud_inventory_custom_components:

# Custom overcloud inventory containing a mapping from services to components.
#kolla_overcloud_inventory_custom_services:

# Full custom overcloud inventory contents. By default this will be the
# concatenation of the top level, component, and service inventories.
#kolla_overcloud_inventory_custom:

# Dict mapping from kolla-ansible groups to kayobe groups and variables. Each
# item is a dict with the following items:
# * groups: A list of kayobe ansible groups to map to this kolla-ansible group.
# * vars: A dict mapping variable names to values for hosts in this
#         kolla-ansible group.
#kolla_overcloud_inventory_top_level_group_map:

# List of names of top level kolla-ansible groups. Any of these groups which
# have no hosts mapped to them will be provided with an empty group definition.
#kolla_overcloud_inventory_kolla_top_level_groups:

# List of names of default host variables to pass through from kayobe hosts to
# kolla-ansible hosts, if set. See also
# kolla_overcloud_inventory_pass_through_host_vars_map.
#kolla_overcloud_inventory_pass_through_host_vars_default:

# List of names of additional host variables to pass through from kayobe hosts
# to kolla-ansible hosts, if set. See also
# kolla_overcloud_inventory_pass_through_host_vars_map.
#kolla_overcloud_inventory_pass_through_host_vars_extra:

# List of names of host variables to pass through from kayobe hosts to
# kolla-ansible hosts, if set. See also
# kolla_overcloud_inventory_pass_through_host_vars_map.
#kolla_overcloud_inventory_pass_through_host_vars:

# Dict mapping names of default variables in
# kolla_overcloud_inventory_pass_through_host_vars to the variable to use in
# kolla-ansible. If a variable name is not in this mapping the kayobe name is
# used.
#kolla_overcloud_inventory_pass_through_host_vars_map_default:

# Dict mapping names of additional variables in
# kolla_overcloud_inventory_pass_through_host_vars to the variable to use in
# kolla-ansible. If a variable name is not in this mapping the kayobe name is
# used.
#kolla_overcloud_inventory_pass_through_host_vars_map_extra:

# Dict mapping names of variables in
# kolla_overcloud_inventory_pass_through_host_vars to the variable to use in
# kolla-ansible. If a variable name is not in this mapping the kayobe name is
# used.
#kolla_overcloud_inventory_pass_through_host_vars_map:

###############################################################################
# Kolla-ansible configuration.

# Virtualenv directory where Kolla-ansible's ansible modules will execute
# remotely on the target nodes. If None, no virtualenv will be used.
#kolla_ansible_target_venv:

# Whether TLS is enabled for the external API endpoints. Default is 'no'.
#kolla_enable_tls_external:

# Whether TLS is enabled for the internal API endpoints. Default is 'no'.
#kolla_enable_tls_internal:

# Whether debug logging is enabled. Default is 'false'.
#kolla_openstack_logging_debug:

# Upper constraints file for installation of Kolla.
# Default value is {{ pip_upper_constraints_file }}.
#kolla_upper_constraints_file:

# User account to use for Kolla SSH access. Default is 'kolla'.
#kolla_ansible_user:

# Primary group of Kolla SSH user. Default is 'kolla'.
#kolla_ansible_group:

# Whether to use privilege escalation for all operations performed via Kolla
# Ansible. Default is 'false'.
#kolla_ansible_become:

# Whether to create a user account, configure passwordless sudo and authorise
# an SSH key for Kolla Ansible. Default is 'true'.
#kolla_ansible_create_user:

###############################################################################
# Kolla feature flag configuration.

#kolla_enable_aodh:
#kolla_enable_barbican:
#kolla_enable_blazar:
#kolla_enable_ceilometer:
#kolla_enable_ceilometer_horizon_policy_file:
#kolla_enable_ceilometer_ipmi:
#kolla_enable_cells:
#kolla_enable_central_logging:
#kolla_enable_chrony:
#kolla_enable_cinder:
#kolla_enable_cinder_backend_hnas_nfs:
#kolla_enable_cinder_backend_iscsi:
#kolla_enable_cinder_backend_lvm:
#kolla_enable_cinder_backend_nfs:
#kolla_enable_cinder_backend_quobyte:
#kolla_enable_cinder_backup:
#kolla_enable_cinder_horizon_policy_file:
#kolla_enable_cloudkitty:
#kolla_enable_collectd:
#kolla_enable_container_healthchecks:
#kolla_enable_cyborg:
#kolla_enable_designate:
#kolla_enable_destroy_images:
#kolla_enable_elasticsearch:
#kolla_enable_elasticsearch_curator:
#kolla_enable_etcd:
#kolla_enable_external_mariadb_load_balancer:
#kolla_enable_fluentd:
#kolla_enable_freezer:
#kolla_enable_glance:
#kolla_enable_glance_horizon_policy_file:
#kolla_enable_glance_image_cache:
#kolla_enable_gnocchi:
#kolla_enable_gnocchi_statsd:
#kolla_enable_grafana:
#kolla_enable_hacluster:
#kolla_enable_haproxy:
#kolla_enable_haproxy_memcached:
#kolla_enable_heat:
#kolla_enable_heat_horizon_policy_file:
#kolla_enable_horizon:
#kolla_enable_horizon_blazar:
#kolla_enable_horizon_cloudkitty:
#kolla_enable_horizon_designate:
#kolla_enable_horizon_freezer:
#kolla_enable_horizon_heat:
#kolla_enable_horizon_ironic:
#kolla_enable_horizon_magnum:
#kolla_enable_horizon_manila:
#kolla_enable_horizon_masakari:
#kolla_enable_horizon_mistral:
#kolla_enable_horizon_monasca:
#kolla_enable_horizon_murano:
#kolla_enable_horizon_neutron_vpnaas:
#kolla_enable_horizon_octavia:
#kolla_enable_horizon_sahara:
#kolla_enable_horizon_senlin:
#kolla_enable_horizon_solum:
#kolla_enable_horizon_tacker:
#kolla_enable_horizon_trove:
#kolla_enable_horizon_vitrage:
#kolla_enable_horizon_watcher:
#kolla_enable_horizon_zun:
#kolla_enable_influxdb:
#kolla_enable_ironic:
#kolla_enable_ironic_ipxe:
#kolla_enable_ironic_neutron_agent:
#kolla_enable_ironic_pxe_uefi:
#kolla_enable_iscsid:
#kolla_enable_kafka:
#kolla_enable_keepalived:
#kolla_enable_keystone:
#kolla_enable_keystone_federation:
#kolla_enable_keystone_horizon_policy_file:
#kolla_enable_kibana:
#kolla_enable_kuryr:
#kolla_enable_magnum:
#kolla_enable_manila:
#kolla_enable_manila_backend_cephfs_native:
#kolla_enable_manila_backend_cephfs_nfs:
#kolla_enable_manila_backend_generic:
#kolla_enable_manila_backend_glusterfs_nfs:
#kolla_enable_manila_backend_hnas:
#kolla_enable_mariabackup:
#kolla_enable_mariadb:
#kolla_enable_masakari:
#kolla_enable_memcached:
#kolla_enable_mistral:
#kolla_enable_monasca:
#kolla_enable_multipathd:
#kolla_enable_murano:
#kolla_enable_neutron:
#kolla_enable_neutron_agent_ha:
#kolla_enable_neutron_bgp_dragent:
#kolla_enable_neutron_dvr:
#kolla_enable_neutron_horizon_policy_file:
#kolla_enable_neutron_infoblox_ipam_agent:
#kolla_enable_neutron_metering:
#kolla_enable_neutron_mlnx:
#kolla_enable_neutron_port_forwarding:
#kolla_enable_neutron_provider_networks:
#kolla_enable_neutron_qos:
#kolla_enable_neutron_segments:
#kolla_enable_neutron_sfc:
#kolla_enable_neutron_sriov:
#kolla_enable_neutron_trunk:
#kolla_enable_neutron_vpnaas:
#kolla_enable_nova:
#kolla_enable_nova_fake:
#kolla_enable_nova_horizon_policy_file:
#kolla_enable_nova_serialconsole_proxy:
#kolla_enable_nova_ssh:
#kolla_enable_octavia:
#kolla_enable_octavia_driver_agent:
#kolla_enable_openstack_core:
#kolla_enable_openvswitch:
#kolla_enable_osprofiler:
#kolla_enable_outward_rabbitmq:
#kolla_enable_ovn:
#kolla_enable_ovs_dpdk:
#kolla_enable_panko:
#kolla_enable_placement:
#kolla_enable_prometheus:
#kolla_enable_prometheus_alertmanager:
#kolla_enable_prometheus_blackbox_exporter:
#kolla_enable_prometheus_cadvisor:
#kolla_enable_prometheus_ceph_mgr_exporter:
#kolla_enable_prometheus_elasticsearch_exporter:
#kolla_enable_prometheus_haproxy_exporter:
#kolla_enable_prometheus_memcached_exporter:
#kolla_enable_prometheus_mysqld_exporter:
#kolla_enable_prometheus_node_exporter:
#kolla_enable_prometheus_openstack_exporter:
#kolla_enable_prometheus_rabbitmq_exporter:
#kolla_enable_prometheus_server:
#kolla_enable_qdrouterd:
#kolla_enable_rabbitmq:
#kolla_enable_rally:
#kolla_enable_redis:
#kolla_enable_sahara:
#kolla_enable_senlin:
#kolla_enable_skydive:
#kolla_enable_solum:
#kolla_enable_storm:
#kolla_enable_swift:
#kolla_enable_swift_recon:
#kolla_enable_swift_s3api:
#kolla_enable_tacker:
#kolla_enable_telegraf:
#kolla_enable_tempest:
#kolla_enable_trove:
#kolla_enable_trove_singletenant:
#kolla_enable_vitrage:
#kolla_enable_vitrage_prometheus_datasource:
#kolla_enable_vmtp:
#kolla_enable_watcher:
#kolla_enable_zookeeper:
#kolla_enable_zun:

###############################################################################
# Passwords and credentials.

# Dictionary containing default custom passwords to add or override in the
# Kolla passwords file.
#kolla_ansible_default_custom_passwords:

# Dictionary containing custom passwords to add or override in the Kolla
# passwords file.
#kolla_ansible_custom_passwords:

###############################################################################
# OpenStack API addresses.

# Virtual IP address of OpenStack internal API. Default is the vip_address
# attribute of the internal network.
#kolla_internal_vip_address:

# Fully Qualified Domain Name (FQDN) of OpenStack internal API. Default is the
# fqdn attribute of the internal network if set, otherwise
# kolla_internal_vip_address.
#kolla_internal_fqdn:

# Virtual IP address of OpenStack external API. Default is the vip_address
# attribute of the external network.
#kolla_external_vip_address:

# Fully Qualified Domain Name (FQDN) of OpenStack external API. Default is the
# fqdn attribute of the external network if set, otherwise
# kolla_external_vip_address.
#kolla_external_fqdn:

###############################################################################
# TLS certificate bundle management

# External API certificate bundle.
#
# When kolla_enable_tls_external is true, this should contain an X.509
# certificate bundle for the external API.
#
# Note that this should be formatted as a literal style block scalar.
#
# NOTE: kolla_tls_cert has been renamed to kolla_external_tls_cert. Support for
# the deprecated name kolla_tls_cert will be removed in a future release.
#kolla_external_tls_cert:

# Path to a CA certificate file to use for the OS_CACERT environment variable
# in public-openrc.sh file when TLS is enabled, instead of Kolla-Ansible's
# default.
#kolla_external_fqdn_cacert:

# Internal API certificate bundle.
#
# When kolla_enable_tls_internal is true, this should contain an X.509
# certificate bundle for the internal API.
#
# Note that this should be formatted as a literal style block scalar.
#kolla_internal_tls_cert:

# Path to a CA certificate file to use for the OS_CACERT environment variable
# in admin-openrc.sh file when TLS is enabled, instead of Kolla-Ansible's
# default.
#kolla_internal_fqdn_cacert:

###############################################################################
# Dummy variable to allow Ansible to accept this file.
workaround_ansible_issue_8743: yes
