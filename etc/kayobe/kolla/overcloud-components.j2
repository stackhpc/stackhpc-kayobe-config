# This inventory section provides a mapping of the components to top level
# groups.
#
# Top level groups define the roles of hosts, e.g. controller or compute.
# Components define groups of services, e.g. nova or ironic.
# Services define single containers, e.g. nova-compute or ironic-api.

[baremetal:children]
control
network
compute
storage
monitoring

[tls-backend:children]
control

# You can explicitly specify which hosts run each project by updating the
# groups in the sections below. Common services are grouped together.

[common:children]
control
network
compute
storage
monitoring

[collectd:children]
compute

[grafana:children]
monitoring

[etcd:children]
control

###### CUSTOMISED #######
[influxdb]
#control
# FIXME: Ideally we wouldn't reference monitoring nodes in here directly, but
# only one InfluxDB service should exist without the Enterprise license for
# clustering, and groups can't be indexed in an inventory (e.g. ironic[0]).
{% if groups.get('monitoring', []) | length > 0 %}
{{ groups['monitoring'][0] }}
{% endif %}
#########################

[prometheus:children]
monitoring

###### CUSTOMISED #######
[kafka:children]
#control
monitoring
#########################

###### CUSTOMISED #######
[kibana:children]
#control
monitoring
#########################

[telegraf:children]
compute
control
monitoring
network
storage

###### CUSTOMISED #######
[elasticsearch:children]
#control
monitoring
#########################

[hacluster:children]
control

[hacluster-remote:children]
compute

[loadbalancer:children]
network

[mariadb:children]
control

[rabbitmq:children]
control

[outward-rabbitmq:children]
control

[qdrouterd:children]
control

[monasca-agent:children]
compute
control
monitoring
network
storage

[monasca:children]
monitoring

[storm:children]
monitoring

[keystone:children]
control

[glance:children]
control

[nova:children]
control

[neutron:children]
network

[openvswitch:children]
network
compute
manila-share

[cinder:children]
control

[cloudkitty:children]
control

[freezer:children]
control

[memcached:children]
control

[horizon:children]
control

[swift:children]
control

[barbican:children]
control

[heat:children]
control

[murano:children]
control

[solum:children]
control

[ironic:children]
control

[magnum:children]
control

[sahara:children]
control

[mistral:children]
control

[manila:children]
control

[ceilometer:children]
control

[aodh:children]
control

[cyborg:children]
control
compute

[gnocchi:children]
control

[tacker:children]
control

[trove:children]
control

[senlin:children]
control

[vitrage:children]
control

[watcher:children]
control

[octavia:children]
control

[designate:children]
control

[placement:children]
control

[bifrost:children]
deployment

###### CUSTOMISED #######
[zookeeper:children]
#control
monitoring
#########################

[zun:children]
control

[skydive:children]
monitoring

[redis:children]
control

[blazar:children]
control

###### CUSTOMISED #######
[caso]
#monitoring
# FIXME: Ideally we wouldn't reference monitoring nodes in here directly, but
# only one cASO service should exist and groups can't be indexed in an
# inventory (e.g. ironic[0]).
{% if groups.get('monitoring', []) | length > 0 %}
{{ groups['monitoring'][0] }}
{% endif %}
#########################
