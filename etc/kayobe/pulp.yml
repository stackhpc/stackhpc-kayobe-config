---
###############################################################################
# Local Pulp server configuration

# Base URL of the local Pulp service.
# Default uses the seed node's IP on the admin network.
pulp_url: "{{ 'https' if pulp_enable_tls | bool else 'http' }}://{{ lookup('vars', admin_oc_net_name ~ '_ips')[groups.seed.0] }}:{{ pulp_port }}"

# Port on the seed node's interface on the admin network that the Pulp service
# listens on.
pulp_port: "{{ '443' if pulp_enable_tls | bool else '80' }}"

# Whether to enable TLS for Pulp.
pulp_enable_tls: false

# Path to a TLS certificate to use when TLS is enabled.
#pulp_cert_path:

# Path to a TLS key to use when TLS is enabled.
#pulp_key_path:

###############################################################################
# Local Pulp access credentials

# Credentials used to access the local Pulp REST API.
pulp_username: admin
pulp_password: "{{ secrets_pulp_password }}"

# Proxy to use when adding remotes.
pulp_proxy_url: "{{ omit }}"

###############################################################################
# StackHPC Pulp server

# The scheme of the StackHPC Pulp service (http or https)
stackhpc_release_pulp_scheme: "https"

# The domain of the StackHPC Pulp service.
stackhpc_release_pulp_domain: "ark.stackhpc.com"

# Base URL of the StackHPC Pulp service.
stackhpc_release_pulp_url: "{{ stackhpc_release_pulp_scheme }}://{{ stackhpc_release_pulp_domain }}"

# Credentials used to access the StackHPC Pulp service.
stackhpc_release_pulp_username: "{{ secrets_stackhpc_release_pulp_username }}"
stackhpc_release_pulp_password: "{{ secrets_stackhpc_release_pulp_password }}"

# Content URL of the StackHPC Pulp service.
stackhpc_release_pulp_content_url: "{{ stackhpc_release_pulp_url }}/pulp/content"

# Content URL of the StackHPC Pulp service, with basic auth.
# NOTE(Alex-Welsh): This may need reworking if it reveals the credentials
# at runtime in the ansible output
stackhpc_release_pulp_content_url_with_auth: "{{ stackhpc_release_pulp_scheme }}://{{ stackhpc_release_pulp_username }}:{{ stackhpc_release_pulp_password }}@{{ stackhpc_release_pulp_domain }}/pulp/content"

# Sync all repositories required for building Kolla images from the
# StackHPC Ark Pulp service to local Pulp.
# NOTE: Only RPM repositories are supported.
stackhpc_pulp_sync_for_local_container_build: false

###############################################################################
# Debs

# Whether to sync Ubuntu packages.
stackhpc_pulp_sync_ubuntu_jammy: "{{ os_distribution == 'ubuntu' }}"

# Default configuration, which each element of stackhpc_pulp_deb_repos
# is combined with
stackhpc_pulp_deb_repos_default_config:
  remote_username: "{{ stackhpc_release_pulp_username }}"
  remote_password: "{{ stackhpc_release_pulp_password }}"
  client_cert: ""
  client_key: ""
  policy: on_demand
  proxy_url: "{{ pulp_proxy_url }}"
  architectures: amd64
  mirror: true
  state: present

# Deb repositories
stackhpc_pulp_deb_repos:
  # Base Ubuntu Jammy repositories
  - name: "Ubuntu jammy"
    url: "{{ stackhpc_release_pulp_content_url }}/ubuntu/jammy/{{ stackhpc_pulp_repo_ubuntu_jammy_version }}"
    distribution_name: "ubuntu-jammy-"
    base_path: "ubuntu/jammy/"
    components: "main restricted universe multiverse"
    distributions: "jammy jammy-updates jammy-backports"
    required: "{{ stackhpc_pulp_sync_ubuntu_jammy | bool }}"

  - name: "Ubuntu jammy security"
    url: "{{ stackhpc_release_pulp_content_url }}/ubuntu/jammy-security/{{ stackhpc_pulp_repo_ubuntu_jammy_security_version }}"
    distribution_name: "ubuntu-jammy-security-"
    base_path: "ubuntu/jammy-security/"
    components: "main restricted universe multiverse"
    distributions: "jammy-security"
    required: "{{ stackhpc_pulp_sync_ubuntu_jammy | bool }}"

  # Ubuntu Cloud Archive (UCA) repositories
  - name: "Ubuntu Cloud Archive"
    url: "{{ stackhpc_release_pulp_content_url }}/ubuntu-cloud-archive/{{ stackhpc_pulp_repo_ubuntu_cloud_archive_version }}"
    distribution_name: "ubuntu-cloud-archive-"
    base_path: "ubuntu-cloud-archive/"
    components: "main"
    distributions: "jammy-updates/{{ openstack_release_codename }}"
    required: "{{ stackhpc_pulp_sync_ubuntu_jammy | bool }}"

  # Third-party repositories
  - name: "Docker CE for Ubuntu"
    url: "{{ stackhpc_release_pulp_content_url }}/docker-ce/ubuntu/{{ stackhpc_pulp_repo_docker_ce_ubuntu_version }}"
    distribution_name: "docker-ce-for-ubuntu-"
    base_path: "docker-ce/ubuntu/"
    distributions: "jammy"
    components: "stable"
    required: "{{ stackhpc_pulp_sync_ubuntu_jammy | bool }}"

# Publication format is a subset of distribution.
stackhpc_pulp_publication_deb_development: "{{ stackhpc_pulp_distribution_deb_development }}"

# Content is made available at well-known distribution names for development,
# production.

stackhpc_pulp_repository_deb_repos: >-
  {%- set deb_repos = [] -%}
  {%- for repo in stackhpc_pulp_deb_repos -%}
  {%- set deb_repo = {"name": repo.name} -%}
  {%- set deb_repo = deb_repo | combine({"url": repo.url}) -%}
  {%- set deb_repo = deb_repo | combine({"required": repo.required}) -%}
  {%- if "policy" in repo -%}
  {%- set deb_repo = deb_repo | combine({"policy": repo.policy}) -%}
  {%- endif -%}
  {%- if "mirror" in repo -%}
  {%- set deb_repo = deb_repo | combine({"mirror": repo.mirror}) -%}
  {%- endif -%}
  {%- if "distributions" in repo -%}
  {%- set deb_repo = deb_repo | combine({"distributions": repo.distributions}) -%}
  {%- endif -%}
  {%- if "components" in repo -%}
  {%- set deb_repo = deb_repo | combine({"components": repo.components}) -%}
  {%- endif -%}
  {%- if "architectures" in repo -%}
  {%- set deb_repo = deb_repo | combine({"architectures": repo.architectures}) -%}
  {%- endif -%}
  {%- set _ = deb_repos.append(stackhpc_pulp_deb_repos_default_config | combine(deb_repo)) -%}
  {%- endfor -%}
  {{ deb_repos }}

stackhpc_pulp_deb_dists_default_config:
  state: present
  mode: verbatim

# Development tracks the release repositories.
stackhpc_pulp_distribution_deb_development: >-
  {%- set dev_dists = [] -%}
  {%- for repo in stackhpc_pulp_deb_repos -%}
  {%- set name = repo.distribution_name ~ 'development' -%}
  {%- set base_path = repo.base_path ~ 'development' -%}
  {%- set dev_dist = {
                      "name": name,
                      "repository": repo.name,
                      "base_path": base_path,
                      "required": repo.required
                      }
                    -%}
  {%- if "mode" in repo -%}
  {%- set dev_dist = dev_dist | combine({"mode": repo.mode}) -%}
  {%- endif -%}
  {%- set _ = dev_dists.append(stackhpc_pulp_deb_dists_default_config | combine(dev_dist)) -%}
  {%- endfor -%}
  {{ dev_dists }}

# Development gets promoted to production.
stackhpc_pulp_distribution_deb_production: >-
  {%- set prod_dists = [] -%}
  {%- for repo in stackhpc_pulp_deb_repos -%}
  {%- set name = repo.distribution_name ~ 'production' -%}
  {%- set base_path = repo.base_path ~ 'production' -%}
  {%- set prod_dist = {
                      "name": name,
                      "distribution": repo.distribution_name ~ 'development',
                      "base_path": base_path,
                      "required": repo.required
                      }
                    -%}
  {%- if "mode" in repo -%}
  {%- set prod_dist = prod_dist | combine({"mode": repo.mode}) -%}
  {%- endif -%}
  {%- set _ = prod_dists.append(stackhpc_pulp_deb_dists_default_config | combine(prod_dist)) -%}
  {%- endfor -%}
  {{ prod_dists }}

###############################################################################
# RPMs

# Content comes in from release repositories, via pinned repo versions.

# Whether to sync Rocky Linux 9 packages.
stackhpc_pulp_sync_rocky_9: "{{ os_distribution == 'rocky' }}"
# Rocky 9 minor version number. Supported values: 1, 2, 3. Default is 3
stackhpc_pulp_repo_rocky_9_minor_version: 3
# Rocky 9 Snapshot versions. The defaults use the appropriate version from
# pulp-repo-versions.yml for the selected minor release.
stackhpc_pulp_repo_rocky_9_appstream_version: "{{ lookup('vars', 'stackhpc_pulp_repo_rocky_9_%s_appstream_version' % stackhpc_pulp_repo_rocky_9_minor_version) }}"
stackhpc_pulp_repo_rocky_9_baseos_version: "{{ lookup('vars', 'stackhpc_pulp_repo_rocky_9_%s_baseos_version' % stackhpc_pulp_repo_rocky_9_minor_version) }}"
stackhpc_pulp_repo_rocky_9_extras_version: "{{ lookup('vars', 'stackhpc_pulp_repo_rocky_9_%s_extras_version' % stackhpc_pulp_repo_rocky_9_minor_version) }}"
stackhpc_pulp_repo_rocky_9_crb_version: "{{ lookup('vars', 'stackhpc_pulp_repo_rocky_9_%s_crb_version' % stackhpc_pulp_repo_rocky_9_minor_version) }}"
stackhpc_pulp_repo_rocky_9_highavailability_version: "{{ lookup('vars', 'stackhpc_pulp_repo_rocky_9_%s_highavailability_version' % stackhpc_pulp_repo_rocky_9_minor_version) }}"

# Whether to sync packages common to all RHEL 9 derivatives.
stackhpc_pulp_sync_el_9: "{{ stackhpc_pulp_sync_rocky_9 | bool }}"

# Default configuration, which each element of stackhpc_pulp_rpm_repos
# is combined with
stackhpc_pulp_rpm_repos_default_config:
  remote_username: "{{ stackhpc_release_pulp_username }}"
  remote_password: "{{ stackhpc_release_pulp_password }}"
  client_cert: ""
  client_key: ""
  policy: on_demand
  proxy_url: "{{ pulp_proxy_url }}"
  sync_policy: mirror_complete
  state: present

stackhpc_pulp_rpm_repos:
  # Grafana and RabbitMQ repositories - version 8/9 agnositic
  - name: Grafana
    url: "{{ stackhpc_release_pulp_content_url }}/grafana/oss/rpm/{{ stackhpc_pulp_repo_grafana_version }}"
    distribution_name: "grafana-"
    base_path: "grafana/oss/rpm/"
    required: "{{ stackhpc_pulp_sync_for_local_container_build | bool and stackhpc_pulp_sync_el_9 | bool }}"

  - name: RabbitMQ - Erlang
    url: "{{ stackhpc_release_pulp_content_url }}/rabbitmq/erlang/el/8/x86_64/{{ stackhpc_pulp_repo_rabbitmq_erlang_version }}"
    distribution_name: "rabbitmq-erlang-"
    base_path: "rabbitmq/erlang/el/8/x86_64/"
    required: "{{ stackhpc_pulp_sync_for_local_container_build | bool and stackhpc_pulp_sync_el_9 | bool }}"

  - name: RabbitMQ - Server
    url: "{{ stackhpc_release_pulp_content_url }}/rabbitmq/rabbitmq-server/el/8/x86_64/{{ stackhpc_pulp_repo_rabbitmq_server_version }}"
    distribution_name: "rabbitmq-server-"
    base_path: "rabbitmq/rabbitmq-server/el/8/x86_64/"
    required: "{{ stackhpc_pulp_sync_for_local_container_build | bool and stackhpc_pulp_sync_el_9 | bool }}"

  # Base Rocky 9 repositories
  - name: Rocky Linux 9 - AppStream
    url: "{{ stackhpc_release_pulp_content_url }}/rocky/9.{{ stackhpc_pulp_repo_rocky_9_minor_version }}/AppStream/x86_64/os/{{ stackhpc_pulp_repo_rocky_9_appstream_version }}"
    distribution_name: "rocky-9-appstream-"
    base_path: "rocky/9/AppStream/x86_64/os/"
    required: "{{ stackhpc_pulp_sync_rocky_9 | bool }}"

  - name: Rocky Linux 9 - BaseOS
    url: "{{ stackhpc_release_pulp_content_url }}/rocky/9.{{ stackhpc_pulp_repo_rocky_9_minor_version }}/BaseOS/x86_64/os/{{ stackhpc_pulp_repo_rocky_9_baseos_version }}"
    distribution_name: "rocky-9-baseos-"
    base_path: "rocky/9/BaseOS/x86_64/os/"
    required: "{{ stackhpc_pulp_sync_rocky_9 | bool }}"

  - name: Rocky Linux 9 - Extras
    url: "{{ stackhpc_release_pulp_content_url }}/rocky/9.{{ stackhpc_pulp_repo_rocky_9_minor_version }}/extras/x86_64/os/{{ stackhpc_pulp_repo_rocky_9_extras_version }}"
    distribution_name: "rocky-9-extras-"
    base_path: "rocky/9/extras/x86_64/os/"
    required: "{{ stackhpc_pulp_sync_rocky_9 | bool }}"

  - name: Rocky Linux 9 - CRB
    url: "{{ stackhpc_release_pulp_content_url }}/rocky/9.{{ stackhpc_pulp_repo_rocky_9_minor_version }}/CRB/x86_64/os/{{ stackhpc_pulp_repo_rocky_9_crb_version }}"
    distribution_name: "rocky-9-crb-"
    base_path: "rocky/9/CRB/x86_64/os/"
    required: "{{ stackhpc_pulp_sync_rocky_9 | bool }}"

  - name: Rocky Linux 9 - HighAvailability
    url: "{{ stackhpc_release_pulp_content_url }}/rocky/9.{{ stackhpc_pulp_repo_rocky_9_minor_version }}/highavailability/x86_64/os/{{ stackhpc_pulp_repo_rocky_9_highavailability_version }}"
    distribution_name: "rocky-9-highavailability-"
    base_path: "rocky/9/highavailability/x86_64/os/"
    required: "{{ stackhpc_pulp_sync_rocky_9 | bool }}"

  # Additional CentOS Stream 9 repositories
  - name: CentOS Stream 9 - NFV OpenvSwitch
    url: "{{ stackhpc_release_pulp_content_url }}/centos/9-stream/nfv/x86_64/openvswitch-2/{{ stackhpc_pulp_repo_centos_stream_9_nfv_openvswitch_version }}"
    distribution_name: "centos-stream-9-nfv-openvswitch-"
    base_path: "centos/9-stream/nfv/x86_64/openvswitch-2/"
    required: "{{ stackhpc_pulp_sync_for_local_container_build | bool and stackhpc_pulp_sync_el_9 | bool }}"


  - name: CentOS Stream 9 - OpenStack Antelope
    url: "{{ stackhpc_release_pulp_content_url }}/centos/9-stream/cloud/x86_64/openstack-antelope/{{ stackhpc_pulp_repo_centos_stream_9_openstack_antelope_version }}"
    distribution_name: "centos-stream-9-openstack-antelope-"
    base_path: "centos/9-stream/cloud/x86_64/openstack-antelope/"
    required: "{{ stackhpc_pulp_sync_for_local_container_build | bool and stackhpc_pulp_sync_el_9 | bool }}"

  - name: CentOS 9 - OpsTools - collectd
    url: "{{ stackhpc_release_pulp_content_url }}/centos/9-stream/opstools/x86_64/collectd-5/{{ stackhpc_pulp_repo_centos_stream_9_opstools_version }}"
    distribution_name: "centos-9-opstools-collectd-"
    base_path: "centos/9-stream/opstools/x86_64/collectd-5/"
    required: "{{ stackhpc_pulp_sync_for_local_container_build | bool and stackhpc_pulp_sync_el_9 | bool }}"

  - name: CentOS Stream 9 - Ceph Quincy
    url: "{{ stackhpc_release_pulp_content_url }}/centos/9-stream/storage/x86_64/ceph-quincy/{{ stackhpc_pulp_repo_centos_stream_9_storage_ceph_quincy_version }}"
    distribution_name: "centos-stream-9-ceph-quincy-"
    base_path: "centos/9-stream/storage/x86_64/ceph-quincy/"
    required: "{{ stackhpc_pulp_sync_for_local_container_build | bool and stackhpc_pulp_sync_el_9 | bool }}"

  # EPEL 9 repository
  - name: Extra Packages for Enterprise Linux 9 - x86_64
    url: "{{ stackhpc_release_pulp_content_url }}/epel/9/Everything/x86_64/{{ stackhpc_pulp_repo_epel_9_version }}"
    distribution_name: "extra-packages-for-enterprise-linux-9-x86_64-"
    base_path: "epel/9/Everything/x86_64/"
    sync_policy: mirror_content_only
    required: "{{ stackhpc_pulp_sync_el_9 | bool }}"

  # ELRepo 9 repository
  - name: ELRepo.org Community Enterprise Linux Repository - el9
    url: "{{ stackhpc_release_pulp_content_url }}/elrepo/elrepo/el9/x86_64/{{ stackhpc_pulp_repo_elrepo_9_version }}"
    distribution_name: elrepo-el9-x86_64-
    base_path: elrepo/elrepo/el9/x86_64/
    sync_policy: mirror_content_only
    required: "{{ stackhpc_pulp_sync_el_9 | bool }}"

  # Third-party repositories
  - name: Docker CE for CentOS 9
    url: "{{ stackhpc_release_pulp_content_url }}/docker-ce/centos/9/x86_64/stable/{{ stackhpc_pulp_repo_centos_stream_9_docker_version }}"
    distribution_name: "docker-ce-for-centos-9-"
    base_path: "docker-ce/centos/9/x86_64/stable/"
    required: "{{ stackhpc_pulp_sync_el_9 | bool }}"

  # Additional RHEL 9 repositories
  - name: TreasureData 4 for RHEL 9
    url: "{{ stackhpc_release_pulp_content_url }}/treasuredata/4/redhat/9/x86_64/{{ stackhpc_pulp_repo_rhel_9_treasuredata_4_version }}"
    distribution_name: "rhel-9-treasuredata-4-"
    base_path: "treasuredata/4/redhat/9/x86_64/"
    required: "{{ stackhpc_pulp_sync_for_local_container_build | bool and stackhpc_pulp_sync_el_9 | bool }}"

  - name: MariaDB 10.6 for RHEL 9
    url: "{{ stackhpc_release_pulp_content_url }}/mariadb-10.6/yum/rhel/9/x86_64/{{ stackhpc_pulp_repo_rhel_9_mariadb_10_6_version }}"
    distribution_name: "rhel-9-mariadb-10-6-"
    base_path: "mariadb-10.6/yum/rhel/9/x86_64/"
    required: "{{ stackhpc_pulp_sync_for_local_container_build | bool and stackhpc_pulp_sync_el_9 | bool }}"

  - name: InfluxDB for RHEL 9
    url: "{{ stackhpc_release_pulp_content_url }}/influxdb/rhel/9/x86_64/stable/{{ stackhpc_pulp_repo_rhel_9_influxdb_version }}"
    distribution_name: "rhel-9-influxdb-"
    base_path: "influxdb/rhel/9/x86_64/stable/"
    required: "{{ stackhpc_pulp_sync_for_local_container_build | bool and stackhpc_pulp_sync_el_9 | bool }}"

  - name: OpenSearch 2.x
    url: "{{ stackhpc_release_pulp_content_url }}/opensearch/2.x/yum/{{ stackhpc_pulp_repo_opensearch_2_x_version }}"
    distribution_name: "opensearch-2-x-"
    base_path: "opensearch/2.x/yum/"
    required: "{{ stackhpc_pulp_sync_for_local_container_build | bool and stackhpc_pulp_sync_el_9 | bool }}"

  - name: OpenSearch Dashboards 2.x
    url: "{{ stackhpc_release_pulp_content_url }}/opensearch-dashboards/2.x/yum/{{ stackhpc_pulp_repo_opensearch_dashboards_2_x_version }}"
    distribution_name: "opensearch-dashboards-2-x-"
    base_path: "opensearch-dashboards/2.x/yum/"
    required: "{{ stackhpc_pulp_sync_for_local_container_build | bool and stackhpc_pulp_sync_el_9 | bool }}"

# RPM repositories
stackhpc_pulp_repository_rpm_repos: >-
  {%- set rpm_repos = [] -%}
  {%- for repo in stackhpc_pulp_rpm_repos -%}
  {%- set rpm_repo = {"name": repo.name} -%}
  {%- set rpm_repo = rpm_repo | combine({"url": repo.url}) -%}
  {%- set rpm_repo = rpm_repo | combine({"required": repo.required}) -%}
  {%- if "policy" in repo -%}
  {%- set rpm_repo = rpm_repo | combine({"policy": repo.policy}) -%}
  {%- endif -%}
  {%- if "sync_policy" in repo -%}
  {%- set rpm_repo = rpm_repo | combine({"sync_policy": repo.sync_policy}) -%}
  {%- endif -%}
  {%- set _ = rpm_repos.append(stackhpc_pulp_rpm_repos_default_config | combine(rpm_repo)) -%}
  {%- endfor -%}
  {{ rpm_repos }}

# Publication format is a subset of distribution.
stackhpc_pulp_publication_rpm_development: "{{ stackhpc_pulp_distribution_rpm_development }}"

# Content is made available at well-known distribution names for development,
# production.

stackhpc_pulp_rpm_dists_default_config:
  state: present

# Development tracks the release repositories.
stackhpc_pulp_distribution_rpm_development: >-
  {%- set dev_dists = [] -%}
  {%- for repo in stackhpc_pulp_rpm_repos -%}
  {%- set name = repo.distribution_name ~ 'development' -%}
  {%- set base_path = repo.base_path ~ 'development' -%}
  {%- set dev_dist = {
                      "name": name,
                      "repository": repo.name,
                      "base_path": base_path,
                      "required": repo.required
                      }
                    -%}
  {%- set _ = dev_dists.append(stackhpc_pulp_rpm_dists_default_config | combine(dev_dist)) -%}
  {%- endfor -%}
  {{ dev_dists }}

# Development gets promoted to production.
stackhpc_pulp_distribution_rpm_production: >-
  {%- set prod_dists = [] -%}
  {%- for repo in stackhpc_pulp_rpm_repos -%}
  {%- set name = repo.distribution_name ~ 'production' -%}
  {%- set base_path = repo.base_path ~ 'production' -%}
  {%- set dev_dist = {
                      "name": name,
                      "distribution": repo.distribution_name ~ 'development',
                      "base_path": base_path,
                      "required": repo.required
                      }
                    -%}
  {%- set _ = prod_dists.append(stackhpc_pulp_rpm_dists_default_config | combine(dev_dist)) -%}
  {%- endfor -%}
  {{ prod_dists }}

###############################################################################
# Containers

# URL of the StackHPC Pulp service's container image registry.
stackhpc_release_pulp_registry_url: "{{ stackhpc_release_pulp_url }}"

# List of all image names.
stackhpc_pulp_images_kolla:
  - barbican-api
  - barbican-keystone-listener
  - barbican-worker
  - bifrost-deploy
  - blazar-api
  - blazar-manager
  - caso
  - cinder-api
  - cinder-backup
  - cinder-scheduler
  - cinder-volume
  - cloudkitty-api
  - cloudkitty-processor
  - cron
  - designate-api
  - designate-backend-bind9
  - designate-central
  - designate-mdns
  - designate-producer
  - designate-sink
  - designate-worker
  - dnsmasq
  - etcd
  - fluentd
  - glance-api
  - grafana
  - haproxy
  - haproxy-ssh
  - heat-api
  - heat-api-cfn
  - heat-engine
  - horizon
  - influxdb
  - ironic-api
  - ironic-conductor
  - ironic-inspector
  - ironic-neutron-agent
  - ironic-pxe
  - keepalived
  - keystone
  - keystone-fernet
  - keystone-ssh
  - kolla-toolbox
  - letsencrypt-lego
  - letsencrypt-webserver
  - magnum-api
  - magnum-conductor
  - manila-api
  - manila-data
  - manila-scheduler
  - manila-share
  - mariadb-clustercheck
  - mariadb-server
  - memcached
  - neutron-dhcp-agent
  - neutron-l3-agent
  - neutron-metadata-agent
  - neutron-openvswitch-agent
  - neutron-server
  - neutron-sriov-agent
  - nova-api
  - nova-compute
  - nova-compute-ironic
  - nova-conductor
  - nova-libvirt
  - nova-novncproxy
  - nova-scheduler
  - nova-serialproxy
  - nova-ssh
  - octavia-api
  - octavia-driver-agent
  - octavia-health-manager
  - octavia-housekeeping
  - octavia-worker
  - opensearch
  - opensearch-dashboards
  - openvswitch-db-server
  - openvswitch-netcontrold
  - openvswitch-vswitchd
  - ovn-controller
  - ovn-nb-db-server
  - ovn-northd
  - ovn-sb-db-server
  - placement-api
  - prometheus-alertmanager
  - prometheus-blackbox-exporter
  - prometheus-cadvisor
  - prometheus-elasticsearch-exporter
  - prometheus-haproxy-exporter
  - prometheus-libvirt-exporter
  - prometheus-memcached-exporter
  - prometheus-msteams
  - prometheus-mtail
  - prometheus-mysqld-exporter
  - prometheus-node-exporter
  - prometheus-openstack-exporter
  - prometheus-v2-server
  - rabbitmq
  - redis
  - redis-sentinel

# List of images for each base distribution which should not/cannot be built.
stackhpc_kolla_unbuildable_images:
  ubuntu-jammy: []
  rocky-9: []

# Whitespace-separated list of regular expressions matching Kolla image names.
# Usage is similar to kolla-build CLI arguments.
# Example:
# kayobe playbook run ... -e stackhpc_pulp_images_kolla_filter='"^glance nova-compute$"'
stackhpc_pulp_images_kolla_filter: ".*"

# Filtered list of Kolla container image names.
stackhpc_pulp_images_kolla_filtered: "{{ stackhpc_pulp_images_kolla | select('search', '(' ~ stackhpc_pulp_images_kolla_filter.split() | join('|') ~ ')') | list }}"

# Common parameters for container image repositories.
stackhpc_pulp_repository_container_repos_kolla_common:
  url: "{{ stackhpc_release_pulp_registry_url }}"
  policy: on_demand
  proxy_url: "{{ pulp_proxy_url }}"
  remote_username: "{{ stackhpc_release_pulp_username }}"
  remote_password: "{{ stackhpc_release_pulp_password }}"
  state: present
  required: true

# List of Kolla container image repositories.
stackhpc_pulp_repository_container_repos_kolla: >-
  {%- set repos = [] -%}
  {%- for image in stackhpc_pulp_images_kolla_filtered -%}
  {%- if image not in stackhpc_kolla_unbuildable_images[kolla_base_distro_and_version]-%}
  {%- set image_repo = kolla_docker_namespace ~ "/" ~ image -%}
  {%- set repo = {"name": image_repo} -%}
  {%- set _ = repos.append(stackhpc_pulp_repository_container_repos_kolla_common | combine(repo)) -%}
  {%- endif -%}
  {%- endfor -%}
  {{ repos }}

# Common parameters for Kolla container image distributions.
stackhpc_pulp_distribution_container_kolla_common:
  state: present
  required: true

# List of Kolla container image distributions.
stackhpc_pulp_distribution_container_kolla: >-
  {%- set distributions = [] -%}
  {%- for image in stackhpc_pulp_images_kolla_filtered -%}
  {%- if image not in stackhpc_kolla_unbuildable_images[kolla_base_distro_and_version]-%}
  {%- set image_repo = kolla_docker_namespace ~ "/" ~ image -%}
  {%- set distribution = {"name": image_repo, "repository": image_repo, "base_path": image_repo} -%}
  {%- set _ = distributions.append(stackhpc_pulp_distribution_container_kolla_common | combine(distribution)) -%}
  {%- endif -%}
  {%- endfor -%}
  {{ distributions }}

# Whether to sync Ceph container images.
stackhpc_sync_ceph_images: false

# List of Ceph container image repositories.
stackhpc_pulp_repository_container_repos_ceph:
  - name: "ceph/ceph"
    url: "https://quay.io"
    policy: on_demand
    proxy_url: "{{ pulp_proxy_url }}"
    state: present
    include_tags: "{{ cephadm_image_tag }}"
    required: "{{ stackhpc_sync_ceph_images | bool }}"
  - name: "ceph/haproxy"
    url: "https://quay.io"
    policy: on_demand
    proxy_url: "{{ pulp_proxy_url }}"
    state: present
    include_tags: "{{ cephadm_haproxy_image_tag }}"
    required: "{{ stackhpc_sync_ceph_images | bool }}"
  - name: "ceph/keepalived"
    url: "https://quay.io"
    policy: on_demand
    proxy_url: "{{ pulp_proxy_url }}"
    state: present
    include_tags: "{{ cephadm_keepalived_image_tag }}"
    required: "{{ stackhpc_sync_ceph_images | bool }}"

# List of Ceph container image distributions.
stackhpc_pulp_distribution_container_ceph:
  - name: ceph
    repository: ceph/ceph
    base_path: ceph/ceph
    state: present
    required: "{{ stackhpc_sync_ceph_images | bool }}"
  - name: ceph/haproxy
    repository: ceph/haproxy
    base_path: ceph/haproxy
    state: present
    required: "{{ stackhpc_sync_ceph_images | bool }}"
  - name: ceph/keepalived
    repository: ceph/keepalived
    base_path: ceph/keepalived
    state: present
    required: "{{ stackhpc_sync_ceph_images | bool }}"

# Whether to sync HashiCorp container images.
stackhpc_sync_hashicorp_images: false

# List of HashiCorp container image repositories.
stackhpc_pulp_repository_container_repos_hashicorp:
  - name: "hashicorp/consul"
    url: "https://registry-1.docker.io"
    policy: on_demand
    proxy_url: "{{ pulp_proxy_url }}"
    state: present
    include_tags: "{{ overcloud_consul_docker_tag }}"
    required: "{{ stackhpc_sync_hashicorp_images | bool }}"
  - name: "hashicorp/vault"
    url: "https://registry-1.docker.io"
    policy: on_demand
    proxy_url: "{{ pulp_proxy_url }}"
    state: present
    include_tags: "{{ overcloud_vault_docker_tag }}"
    required: "{{ stackhpc_sync_hashicorp_images | bool }}"

# List of HashiCorp container image distributions.
stackhpc_pulp_distribution_container_hashicorp:
  - name: consul
    repository: hashicorp/consul
    base_path: hashicorp/consul
    state: present
    required: "{{ stackhpc_sync_hashicorp_images | bool }}"
  - name: vault
    repository: hashicorp/vault
    base_path: hashicorp/vault
    state: present
    required: "{{ stackhpc_sync_hashicorp_images | bool }}"

# List of container image repositories.
stackhpc_pulp_repository_container_repos: >-
  {{ (stackhpc_pulp_repository_container_repos_kolla +
      stackhpc_pulp_repository_container_repos_ceph +
      stackhpc_pulp_repository_container_repos_hashicorp) | selectattr('required') }}

# List of container image distributions.
stackhpc_pulp_distribution_container: >-
  {{ (stackhpc_pulp_distribution_container_kolla +
      stackhpc_pulp_distribution_container_ceph +
      stackhpc_pulp_distribution_container_hashicorp) | selectattr('required') }}
