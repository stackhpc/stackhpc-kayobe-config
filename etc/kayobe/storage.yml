---
###############################################################################
# Storage node configuration.

# User with which to access the storages via SSH during bootstrap, in order
# to setup the Kayobe user account. Default is {{ os_distribution }}.
#storage_bootstrap_user:

###############################################################################
# Storage network interface configuration.

# List of networks to which storage nodes are attached.
#storage_network_interfaces:

# List of default networks to which storage nodes are attached.
#storage_default_network_interfaces:

# List of extra networks to which storage nodes are attached.
#storage_extra_network_interfaces:

# Whether this host requires access to Swift networks.
#storage_needs_swift_network:

#storage_needs_swift_replication_network:

###############################################################################
# Storage node BIOS configuration.

# Dict of storage BIOS options. Format is same as that used by stackhpc.drac
# role.
#storage_bios_config:

# Dict of default storage BIOS options. Format is same as that used by
# stackhpc.drac role.
#storage_bios_config_default:

# Dict of additional storage BIOS options. Format is same as that used by
# stackhpc.drac role.
#storage_bios_config_extra:

###############################################################################
# Storage node RAID configuration.

# List of storage RAID volumes. Format is same as that used by stackhpc.drac
# role.
#storage_raid_config:

# List of default storage RAID volumes. Format is same as that used by
# stackhpc.drac role.
#storage_raid_config_default:

# List of additional storage RAID volumes. Format is same as that used by
# stackhpc.drac role.
#storage_raid_config_extra:

###############################################################################
# Storage node software RAID configuration.

# List of software RAID arrays. See mrlesmithjr.mdadm role for format.
#storage_mdadm_arrays:

###############################################################################
# Storage node encryption configuration.

# List of block devices to encrypt. See stackhpc.luks role for format.
#storage_luks_devices:

###############################################################################
# Storage node LVM configuration.

# List of storage volume groups. See mrlesmithjr.manage_lvm role for
# format.
#storage_lvm_groups:

# Default list of storage volume groups. See mrlesmithjr.manage_lvm role for
# format.
#storage_lvm_groups_default:

# Additional list of storage volume groups. See mrlesmithjr.manage_lvm role
# for format.
#storage_lvm_groups_extra:

# Whether a 'data' LVM volume group should exist on storage hosts. By default
# this contains a 'docker-volumes' logical volume for Docker volume storage. It
# will also be used for Docker container and image storage if
# 'docker_storage_driver' is set to 'devicemapper'. Default is true if
# 'docker_storage_driver' is set to 'devicemapper', or false otherwise.
#storage_lvm_group_data_enabled:

# Storage LVM volume group for data. See mrlesmithjr.manage_lvm role for
# format.
#storage_lvm_group_data:

# List of disks for use by storage LVM data volume group. Default to an
# invalid value to require configuration.
#storage_lvm_group_data_disks:

# List of LVM logical volumes for the data volume group.
#storage_lvm_group_data_lvs:

# Docker volumes LVM backing volume.
#storage_lvm_group_data_lv_docker_volumes:

# Size of docker volumes LVM backing volume.
#storage_lvm_group_data_lv_docker_volumes_size:

# Filesystem for docker volumes LVM backing volume. ext4 allows for shrinking.
#storage_lvm_group_data_lv_docker_volumes_fs:

###############################################################################
# Storage node sysctl configuration.

# Dict of sysctl parameters to set.
#storage_sysctl_parameters:

###############################################################################
# Storage node tuned configuration.

# Builtin tuned profile to use. Format is same as that used by giovtorres.tuned
# role. Default is throughput-performance.
#storage_tuned_active_builtin_profile:

###############################################################################
# Storage node user configuration.

# List of users to create. This should be in a format accepted by the
# singleplatform-eng.users role.
#storage_users:

###############################################################################
# Storage node firewalld configuration.

# FIXME: Replace concrete names (provision_oc) with abstract net names ({{
# provision_oc_net_name }}).

# Whether to install and enable firewalld.
storage_firewalld_enabled: true

# A list of zones to create. Each item is a dict containing a 'zone' item.
storage_firewalld_zones: "{{ storage_firewalld_zones_default | union(storage_firewalld_zones_extra) | unique | select }}"

storage_firewalld_zones_default: |
  {% set network_zones = [] %}
  {% for network in network_interfaces %}
  {% if network | net_zone is not none %}
  {% set _ = network_zones.append({'zone': network | net_zone }) %}
  {% endif %}
  {% endfor %}
  {{ network_zones }}

storage_firewalld_zones_extra: []

# A firewalld zone to set as the default. Default is unset, in which case the
# default zone will not be changed.
# FIXME: Try setting to drop
storage_firewalld_default_zone: trusted

# A list of firewall rules to apply. Each item is a dict containing arguments
# to pass to the firewalld module. Arguments are omitted if not provided, with
# the following exceptions:
# - offline: true
# - permanent: true
# - state: enabled
storage_firewalld_rules: "{{ storage_firewalld_rules_default | selectattr('enabled', 'true') | map(attribute='rules') | flatten | selectattr('network', 'in', network_interfaces) | selectattr('zone') | union(storage_firewalld_rules_extra) | unique | select }}"

storage_firewalld_default:
  # Common
  - rules:
      - service: ssh
        zone: "{{ provision_oc_net_name | net_zone }}"
        network: "{{ provision_oc_net_name }}"
        state: enabled
      - port: 9283/tcp
        zone: "{{ provision_oc_net_name | net_zone }}"
        network: "{{ provision_oc_net_name }}"
        state: enabled
    enabled: true
  - rules:
      - service: ssh
        zone: "{{ storage_net_name | net_zone }}"
        network: "{{ storage_net_name }}"
        state: "{{ storage_net_name | net_zone != provision_oc_net_name | net_zone}}"
    enabled: true
  # Ceph
  - rules:
      - service: ceph
        zone: "{{ storage_net_name | net_zone }}"
        network: "{{ storage_net_name }}"
        state: enabled
      - service: ceph-mon
        zone: "{{ storage_net_name | net_zone }}"
        network: "{{ storage_net_name }}"
        state: "{{ 'enabled' if 'mons' in group_names else 'disabled' }}"
    enabled: "{{ stackhpc_enable_ceph | default(false) | bool }}"

storage_firewalld_extra: []

###############################################################################
# Storage node swap configuration.

# List of swap devices. Each item is a dict containing a 'device' item. Default
# is an empty list.
# storage_swap:

###############################################################################
# Dummy variable to allow Ansible to accept this file.
workaround_ansible_issue_8743: yes
